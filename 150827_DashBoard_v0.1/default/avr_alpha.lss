
avr_alpha.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00003c66  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000018  00802000  00003c66  00003cfa  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000010f  00802018  00802018  00003d12  2**0
                  ALLOC
  3 .debug_aranges 00000080  00000000  00000000  00003d12  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 000003b3  00000000  00000000  00003d92  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001a7a  00000000  00000000  00004145  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000063e  00000000  00000000  00005bbf  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000d0c  00000000  00000000  000061fd  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000290  00000000  00000000  00006f0c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000009bc  00000000  00000000  0000719c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000e3c  00000000  00000000  00007b58  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000090  00000000  00000000  00008994  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 e4 00 	jmp	0x1c8	; 0x1c8 <__ctors_end>
       4:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
       8:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
       c:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      10:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      14:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      18:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      1c:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      20:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      24:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      28:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      2c:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      30:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      34:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      38:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      3c:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      40:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      44:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      48:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      4c:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      50:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      54:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      58:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      5c:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      60:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      64:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      68:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      6c:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      70:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      74:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      78:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      7c:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      80:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      84:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      88:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      8c:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      90:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      94:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      98:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      9c:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      a0:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      a4:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      a8:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      ac:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      b0:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      b4:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      b8:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      bc:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      c0:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      c4:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      c8:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      cc:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      d0:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      d4:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      d8:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      dc:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      e0:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      e4:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      e8:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      ec:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      f0:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      f4:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      f8:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      fc:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     100:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     104:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     108:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     10c:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     110:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     114:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     118:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     11c:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     120:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     124:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     128:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     12c:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     130:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     134:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     138:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     13c:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     140:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     144:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     148:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     14c:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     150:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     154:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     158:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     15c:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     160:	0c 94 84 01 	jmp	0x308	; 0x308 <__vector_88>
     164:	0c 94 5a 01 	jmp	0x2b4	; 0x2b4 <__vector_89>
     168:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     16c:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     170:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     174:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     178:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     17c:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     180:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     184:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     188:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     18c:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     190:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     194:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     198:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     19c:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     1a0:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     1a4:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     1a8:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     1ac:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     1b0:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     1b4:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     1b8:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     1bc:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     1c0:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     1c4:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>

000001c8 <__ctors_end>:
     1c8:	11 24       	eor	r1, r1
     1ca:	1f be       	out	0x3f, r1	; 63
     1cc:	cf ef       	ldi	r28, 0xFF	; 255
     1ce:	df e3       	ldi	r29, 0x3F	; 63
     1d0:	de bf       	out	0x3e, r29	; 62
     1d2:	cd bf       	out	0x3d, r28	; 61
     1d4:	00 e0       	ldi	r16, 0x00	; 0
     1d6:	0c bf       	out	0x3c, r16	; 60

000001d8 <__do_copy_data>:
     1d8:	10 e2       	ldi	r17, 0x20	; 32
     1da:	a0 e0       	ldi	r26, 0x00	; 0
     1dc:	b0 e2       	ldi	r27, 0x20	; 32
     1de:	e6 e6       	ldi	r30, 0x66	; 102
     1e0:	fc e3       	ldi	r31, 0x3C	; 60
     1e2:	00 e0       	ldi	r16, 0x00	; 0
     1e4:	0b bf       	out	0x3b, r16	; 59
     1e6:	02 c0       	rjmp	.+4      	; 0x1ec <__do_copy_data+0x14>
     1e8:	07 90       	elpm	r0, Z+
     1ea:	0d 92       	st	X+, r0
     1ec:	a8 31       	cpi	r26, 0x18	; 24
     1ee:	b1 07       	cpc	r27, r17
     1f0:	d9 f7       	brne	.-10     	; 0x1e8 <__do_copy_data+0x10>

000001f2 <__do_clear_bss>:
     1f2:	11 e2       	ldi	r17, 0x21	; 33
     1f4:	a8 e1       	ldi	r26, 0x18	; 24
     1f6:	b0 e2       	ldi	r27, 0x20	; 32
     1f8:	01 c0       	rjmp	.+2      	; 0x1fc <.do_clear_bss_start>

000001fa <.do_clear_bss_loop>:
     1fa:	1d 92       	st	X+, r1

000001fc <.do_clear_bss_start>:
     1fc:	a7 32       	cpi	r26, 0x27	; 39
     1fe:	b1 07       	cpc	r27, r17
     200:	e1 f7       	brne	.-8      	; 0x1fa <.do_clear_bss_loop>
     202:	0e 94 07 01 	call	0x20e	; 0x20e <main>
     206:	0c 94 31 1e 	jmp	0x3c62	; 0x3c62 <_exit>

0000020a <__bad_interrupt>:
     20a:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000020e <main>:
}



int main(void)
{
     20e:	1f 93       	push	r17
     uint8_t i;

     /* This PORT setting is only valid to USARTC0 if other USARTs is used a
      * different PORT and/or pins are used. */
     /* PC3 (TXD0) as output. */
     PORTD.DIRSET   = PIN3_bm;
     210:	e0 e6       	ldi	r30, 0x60	; 96
     212:	f6 e0       	ldi	r31, 0x06	; 6
     214:	18 e0       	ldi	r17, 0x08	; 8
     216:	11 83       	std	Z+1, r17	; 0x01
     /* PC2 (RXD0) as input. */
     PORTD.DIRCLR   = PIN2_bm;
     218:	84 e0       	ldi	r24, 0x04	; 4
     21a:	82 83       	std	Z+2, r24	; 0x02

     /* Use USARTC0 and initialize buffers. */
     USART_InterruptDriver_Initialize(&USART_data, &USART, USART_DREINTLVL_LO_gc);
     21c:	8c e1       	ldi	r24, 0x1C	; 28
     21e:	90 e2       	ldi	r25, 0x20	; 32
     220:	60 ea       	ldi	r22, 0xA0	; 160
     222:	79 e0       	ldi	r23, 0x09	; 9
     224:	41 e0       	ldi	r20, 0x01	; 1
     226:	0e 94 e7 02 	call	0x5ce	; 0x5ce <USART_InterruptDriver_Initialize>

     /* USARTC0, 8 Data bits, No Parity, 1 Stop bit. */
     USART_Format_Set(USART_data.usart, USART_CHSIZE_8BIT_gc,
     22a:	e0 91 1c 20 	lds	r30, 0x201C
     22e:	f0 91 1d 20 	lds	r31, 0x201D
     232:	83 e0       	ldi	r24, 0x03	; 3
     234:	85 83       	std	Z+5, r24	; 0x05
                  USART_PMODE_DISABLED_gc, false);

     /* Enable RXC interrupt. */
     USART_RxdInterruptLevel_Set(USART_data.usart, USART_RXCINTLVL_LO_gc);
     236:	83 81       	ldd	r24, Z+3	; 0x03
     238:	8f 7c       	andi	r24, 0xCF	; 207
     23a:	80 61       	ori	r24, 0x10	; 16
     23c:	83 83       	std	Z+3, r24	; 0x03
      * Do not use the baudrate scale factor
      *
      * Baudrate select = (1/(16*(((I/O clock frequency)/Baudrate)-1)
      *                 = 12
      */
     USART_Baudrate_Set(&USART, 8,1); //8,0
     23e:	a0 ea       	ldi	r26, 0xA0	; 160
     240:	b9 e0       	ldi	r27, 0x09	; 9
     242:	16 96       	adiw	r26, 0x06	; 6
     244:	1c 93       	st	X, r17
     246:	16 97       	sbiw	r26, 0x06	; 6
     248:	80 e1       	ldi	r24, 0x10	; 16
     24a:	17 96       	adiw	r26, 0x07	; 7
     24c:	8c 93       	st	X, r24

     /* Enable both RX and TX. */
     USART_Rx_Enable(USART_data.usart);
     24e:	84 81       	ldd	r24, Z+4	; 0x04
     250:	80 61       	ori	r24, 0x10	; 16
     252:	84 83       	std	Z+4, r24	; 0x04
     USART_Tx_Enable(USART_data.usart);
     254:	84 81       	ldd	r24, Z+4	; 0x04
     256:	88 60       	ori	r24, 0x08	; 8
     258:	84 83       	std	Z+4, r24	; 0x04

     /* Enable PMIC interrupt level low. */
     PMIC.CTRL |= PMIC_LOLVLEX_bm;
     25a:	80 91 a2 00 	lds	r24, 0x00A2
     25e:	81 60       	ori	r24, 0x01	; 1
     260:	e0 ea       	ldi	r30, 0xA0	; 160
     262:	f0 e0       	ldi	r31, 0x00	; 0
     264:	82 83       	std	Z+2, r24	; 0x02

     /* Enable global interrupts. */
     sei();
     266:	78 94       	sei
     268:	10 e0       	ldi	r17, 0x00	; 0
     26a:	11 c0       	rjmp	.+34     	; 0x28e <main+0x80>
		 /* Fetch received data as it is received. */
	     i = 0;
	     while (i < NUM_BYTES) {
		 		 //receiveArray[i] = USART_GetChar(USART_data.usart);
					/**/
	             if (USART_RXBufferData_Available(&USART_data)) {
     26c:	8c e1       	ldi	r24, 0x1C	; 28
     26e:	90 e2       	ldi	r25, 0x20	; 32
     270:	0e 94 2b 03 	call	0x656	; 0x656 <USART_RXBufferData_Available>
     274:	88 23       	and	r24, r24
     276:	51 f0       	breq	.+20     	; 0x28c <main+0x7e>
	                     receiveArray[i] = USART_RXBuffer_GetByte(&USART_data);
     278:	8c e1       	ldi	r24, 0x1C	; 28
     27a:	90 e2       	ldi	r25, 0x20	; 32
     27c:	0e 94 35 03 	call	0x66a	; 0x66a <USART_RXBuffer_GetByte>
     280:	e1 2f       	mov	r30, r17
     282:	f0 e0       	ldi	r31, 0x00	; 0
     284:	e7 5e       	subi	r30, 0xE7	; 231
     286:	ff 4d       	sbci	r31, 0xDF	; 223
     288:	80 83       	st	Z, r24
	                     i++;
     28a:	1f 5f       	subi	r17, 0xFF	; 255
	             }/**/
				 i++;
     28c:	1f 5f       	subi	r17, 0xFF	; 255
     sei();

	 while(1){
		 /* Fetch received data as it is received. */
	     i = 0;
	     while (i < NUM_BYTES) {
     28e:	13 30       	cpi	r17, 0x03	; 3
     290:	68 f3       	brcs	.-38     	; 0x26c <main+0x5e>
     292:	10 e0       	ldi	r17, 0x00	; 0

	     /* Send sendArray. */
	     i = 0;
	     while (i < NUM_BYTES) {
	             bool byteToBuffer;
	             byteToBuffer = USART_TXBuffer_PutByte(&USART_data, receiveArray[i]);
     294:	e1 2f       	mov	r30, r17
     296:	f0 e0       	ldi	r31, 0x00	; 0
     298:	e7 5e       	subi	r30, 0xE7	; 231
     29a:	ff 4d       	sbci	r31, 0xDF	; 223
     29c:	8c e1       	ldi	r24, 0x1C	; 28
     29e:	90 e2       	ldi	r25, 0x20	; 32
     2a0:	60 81       	ld	r22, Z
     2a2:	0e 94 02 03 	call	0x604	; 0x604 <USART_TXBuffer_PutByte>
	             if(byteToBuffer){
     2a6:	88 23       	and	r24, r24
     2a8:	a9 f3       	breq	.-22     	; 0x294 <main+0x86>
	                     i++;
     2aa:	1f 5f       	subi	r17, 0xFF	; 255
	     }


	     /* Send sendArray. */
	     i = 0;
	     while (i < NUM_BYTES) {
     2ac:	13 30       	cpi	r17, 0x03	; 3
     2ae:	90 f3       	brcs	.-28     	; 0x294 <main+0x86>
     2b0:	10 e0       	ldi	r17, 0x00	; 0
     2b2:	dc cf       	rjmp	.-72     	; 0x26c <main+0x5e>

000002b4 <__vector_89>:
     USART_RXComplete(&USART_data);
}


ISR(USARTD0_DRE_vect)
{
     2b4:	1f 92       	push	r1
     2b6:	0f 92       	push	r0
     2b8:	0f b6       	in	r0, 0x3f	; 63
     2ba:	0f 92       	push	r0
     2bc:	0b b6       	in	r0, 0x3b	; 59
     2be:	0f 92       	push	r0
     2c0:	11 24       	eor	r1, r1
     2c2:	2f 93       	push	r18
     2c4:	3f 93       	push	r19
     2c6:	4f 93       	push	r20
     2c8:	5f 93       	push	r21
     2ca:	6f 93       	push	r22
     2cc:	7f 93       	push	r23
     2ce:	8f 93       	push	r24
     2d0:	9f 93       	push	r25
     2d2:	af 93       	push	r26
     2d4:	bf 93       	push	r27
     2d6:	ef 93       	push	r30
     2d8:	ff 93       	push	r31
     USART_DataRegEmpty(&USART_data);
     2da:	8c e1       	ldi	r24, 0x1C	; 28
     2dc:	90 e2       	ldi	r25, 0x20	; 32
     2de:	0e 94 60 03 	call	0x6c0	; 0x6c0 <USART_DataRegEmpty>
}
     2e2:	ff 91       	pop	r31
     2e4:	ef 91       	pop	r30
     2e6:	bf 91       	pop	r27
     2e8:	af 91       	pop	r26
     2ea:	9f 91       	pop	r25
     2ec:	8f 91       	pop	r24
     2ee:	7f 91       	pop	r23
     2f0:	6f 91       	pop	r22
     2f2:	5f 91       	pop	r21
     2f4:	4f 91       	pop	r20
     2f6:	3f 91       	pop	r19
     2f8:	2f 91       	pop	r18
     2fa:	0f 90       	pop	r0
     2fc:	0b be       	out	0x3b, r0	; 59
     2fe:	0f 90       	pop	r0
     300:	0f be       	out	0x3f, r0	; 63
     302:	0f 90       	pop	r0
     304:	1f 90       	pop	r1
     306:	18 95       	reti

00000308 <__vector_88>:
bool success;



ISR(USARTD0_RXC_vect)
{
     308:	1f 92       	push	r1
     30a:	0f 92       	push	r0
     30c:	0f b6       	in	r0, 0x3f	; 63
     30e:	0f 92       	push	r0
     310:	0b b6       	in	r0, 0x3b	; 59
     312:	0f 92       	push	r0
     314:	11 24       	eor	r1, r1
     316:	2f 93       	push	r18
     318:	3f 93       	push	r19
     31a:	4f 93       	push	r20
     31c:	5f 93       	push	r21
     31e:	6f 93       	push	r22
     320:	7f 93       	push	r23
     322:	8f 93       	push	r24
     324:	9f 93       	push	r25
     326:	af 93       	push	r26
     328:	bf 93       	push	r27
     32a:	ef 93       	push	r30
     32c:	ff 93       	push	r31
     USART_RXComplete(&USART_data);
     32e:	8c e1       	ldi	r24, 0x1C	; 28
     330:	90 e2       	ldi	r25, 0x20	; 32
     332:	0e 94 41 03 	call	0x682	; 0x682 <USART_RXComplete>
}
     336:	ff 91       	pop	r31
     338:	ef 91       	pop	r30
     33a:	bf 91       	pop	r27
     33c:	af 91       	pop	r26
     33e:	9f 91       	pop	r25
     340:	8f 91       	pop	r24
     342:	7f 91       	pop	r23
     344:	6f 91       	pop	r22
     346:	5f 91       	pop	r21
     348:	4f 91       	pop	r20
     34a:	3f 91       	pop	r19
     34c:	2f 91       	pop	r18
     34e:	0f 90       	pop	r0
     350:	0b be       	out	0x3b, r0	; 59
     352:	0f 90       	pop	r0
     354:	0f be       	out	0x3f, r0	; 63
     356:	0f 90       	pop	r0
     358:	1f 90       	pop	r1
     35a:	18 95       	reti

0000035c <SPI_MasterInit>:
                    bool lsbFirst,
                    SPI_MODE_t mode,
                    SPI_INTLVL_t intLevel,
                    bool clk2x,
                    SPI_PRESCALER_t clockDivision)
{
     35c:	af 92       	push	r10
     35e:	cf 92       	push	r12
     360:	ef 92       	push	r14
     362:	0f 93       	push	r16
     364:	dc 01       	movw	r26, r24
     366:	fa 01       	movw	r30, r20
	spi->module         = module;
     368:	6d 93       	st	X+, r22
     36a:	7c 93       	st	X, r23
     36c:	11 97       	sbiw	r26, 0x01	; 1
	spi->port           = port;
     36e:	12 96       	adiw	r26, 0x02	; 2
     370:	4d 93       	st	X+, r20
     372:	5c 93       	st	X, r21
     374:	13 97       	sbiw	r26, 0x03	; 3
	spi->interrupted    = false;
     376:	14 96       	adiw	r26, 0x04	; 4
     378:	1c 92       	st	X, r1
     37a:	14 97       	sbiw	r26, 0x04	; 4

	spi->port->DIRSET  = SPI_SS_bm;
     37c:	80 e1       	ldi	r24, 0x10	; 16
     37e:	81 83       	std	Z+1, r24	; 0x01

	spi->module->CTRL   = clockDivision |                  /* SPI prescaler. */
     380:	ed 91       	ld	r30, X+
     382:	fc 91       	ld	r31, X
     384:	11 97       	sbiw	r26, 0x01	; 1
     386:	cc 20       	and	r12, r12
     388:	11 f4       	brne	.+4      	; 0x38e <SPI_MasterInit+0x32>
     38a:	90 e0       	ldi	r25, 0x00	; 0
     38c:	01 c0       	rjmp	.+2      	; 0x390 <SPI_MasterInit+0x34>
     38e:	90 e8       	ldi	r25, 0x80	; 128
     390:	22 23       	and	r18, r18
     392:	11 f4       	brne	.+4      	; 0x398 <SPI_MasterInit+0x3c>
     394:	80 e0       	ldi	r24, 0x00	; 0
     396:	01 c0       	rjmp	.+2      	; 0x39a <SPI_MasterInit+0x3e>
     398:	80 e2       	ldi	r24, 0x20	; 32
     39a:	00 65       	ori	r16, 0x50	; 80
     39c:	0a 29       	or	r16, r10
     39e:	90 2b       	or	r25, r16
     3a0:	89 2b       	or	r24, r25
     3a2:	80 83       	st	Z, r24
	                      (lsbFirst ? SPI_DORD_bm  : 0) |  /* Data order. */
	                      SPI_MASTER_bm |                  /* SPI master. */
	                      mode;                            /* SPI mode. */

	/* Interrupt level. */
	spi->module->INTCTRL = intLevel;
     3a4:	ed 91       	ld	r30, X+
     3a6:	fc 91       	ld	r31, X
     3a8:	11 97       	sbiw	r26, 0x01	; 1
     3aa:	e1 82       	std	Z+1, r14	; 0x01

	/* No assigned data packet. */
	spi->dataPacket = NULL;
     3ac:	15 96       	adiw	r26, 0x05	; 5
     3ae:	1d 92       	st	X+, r1
     3b0:	1c 92       	st	X, r1
     3b2:	16 97       	sbiw	r26, 0x06	; 6

 	/* MOSI and SCK as output. */
	spi->port->DIRSET  = SPI_MOSI_bm | SPI_SCK_bm;
     3b4:	12 96       	adiw	r26, 0x02	; 2
     3b6:	ed 91       	ld	r30, X+
     3b8:	fc 91       	ld	r31, X
     3ba:	13 97       	sbiw	r26, 0x03	; 3
     3bc:	80 ea       	ldi	r24, 0xA0	; 160
     3be:	81 83       	std	Z+1, r24	; 0x01
}
     3c0:	0f 91       	pop	r16
     3c2:	ef 90       	pop	r14
     3c4:	cf 90       	pop	r12
     3c6:	af 90       	pop	r10
     3c8:	08 95       	ret

000003ca <SPI_SlaveInit>:
                   SPI_t *module,
                   PORT_t *port,
                   bool lsbFirst,
                   SPI_MODE_t mode,
                   SPI_INTLVL_t intLevel)
{
     3ca:	ef 92       	push	r14
     3cc:	0f 93       	push	r16
     3ce:	dc 01       	movw	r26, r24
     3d0:	fb 01       	movw	r30, r22
	/* SPI module. */
	spi->module       = module;
     3d2:	6d 93       	st	X+, r22
     3d4:	7c 93       	st	X, r23
     3d6:	11 97       	sbiw	r26, 0x01	; 1
	spi->port         = port;
     3d8:	12 96       	adiw	r26, 0x02	; 2
     3da:	4d 93       	st	X+, r20
     3dc:	5c 93       	st	X, r21
     3de:	13 97       	sbiw	r26, 0x03	; 3

	spi->module->CTRL = SPI_ENABLE_bm |                /* Enable SPI module. */
     3e0:	22 23       	and	r18, r18
     3e2:	11 f4       	brne	.+4      	; 0x3e8 <SPI_SlaveInit+0x1e>
     3e4:	80 e4       	ldi	r24, 0x40	; 64
     3e6:	01 c0       	rjmp	.+2      	; 0x3ea <SPI_SlaveInit+0x20>
     3e8:	80 e6       	ldi	r24, 0x60	; 96
     3ea:	80 2b       	or	r24, r16
     3ec:	80 83       	st	Z, r24
	                    (lsbFirst ? SPI_DORD_bm : 0) | /* Data order. */
	                    mode;                          /* SPI mode. */

	/* Interrupt level. */
	spi->module->INTCTRL = intLevel;
     3ee:	ed 91       	ld	r30, X+
     3f0:	fc 91       	ld	r31, X
     3f2:	11 97       	sbiw	r26, 0x01	; 1
     3f4:	e1 82       	std	Z+1, r14	; 0x01

	/* MISO as output. */
	spi->port->DIRSET = SPI_MISO_bm;
     3f6:	12 96       	adiw	r26, 0x02	; 2
     3f8:	ed 91       	ld	r30, X+
     3fa:	fc 91       	ld	r31, X
     3fc:	13 97       	sbiw	r26, 0x03	; 3
     3fe:	80 e4       	ldi	r24, 0x40	; 64
     400:	81 83       	std	Z+1, r24	; 0x01
}
     402:	0f 91       	pop	r16
     404:	ef 90       	pop	r14
     406:	08 95       	ret

00000408 <SPI_MasterCreateDataPacket>:
                                const uint8_t *transmitData,
                                uint8_t *receiveData,
                                uint8_t bytesToTransceive,
                                PORT_t *ssPort,
                                uint8_t ssPinMask)
{
     408:	ef 92       	push	r14
     40a:	0f 93       	push	r16
     40c:	1f 93       	push	r17
     40e:	fc 01       	movw	r30, r24
	dataPacket->ssPort            = ssPort;
     410:	00 83       	st	Z, r16
     412:	11 83       	std	Z+1, r17	; 0x01
	dataPacket->ssPinMask         = ssPinMask;
     414:	e2 82       	std	Z+2, r14	; 0x02
	dataPacket->transmitData      = transmitData;
     416:	63 83       	std	Z+3, r22	; 0x03
     418:	74 83       	std	Z+4, r23	; 0x04
	dataPacket->receiveData       = receiveData;
     41a:	45 83       	std	Z+5, r20	; 0x05
     41c:	56 83       	std	Z+6, r21	; 0x06
	dataPacket->bytesToTransceive  = bytesToTransceive;
     41e:	27 83       	std	Z+7, r18	; 0x07
	dataPacket->bytesTransceived   = 0;
     420:	10 86       	std	Z+8, r1	; 0x08
	dataPacket->complete          = false;
     422:	11 86       	std	Z+9, r1	; 0x09
}
     424:	1f 91       	pop	r17
     426:	0f 91       	pop	r16
     428:	ef 90       	pop	r14
     42a:	08 95       	ret

0000042c <SPI_MasterInterruptHandler>:
 *  a pointer to the related SPI_Master_t struct as argument.
 *
 *  \param spi        Pointer to the modules own SPI_Master_t struct.
 */
void SPI_MasterInterruptHandler(SPI_Master_t *spi)
{
     42c:	cf 93       	push	r28
     42e:	df 93       	push	r29
     430:	dc 01       	movw	r26, r24
	uint8_t data;
	uint8_t bytesTransceived = spi->dataPacket->bytesTransceived;
     432:	15 96       	adiw	r26, 0x05	; 5
     434:	cd 91       	ld	r28, X+
     436:	dc 91       	ld	r29, X
     438:	16 97       	sbiw	r26, 0x06	; 6
     43a:	98 85       	ldd	r25, Y+8	; 0x08

	/* If SS pin interrupt (SS used and pulled low).
	*  No data received at this point. */
	if ( !(spi->module->CTRL & SPI_MASTER_bm) ) {
     43c:	ed 91       	ld	r30, X+
     43e:	fc 91       	ld	r31, X
     440:	11 97       	sbiw	r26, 0x01	; 1
     442:	80 81       	ld	r24, Z
     444:	84 fd       	sbrc	r24, 4
     446:	05 c0       	rjmp	.+10     	; 0x452 <SPI_MasterInterruptHandler+0x26>
		spi->interrupted = true;
     448:	81 e0       	ldi	r24, 0x01	; 1
     44a:	14 96       	adiw	r26, 0x04	; 4
     44c:	8c 93       	st	X, r24
     44e:	14 97       	sbiw	r26, 0x04	; 4
     450:	24 c0       	rjmp	.+72     	; 0x49a <SPI_MasterInterruptHandler+0x6e>
	}

	else {  /* Data interrupt. */

		/* Store received data. */
		data = spi->module->DATA;
     452:	83 81       	ldd	r24, Z+3	; 0x03
		spi->dataPacket->receiveData[bytesTransceived] = data;
     454:	ed 81       	ldd	r30, Y+5	; 0x05
     456:	fe 81       	ldd	r31, Y+6	; 0x06
     458:	e9 0f       	add	r30, r25
     45a:	f1 1d       	adc	r31, r1
     45c:	80 83       	st	Z, r24

		/* Next byte. */
		bytesTransceived++;
     45e:	9f 5f       	subi	r25, 0xFF	; 255

		/* If more data. */
		if (bytesTransceived < spi->dataPacket->bytesToTransceive) {
     460:	15 96       	adiw	r26, 0x05	; 5
     462:	ed 91       	ld	r30, X+
     464:	fc 91       	ld	r31, X
     466:	16 97       	sbiw	r26, 0x06	; 6
     468:	87 81       	ldd	r24, Z+7	; 0x07
     46a:	98 17       	cp	r25, r24
     46c:	58 f4       	brcc	.+22     	; 0x484 <SPI_MasterInterruptHandler+0x58>
			/* Put data byte in transmit data register. */
			data = spi->dataPacket->transmitData[bytesTransceived];
     46e:	03 80       	ldd	r0, Z+3	; 0x03
     470:	f4 81       	ldd	r31, Z+4	; 0x04
     472:	e0 2d       	mov	r30, r0
     474:	e9 0f       	add	r30, r25
     476:	f1 1d       	adc	r31, r1
     478:	80 81       	ld	r24, Z
			spi->module->DATA = data;
     47a:	ed 91       	ld	r30, X+
     47c:	fc 91       	ld	r31, X
     47e:	11 97       	sbiw	r26, 0x01	; 1
     480:	83 83       	std	Z+3, r24	; 0x03
     482:	0b c0       	rjmp	.+22     	; 0x49a <SPI_MasterInterruptHandler+0x6e>

		/* Transmission complete. */
		else {

			/* Release SS to slave(s). */
			uint8_t ssPinMask = spi->dataPacket->ssPinMask;
     484:	82 81       	ldd	r24, Z+2	; 0x02
			SPI_MasterSSHigh(spi->dataPacket->ssPort, ssPinMask);
     486:	01 90       	ld	r0, Z+
     488:	f0 81       	ld	r31, Z
     48a:	e0 2d       	mov	r30, r0
     48c:	85 83       	std	Z+5, r24	; 0x05

			spi->dataPacket->complete = true;
     48e:	15 96       	adiw	r26, 0x05	; 5
     490:	ed 91       	ld	r30, X+
     492:	fc 91       	ld	r31, X
     494:	16 97       	sbiw	r26, 0x06	; 6
     496:	81 e0       	ldi	r24, 0x01	; 1
     498:	81 87       	std	Z+9, r24	; 0x09
		}
	}
	/* Write back bytesTransceived to data packet. */
	spi->dataPacket->bytesTransceived = bytesTransceived;
     49a:	15 96       	adiw	r26, 0x05	; 5
     49c:	ed 91       	ld	r30, X+
     49e:	fc 91       	ld	r31, X
     4a0:	16 97       	sbiw	r26, 0x06	; 6
     4a2:	90 87       	std	Z+8, r25	; 0x08
}
     4a4:	df 91       	pop	r29
     4a6:	cf 91       	pop	r28
     4a8:	08 95       	ret

000004aa <SPI_MasterInterruptTransceivePacket>:
 *  \retval SPI_BUSY          The SPI module is busy.
 *  \retval SPI_INTERRUPTED   The transmission was interrupted by another master.
 */
uint8_t SPI_MasterInterruptTransceivePacket(SPI_Master_t *spi,
                                            SPI_DataPacket_t *dataPacket)
{
     4aa:	cf 93       	push	r28
     4ac:	df 93       	push	r29
     4ae:	dc 01       	movw	r26, r24
     4b0:	eb 01       	movw	r28, r22
	uint8_t data;
	bool interrupted = spi->interrupted;
     4b2:	14 96       	adiw	r26, 0x04	; 4
     4b4:	9c 91       	ld	r25, X
     4b6:	14 97       	sbiw	r26, 0x04	; 4

	/* If no packets sent so far. */
	if (spi->dataPacket == NULL) {
     4b8:	15 96       	adiw	r26, 0x05	; 5
     4ba:	ed 91       	ld	r30, X+
     4bc:	fc 91       	ld	r31, X
     4be:	16 97       	sbiw	r26, 0x06	; 6
     4c0:	30 97       	sbiw	r30, 0x00	; 0
     4c2:	29 f4       	brne	.+10     	; 0x4ce <SPI_MasterInterruptTransceivePacket+0x24>
		spi->dataPacket = dataPacket;
     4c4:	15 96       	adiw	r26, 0x05	; 5
     4c6:	6d 93       	st	X+, r22
     4c8:	7c 93       	st	X, r23
     4ca:	16 97       	sbiw	r26, 0x06	; 6
     4cc:	10 c0       	rjmp	.+32     	; 0x4ee <SPI_MasterInterruptTransceivePacket+0x44>
	}

	/* If ongoing transmission. */
	else if (spi->dataPacket->complete == false) {
     4ce:	81 85       	ldd	r24, Z+9	; 0x09
     4d0:	88 23       	and	r24, r24
     4d2:	11 f4       	brne	.+4      	; 0x4d8 <SPI_MasterInterruptTransceivePacket+0x2e>
     4d4:	82 e0       	ldi	r24, 0x02	; 2
     4d6:	28 c0       	rjmp	.+80     	; 0x528 <SPI_MasterInterruptTransceivePacket+0x7e>
		return (SPI_BUSY);
	}

	/* If interrupted by other master. */
	else if (interrupted) {
     4d8:	99 23       	and	r25, r25
     4da:	49 f0       	breq	.+18     	; 0x4ee <SPI_MasterInterruptTransceivePacket+0x44>
		/* If SS released. */
		if (spi->port->OUT & SPI_SS_bm) {
     4dc:	12 96       	adiw	r26, 0x02	; 2
     4de:	ed 91       	ld	r30, X+
     4e0:	fc 91       	ld	r31, X
     4e2:	13 97       	sbiw	r26, 0x03	; 3
     4e4:	84 81       	ldd	r24, Z+4	; 0x04
     4e6:	84 fd       	sbrc	r24, 4
     4e8:	02 c0       	rjmp	.+4      	; 0x4ee <SPI_MasterInterruptTransceivePacket+0x44>
     4ea:	81 e0       	ldi	r24, 0x01	; 1
     4ec:	1d c0       	rjmp	.+58     	; 0x528 <SPI_MasterInterruptTransceivePacket+0x7e>
		}
	}

	/* NOT interrupted by other master.
	* Start transmission. */
	spi->dataPacket = dataPacket;
     4ee:	15 96       	adiw	r26, 0x05	; 5
     4f0:	cd 93       	st	X+, r28
     4f2:	dc 93       	st	X, r29
     4f4:	16 97       	sbiw	r26, 0x06	; 6
	spi->dataPacket->complete = false;
     4f6:	19 86       	std	Y+9, r1	; 0x09
	spi->interrupted = false;
     4f8:	14 96       	adiw	r26, 0x04	; 4
     4fa:	1c 92       	st	X, r1
     4fc:	14 97       	sbiw	r26, 0x04	; 4

	/* SS to slave(s) low.*/
	uint8_t ssPinMask = spi->dataPacket->ssPinMask;
     4fe:	8a 81       	ldd	r24, Y+2	; 0x02
	SPI_MasterSSLow(spi->dataPacket->ssPort, ssPinMask);
     500:	e8 81       	ld	r30, Y
     502:	f9 81       	ldd	r31, Y+1	; 0x01
     504:	86 83       	std	Z+6, r24	; 0x06

	spi->dataPacket->bytesTransceived = 0;
     506:	15 96       	adiw	r26, 0x05	; 5
     508:	ed 91       	ld	r30, X+
     50a:	fc 91       	ld	r31, X
     50c:	16 97       	sbiw	r26, 0x06	; 6
     50e:	10 86       	std	Z+8, r1	; 0x08

	/* Start sending data. */
	data = spi->dataPacket->transmitData[0];
     510:	15 96       	adiw	r26, 0x05	; 5
     512:	ed 91       	ld	r30, X+
     514:	fc 91       	ld	r31, X
     516:	16 97       	sbiw	r26, 0x06	; 6
     518:	03 80       	ldd	r0, Z+3	; 0x03
     51a:	f4 81       	ldd	r31, Z+4	; 0x04
     51c:	e0 2d       	mov	r30, r0
     51e:	80 81       	ld	r24, Z
	spi->module->DATA = data;
     520:	ed 91       	ld	r30, X+
     522:	fc 91       	ld	r31, X
     524:	83 83       	std	Z+3, r24	; 0x03
     526:	80 e0       	ldi	r24, 0x00	; 0

	/* Successs */
	return (SPI_OK);
}
     528:	df 91       	pop	r29
     52a:	cf 91       	pop	r28
     52c:	08 95       	ret

0000052e <SPI_MasterTransceiveByte>:
 *  \param TXdata     Data to transmit to slave.
 *
 *  \return           Data received from slave.
 */
uint8_t SPI_MasterTransceiveByte(SPI_Master_t *spi, uint8_t TXdata)
{
     52e:	fc 01       	movw	r30, r24
	/* Send pattern. */
	spi->module->DATA = TXdata;
     530:	a0 81       	ld	r26, Z
     532:	b1 81       	ldd	r27, Z+1	; 0x01
     534:	13 96       	adiw	r26, 0x03	; 3
     536:	6c 93       	st	X, r22

	/* Wait for transmission complete. */
	while(!(spi->module->STATUS & SPI_IF_bm)) {
     538:	01 90       	ld	r0, Z+
     53a:	f0 81       	ld	r31, Z
     53c:	e0 2d       	mov	r30, r0
     53e:	82 81       	ldd	r24, Z+2	; 0x02
     540:	87 ff       	sbrs	r24, 7
     542:	fd cf       	rjmp	.-6      	; 0x53e <SPI_MasterTransceiveByte+0x10>

	}
	/* Read received data. */
	uint8_t result = spi->module->DATA;
     544:	83 81       	ldd	r24, Z+3	; 0x03

	return(result);
}
     546:	08 95       	ret

00000548 <SPI_MasterTransceivePacket>:
 *  \retval true	   Success
 *  \retval false	   Failure
 */
bool SPI_MasterTransceivePacket(SPI_Master_t *spi,
                                SPI_DataPacket_t *dataPacket)
{
     548:	cf 93       	push	r28
     54a:	df 93       	push	r29
     54c:	ec 01       	movw	r28, r24
     54e:	fb 01       	movw	r30, r22
	/* Check if data packet has been created. */
	if(dataPacket == NULL) {
     550:	61 15       	cp	r22, r1
     552:	71 05       	cpc	r23, r1
     554:	11 f4       	brne	.+4      	; 0x55a <SPI_MasterTransceivePacket+0x12>
     556:	80 e0       	ldi	r24, 0x00	; 0
     558:	37 c0       	rjmp	.+110    	; 0x5c8 <SPI_MasterTransceivePacket+0x80>
		return false;
	}

	/* Assign datapacket to SPI module. */
	spi->dataPacket = dataPacket;
     55a:	6d 83       	std	Y+5, r22	; 0x05
     55c:	7e 83       	std	Y+6, r23	; 0x06

	uint8_t ssPinMask = spi->dataPacket->ssPinMask;
     55e:	42 81       	ldd	r20, Z+2	; 0x02

	/* If SS signal to slave(s). */
	if (spi->dataPacket->ssPort != NULL) {
     560:	a0 81       	ld	r26, Z
     562:	b1 81       	ldd	r27, Z+1	; 0x01
     564:	10 97       	sbiw	r26, 0x00	; 0
     566:	11 f0       	breq	.+4      	; 0x56c <SPI_MasterTransceivePacket+0x24>
		/* SS to slave(s) low. */
		SPI_MasterSSLow(spi->dataPacket->ssPort, ssPinMask);
     568:	16 96       	adiw	r26, 0x06	; 6
     56a:	4c 93       	st	X, r20
	}

	/* Transceive bytes. */
	uint8_t bytesTransceived = 0;
	uint8_t bytesToTransceive = dataPacket->bytesToTransceive;
     56c:	67 81       	ldd	r22, Z+7	; 0x07
     56e:	90 e0       	ldi	r25, 0x00	; 0
     570:	1a c0       	rjmp	.+52     	; 0x5a6 <SPI_MasterTransceivePacket+0x5e>
	while (bytesTransceived < bytesToTransceive) {

		/* Send pattern. */
		uint8_t data = spi->dataPacket->transmitData[bytesTransceived];
     572:	29 2f       	mov	r18, r25
     574:	30 e0       	ldi	r19, 0x00	; 0
     576:	03 80       	ldd	r0, Z+3	; 0x03
     578:	f4 81       	ldd	r31, Z+4	; 0x04
     57a:	e0 2d       	mov	r30, r0
     57c:	e2 0f       	add	r30, r18
     57e:	f3 1f       	adc	r31, r19
     580:	80 81       	ld	r24, Z
		spi->module->DATA = data;
     582:	e8 81       	ld	r30, Y
     584:	f9 81       	ldd	r31, Y+1	; 0x01
     586:	83 83       	std	Z+3, r24	; 0x03

		/* Wait for transmission complete. */
		while(!(spi->module->STATUS & SPI_IF_bm)) {
     588:	e8 81       	ld	r30, Y
     58a:	f9 81       	ldd	r31, Y+1	; 0x01
     58c:	82 81       	ldd	r24, Z+2	; 0x02
     58e:	87 ff       	sbrs	r24, 7
     590:	fd cf       	rjmp	.-6      	; 0x58c <SPI_MasterTransceivePacket+0x44>

		}
		/* Read received data. */
		data = spi->module->DATA;
     592:	83 81       	ldd	r24, Z+3	; 0x03
		spi->dataPacket->receiveData[bytesTransceived] = data;
     594:	ed 81       	ldd	r30, Y+5	; 0x05
     596:	fe 81       	ldd	r31, Y+6	; 0x06
     598:	05 80       	ldd	r0, Z+5	; 0x05
     59a:	f6 81       	ldd	r31, Z+6	; 0x06
     59c:	e0 2d       	mov	r30, r0
     59e:	e2 0f       	add	r30, r18
     5a0:	f3 1f       	adc	r31, r19
     5a2:	80 83       	st	Z, r24

		bytesTransceived++;
     5a4:	9f 5f       	subi	r25, 0xFF	; 255
     5a6:	ed 81       	ldd	r30, Y+5	; 0x05
     5a8:	fe 81       	ldd	r31, Y+6	; 0x06
	}

	/* Transceive bytes. */
	uint8_t bytesTransceived = 0;
	uint8_t bytesToTransceive = dataPacket->bytesToTransceive;
	while (bytesTransceived < bytesToTransceive) {
     5aa:	96 17       	cp	r25, r22
     5ac:	10 f3       	brcs	.-60     	; 0x572 <SPI_MasterTransceivePacket+0x2a>

		bytesTransceived++;
	}

	/* If SS signal to slave(s). */
	if (spi->dataPacket->ssPort != NULL) {
     5ae:	01 90       	ld	r0, Z+
     5b0:	f0 81       	ld	r31, Z
     5b2:	e0 2d       	mov	r30, r0
     5b4:	30 97       	sbiw	r30, 0x00	; 0
     5b6:	09 f0       	breq	.+2      	; 0x5ba <SPI_MasterTransceivePacket+0x72>
		/* Release SS to slave(s). */
		SPI_MasterSSHigh(spi->dataPacket->ssPort, ssPinMask);
     5b8:	45 83       	std	Z+5, r20	; 0x05
	}

	/* Set variables to indicate that transmission is complete. */
	spi->dataPacket->bytesTransceived = bytesTransceived;
     5ba:	ed 81       	ldd	r30, Y+5	; 0x05
     5bc:	fe 81       	ldd	r31, Y+6	; 0x06
     5be:	60 87       	std	Z+8, r22	; 0x08
	spi->dataPacket->complete = true;
     5c0:	ed 81       	ldd	r30, Y+5	; 0x05
     5c2:	fe 81       	ldd	r31, Y+6	; 0x06
     5c4:	81 e0       	ldi	r24, 0x01	; 1
     5c6:	81 87       	std	Z+9, r24	; 0x09

	/* Report success. */
	return true;
}
     5c8:	df 91       	pop	r29
     5ca:	cf 91       	pop	r28
     5cc:	08 95       	ret

000005ce <USART_InterruptDriver_Initialize>:
 *  \param dreIntLevel          Data register empty interrupt level.
 */
void USART_InterruptDriver_Initialize(USART_data_t * usart_data,
                                      USART_t * usart,
                                      USART_DREINTLVL_t dreIntLevel)
{
     5ce:	fc 01       	movw	r30, r24
	usart_data->usart = usart;
     5d0:	60 83       	st	Z, r22
     5d2:	71 83       	std	Z+1, r23	; 0x01
	usart_data->dreIntLevel = dreIntLevel;
     5d4:	42 83       	std	Z+2, r20	; 0x02

	usart_data->buffer.RX_Tail = 0;
     5d6:	e8 5f       	subi	r30, 0xF8	; 248
     5d8:	fe 4f       	sbci	r31, 0xFE	; 254
     5da:	10 82       	st	Z, r1
	usart_data->buffer.RX_Head = 0;
     5dc:	12 92       	st	-Z, r1
	usart_data->buffer.TX_Tail = 0;
     5de:	33 96       	adiw	r30, 0x03	; 3
     5e0:	10 82       	st	Z, r1
	usart_data->buffer.TX_Head = 0;
     5e2:	12 92       	st	-Z, r1
}
     5e4:	08 95       	ret

000005e6 <USART_InterruptDriver_DreInterruptLevel_Set>:
 *  \param dreIntLevel        Interrupt level of the DRE interrupt.
 */
void USART_InterruptDriver_DreInterruptLevel_Set(USART_data_t * usart_data,
                                                 USART_DREINTLVL_t dreIntLevel)
{
	usart_data->dreIntLevel = dreIntLevel;
     5e6:	fc 01       	movw	r30, r24
     5e8:	62 83       	std	Z+2, r22	; 0x02
}
     5ea:	08 95       	ret

000005ec <USART_TXBuffer_FreeSpace>:
 *
 *  \retval true      There is data in the receive buffer.
 *  \retval false     The receive buffer is empty.
 */
bool USART_TXBuffer_FreeSpace(USART_data_t * usart_data)
{
     5ec:	fc 01       	movw	r30, r24
	/* Make copies to make sure that volatile access is specified. */
	uint8_t tempHead = (usart_data->buffer.TX_Head + 1) & USART_TX_BUFFER_MASK;
     5ee:	e7 5f       	subi	r30, 0xF7	; 247
     5f0:	fe 4f       	sbci	r31, 0xFE	; 254
     5f2:	81 91       	ld	r24, Z+
	uint8_t tempTail = usart_data->buffer.TX_Tail;
     5f4:	90 81       	ld	r25, Z
     5f6:	20 e0       	ldi	r18, 0x00	; 0
     5f8:	8f 5f       	subi	r24, 0xFF	; 255
     5fa:	83 70       	andi	r24, 0x03	; 3
     5fc:	89 13       	cpse	r24, r25
     5fe:	21 e0       	ldi	r18, 0x01	; 1

	/* There are data left in the buffer unless Head and Tail are equal. */
	return (tempHead != tempTail);
}
     600:	82 2f       	mov	r24, r18
     602:	08 95       	ret

00000604 <USART_TXBuffer_PutByte>:
 *
 *  \param usart_data The USART_data_t struct instance.
 *  \param data       The data to send.
 */
bool USART_TXBuffer_PutByte(USART_data_t * usart_data, uint8_t data)
{
     604:	cf 93       	push	r28
     606:	df 93       	push	r29
     608:	dc 01       	movw	r26, r24
 *  \retval false     The receive buffer is empty.
 */
bool USART_TXBuffer_FreeSpace(USART_data_t * usart_data)
{
	/* Make copies to make sure that volatile access is specified. */
	uint8_t tempHead = (usart_data->buffer.TX_Head + 1) & USART_TX_BUFFER_MASK;
     60a:	ec 01       	movw	r28, r24
     60c:	c7 5f       	subi	r28, 0xF7	; 247
     60e:	de 4f       	sbci	r29, 0xFE	; 254
     610:	88 81       	ld	r24, Y
	uint8_t tempTail = usart_data->buffer.TX_Tail;
     612:	a6 5f       	subi	r26, 0xF6	; 246
     614:	be 4f       	sbci	r27, 0xFE	; 254
     616:	9c 91       	ld	r25, X
     618:	aa 50       	subi	r26, 0x0A	; 10
     61a:	b1 40       	sbci	r27, 0x01	; 1

	/* There are data left in the buffer unless Head and Tail are equal. */
	return (tempHead != tempTail);
     61c:	20 e0       	ldi	r18, 0x00	; 0
     61e:	8f 5f       	subi	r24, 0xFF	; 255
     620:	83 70       	andi	r24, 0x03	; 3
     622:	89 17       	cp	r24, r25
     624:	a1 f0       	breq	.+40     	; 0x64e <USART_TXBuffer_PutByte+0x4a>
     626:	21 e0       	ldi	r18, 0x01	; 1
	TXBuffer_FreeSpace = USART_TXBuffer_FreeSpace(usart_data);


	if(TXBuffer_FreeSpace)
	{
	  	tempTX_Head = TXbufPtr->TX_Head;
     628:	88 81       	ld	r24, Y
	  	TXbufPtr->TX[tempTX_Head]= data;
     62a:	fd 01       	movw	r30, r26
     62c:	e8 0f       	add	r30, r24
     62e:	f1 1d       	adc	r31, r1
     630:	ed 5f       	subi	r30, 0xFD	; 253
     632:	fe 4f       	sbci	r31, 0xFE	; 254
     634:	60 83       	st	Z, r22
		/* Advance buffer head. */
		TXbufPtr->TX_Head = (tempTX_Head + 1) & USART_TX_BUFFER_MASK;
     636:	8f 5f       	subi	r24, 0xFF	; 255
     638:	83 70       	andi	r24, 0x03	; 3
     63a:	88 83       	st	Y, r24

		/* Enable DRE interrupt. */
		tempCTRLA = usart_data->usart->CTRLA;
     63c:	ed 91       	ld	r30, X+
     63e:	fc 91       	ld	r31, X
     640:	11 97       	sbiw	r26, 0x01	; 1
     642:	83 81       	ldd	r24, Z+3	; 0x03
		tempCTRLA = (tempCTRLA & ~USART_DREINTLVL_gm) | usart_data->dreIntLevel;
     644:	8c 7f       	andi	r24, 0xFC	; 252
     646:	12 96       	adiw	r26, 0x02	; 2
     648:	9c 91       	ld	r25, X
     64a:	89 2b       	or	r24, r25
		usart_data->usart->CTRLA = tempCTRLA;
     64c:	83 83       	std	Z+3, r24	; 0x03
	}
	return TXBuffer_FreeSpace;
}
     64e:	82 2f       	mov	r24, r18
     650:	df 91       	pop	r29
     652:	cf 91       	pop	r28
     654:	08 95       	ret

00000656 <USART_RXBufferData_Available>:
 *
 *  \retval true      There is data in the receive buffer.
 *  \retval false     The receive buffer is empty.
 */
bool USART_RXBufferData_Available(USART_data_t * usart_data)
{
     656:	fc 01       	movw	r30, r24
	/* Make copies to make sure that volatile access is specified. */
	uint8_t tempHead = usart_data->buffer.RX_Head;
     658:	e9 5f       	subi	r30, 0xF9	; 249
     65a:	fe 4f       	sbci	r31, 0xFE	; 254
     65c:	91 91       	ld	r25, Z+
	uint8_t tempTail = usart_data->buffer.RX_Tail;
     65e:	80 81       	ld	r24, Z
     660:	20 e0       	ldi	r18, 0x00	; 0
     662:	98 13       	cpse	r25, r24
     664:	21 e0       	ldi	r18, 0x01	; 1

	/* There are data left in the buffer unless Head and Tail are equal. */
	return (tempHead != tempTail);
}
     666:	82 2f       	mov	r24, r18
     668:	08 95       	ret

0000066a <USART_RXBuffer_GetByte>:
 *  \param usart_data       The USART_data_t struct instance.
 *
 *  \return         Received data.
 */
uint8_t USART_RXBuffer_GetByte(USART_data_t * usart_data)
{
     66a:	fc 01       	movw	r30, r24
	USART_Buffer_t * bufPtr;
	uint8_t ans;

	bufPtr = &usart_data->buffer;
	ans = (bufPtr->RX[bufPtr->RX_Tail]);
     66c:	dc 01       	movw	r26, r24
     66e:	a8 5f       	subi	r26, 0xF8	; 248
     670:	be 4f       	sbci	r27, 0xFE	; 254
     672:	8c 91       	ld	r24, X
     674:	e8 0f       	add	r30, r24
     676:	f1 1d       	adc	r31, r1
     678:	83 81       	ldd	r24, Z+3	; 0x03

	/* Advance buffer tail. */
	bufPtr->RX_Tail = (bufPtr->RX_Tail + 1) & USART_RX_BUFFER_MASK;
     67a:	9c 91       	ld	r25, X
     67c:	9f 5f       	subi	r25, 0xFF	; 255
     67e:	9c 93       	st	X, r25

	return ans;
}
     680:	08 95       	ret

00000682 <USART_RXComplete>:
 *  Stores received data in RX software buffer.
 *
 *  \param usart_data      The USART_data_t struct instance.
 */
bool USART_RXComplete(USART_data_t * usart_data)
{
     682:	cf 93       	push	r28
     684:	df 93       	push	r29
     686:	dc 01       	movw	r26, r24
	USART_Buffer_t * bufPtr;
	bool ans;

	bufPtr = &usart_data->buffer;
	/* Advance buffer head. */
	uint8_t tempRX_Head = (bufPtr->RX_Head + 1) & USART_RX_BUFFER_MASK;
     688:	ec 01       	movw	r28, r24
     68a:	c9 5f       	subi	r28, 0xF9	; 249
     68c:	de 4f       	sbci	r29, 0xFE	; 254
     68e:	98 81       	ld	r25, Y
     690:	9f 5f       	subi	r25, 0xFF	; 255

	/* Check for overflow. */
	uint8_t tempRX_Tail = bufPtr->RX_Tail;
     692:	a8 5f       	subi	r26, 0xF8	; 248
     694:	be 4f       	sbci	r27, 0xFE	; 254
     696:	8c 91       	ld	r24, X
     698:	a8 50       	subi	r26, 0x08	; 8
     69a:	b1 40       	sbci	r27, 0x01	; 1
	uint8_t data = usart_data->usart->DATA;
     69c:	ed 91       	ld	r30, X+
     69e:	fc 91       	ld	r31, X
     6a0:	11 97       	sbiw	r26, 0x01	; 1
     6a2:	e0 81       	ld	r30, Z

	if (tempRX_Head == tempRX_Tail) {
     6a4:	98 17       	cp	r25, r24
     6a6:	11 f4       	brne	.+4      	; 0x6ac <USART_RXComplete+0x2a>
     6a8:	80 e0       	ldi	r24, 0x00	; 0
     6aa:	07 c0       	rjmp	.+14     	; 0x6ba <USART_RXComplete+0x38>
	  	ans = false;
	}else{
		ans = true;
		usart_data->buffer.RX[usart_data->buffer.RX_Head] = data;
     6ac:	88 81       	ld	r24, Y
     6ae:	a8 0f       	add	r26, r24
     6b0:	b1 1d       	adc	r27, r1
     6b2:	13 96       	adiw	r26, 0x03	; 3
     6b4:	ec 93       	st	X, r30
		usart_data->buffer.RX_Head = tempRX_Head;
     6b6:	98 83       	st	Y, r25
     6b8:	81 e0       	ldi	r24, 0x01	; 1
	}
	return ans;
}
     6ba:	df 91       	pop	r29
     6bc:	cf 91       	pop	r28
     6be:	08 95       	ret

000006c0 <USART_DataRegEmpty>:
 *  is empty. Argument is pointer to USART (USART_data_t).
 *
 *  \param usart_data      The USART_data_t struct instance.
 */
void USART_DataRegEmpty(USART_data_t * usart_data)
{
     6c0:	cf 93       	push	r28
     6c2:	df 93       	push	r29
     6c4:	fc 01       	movw	r30, r24
	USART_Buffer_t * bufPtr;
	bufPtr = &usart_data->buffer;

	/* Check if all data is transmitted. */
	uint8_t tempTX_Tail = usart_data->buffer.TX_Tail;
     6c6:	ec 01       	movw	r28, r24
     6c8:	c6 5f       	subi	r28, 0xF6	; 246
     6ca:	de 4f       	sbci	r29, 0xFE	; 254
     6cc:	98 81       	ld	r25, Y
	if (bufPtr->TX_Head == tempTX_Tail){
     6ce:	e7 5f       	subi	r30, 0xF7	; 247
     6d0:	fe 4f       	sbci	r31, 0xFE	; 254
     6d2:	80 81       	ld	r24, Z
     6d4:	e9 50       	subi	r30, 0x09	; 9
     6d6:	f1 40       	sbci	r31, 0x01	; 1
     6d8:	a0 81       	ld	r26, Z
     6da:	b1 81       	ldd	r27, Z+1	; 0x01
     6dc:	89 17       	cp	r24, r25
     6de:	39 f4       	brne	.+14     	; 0x6ee <USART_DataRegEmpty+0x2e>
	    /* Disable DRE interrupts. */
		uint8_t tempCTRLA = usart_data->usart->CTRLA;
     6e0:	13 96       	adiw	r26, 0x03	; 3
     6e2:	8c 91       	ld	r24, X
     6e4:	13 97       	sbiw	r26, 0x03	; 3
		tempCTRLA = (tempCTRLA & ~USART_DREINTLVL_gm) | USART_DREINTLVL_OFF_gc;
     6e6:	8c 7f       	andi	r24, 0xFC	; 252
		usart_data->usart->CTRLA = tempCTRLA;
     6e8:	13 96       	adiw	r26, 0x03	; 3
     6ea:	8c 93       	st	X, r24
     6ec:	0b c0       	rjmp	.+22     	; 0x704 <USART_DataRegEmpty+0x44>

	}else{
		/* Start transmitting. */
		uint8_t data = bufPtr->TX[usart_data->buffer.TX_Tail];
     6ee:	88 81       	ld	r24, Y
     6f0:	e8 0f       	add	r30, r24
     6f2:	f1 1d       	adc	r31, r1
     6f4:	ed 5f       	subi	r30, 0xFD	; 253
     6f6:	fe 4f       	sbci	r31, 0xFE	; 254
     6f8:	80 81       	ld	r24, Z
		usart_data->usart->DATA = data;
     6fa:	8c 93       	st	X, r24

		/* Advance buffer tail. */
		bufPtr->TX_Tail = (bufPtr->TX_Tail + 1) & USART_TX_BUFFER_MASK;
     6fc:	88 81       	ld	r24, Y
     6fe:	8f 5f       	subi	r24, 0xFF	; 255
     700:	83 70       	andi	r24, 0x03	; 3
     702:	88 83       	st	Y, r24
	}
}
     704:	df 91       	pop	r29
     706:	cf 91       	pop	r28
     708:	08 95       	ret

0000070a <USART_NineBits_PutChar>:
 *
 *  \param usart      The USART module.
 *  \param data       The data to send.
 */
void USART_NineBits_PutChar(USART_t * usart, uint16_t data)
{
     70a:	fc 01       	movw	r30, r24
	if(data & 0x0100) {
     70c:	70 ff       	sbrs	r23, 0
     70e:	03 c0       	rjmp	.+6      	; 0x716 <USART_NineBits_PutChar+0xc>
		usart->CTRLB |= USART_TXB8_bm;
     710:	84 81       	ldd	r24, Z+4	; 0x04
     712:	81 60       	ori	r24, 0x01	; 1
     714:	02 c0       	rjmp	.+4      	; 0x71a <USART_NineBits_PutChar+0x10>
	}else {
		usart->CTRLB &= ~USART_TXB8_bm;
     716:	84 81       	ldd	r24, Z+4	; 0x04
     718:	8e 7f       	andi	r24, 0xFE	; 254
     71a:	84 83       	std	Z+4, r24	; 0x04
	}

	usart->DATA = (data & 0x00FF);
     71c:	60 83       	st	Z, r22
}
     71e:	08 95       	ret

00000720 <USART_NineBits_GetChar>:
 *  \param usart      The USART module.
 *
 *  \retval           Received data.
 */
uint16_t USART_NineBits_GetChar(USART_t * usart)
{
     720:	fc 01       	movw	r30, r24
	if(usart->CTRLB & USART_RXB8_bm) {
     722:	84 81       	ldd	r24, Z+4	; 0x04
     724:	80 ff       	sbrs	r24, 0
     726:	05 c0       	rjmp	.+10     	; 0x732 <USART_NineBits_GetChar+0x12>
		return(0x0100 | usart->DATA);
     728:	80 81       	ld	r24, Z
     72a:	28 2f       	mov	r18, r24
     72c:	30 e0       	ldi	r19, 0x00	; 0
     72e:	31 60       	ori	r19, 0x01	; 1
     730:	03 c0       	rjmp	.+6      	; 0x738 <USART_NineBits_GetChar+0x18>
	}else {
		return(usart->DATA);
     732:	80 81       	ld	r24, Z
     734:	28 2f       	mov	r18, r24
     736:	30 e0       	ldi	r19, 0x00	; 0
	}
}
     738:	c9 01       	movw	r24, r18
     73a:	08 95       	ret

0000073c <mtx_mul_4x4>:
#include "Matrix.h"

void mtx_mul_4x4(double ANS[4][4],double A[4][4],double B[4][4]){
     73c:	2f 92       	push	r2
     73e:	3f 92       	push	r3
     740:	4f 92       	push	r4
     742:	5f 92       	push	r5
     744:	6f 92       	push	r6
     746:	7f 92       	push	r7
     748:	8f 92       	push	r8
     74a:	9f 92       	push	r9
     74c:	af 92       	push	r10
     74e:	bf 92       	push	r11
     750:	cf 92       	push	r12
     752:	df 92       	push	r13
     754:	ef 92       	push	r14
     756:	ff 92       	push	r15
     758:	0f 93       	push	r16
     75a:	1f 93       	push	r17
     75c:	df 93       	push	r29
     75e:	cf 93       	push	r28
     760:	cd b7       	in	r28, 0x3d	; 61
     762:	de b7       	in	r29, 0x3e	; 62
     764:	c4 54       	subi	r28, 0x44	; 68
     766:	d0 40       	sbci	r29, 0x00	; 0
     768:	cd bf       	out	0x3d, r28	; 61
     76a:	de bf       	out	0x3e, r29	; 62
     76c:	24 96       	adiw	r28, 0x04	; 4
     76e:	8f af       	std	Y+63, r24	; 0x3f
     770:	24 97       	sbiw	r28, 0x04	; 4
     772:	25 96       	adiw	r28, 0x05	; 5
     774:	9f af       	std	Y+63, r25	; 0x3f
     776:	25 97       	sbiw	r28, 0x05	; 5
     778:	23 96       	adiw	r28, 0x03	; 3
     77a:	4e af       	std	Y+62, r20	; 0x3e
     77c:	5f af       	std	Y+63, r21	; 0x3f
     77e:	23 97       	sbiw	r28, 0x03	; 3
	double buffer[4][4]={{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}};
     780:	fe 01       	movw	r30, r28
     782:	31 96       	adiw	r30, 0x01	; 1
     784:	80 e4       	ldi	r24, 0x40	; 64
     786:	df 01       	movw	r26, r30
     788:	1d 92       	st	X+, r1
     78a:	8a 95       	dec	r24
     78c:	e9 f7       	brne	.-6      	; 0x788 <mtx_mul_4x4+0x4c>
     78e:	1b 01       	movw	r2, r22
     790:	44 24       	eor	r4, r4
     792:	55 24       	eor	r5, r5
     794:	5a c0       	rjmp	.+180    	; 0x84a <mtx_mul_4x4+0x10e>
	for(int i=0;i<4;i++)
		for(int j=0;j<4;j++)
			for(int k=0;k<4;k++)
				buffer[i][j]+= A[i][k]*B[k][j];
     796:	f1 01       	movw	r30, r2
     798:	ea 0d       	add	r30, r10
     79a:	fb 1d       	adc	r31, r11
     79c:	60 81       	ld	r22, Z
     79e:	71 81       	ldd	r23, Z+1	; 0x01
     7a0:	82 81       	ldd	r24, Z+2	; 0x02
     7a2:	93 81       	ldd	r25, Z+3	; 0x03
     7a4:	f6 01       	movw	r30, r12
     7a6:	20 81       	ld	r18, Z
     7a8:	31 81       	ldd	r19, Z+1	; 0x01
     7aa:	42 81       	ldd	r20, Z+2	; 0x02
     7ac:	53 81       	ldd	r21, Z+3	; 0x03
     7ae:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
     7b2:	9b 01       	movw	r18, r22
     7b4:	ac 01       	movw	r20, r24
     7b6:	c8 01       	movw	r24, r16
     7b8:	b7 01       	movw	r22, r14
     7ba:	0e 94 89 1c 	call	0x3912	; 0x3912 <__addsf3>
     7be:	7b 01       	movw	r14, r22
     7c0:	8c 01       	movw	r16, r24
     7c2:	84 e0       	ldi	r24, 0x04	; 4
     7c4:	90 e0       	ldi	r25, 0x00	; 0
     7c6:	a8 0e       	add	r10, r24
     7c8:	b9 1e       	adc	r11, r25
     7ca:	a0 e1       	ldi	r26, 0x10	; 16
     7cc:	b0 e0       	ldi	r27, 0x00	; 0
     7ce:	ca 0e       	add	r12, r26
     7d0:	db 1e       	adc	r13, r27

void mtx_mul_4x4(double ANS[4][4],double A[4][4],double B[4][4]){
	double buffer[4][4]={{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}};
	for(int i=0;i<4;i++)
		for(int j=0;j<4;j++)
			for(int k=0;k<4;k++)
     7d2:	b0 e1       	ldi	r27, 0x10	; 16
     7d4:	ab 16       	cp	r10, r27
     7d6:	b1 04       	cpc	r11, r1
     7d8:	f1 f6       	brne	.-68     	; 0x796 <mtx_mul_4x4+0x5a>
     7da:	f4 01       	movw	r30, r8
     7dc:	e1 92       	st	Z+, r14
     7de:	f1 92       	st	Z+, r15
     7e0:	01 93       	st	Z+, r16
     7e2:	11 93       	st	Z+, r17
     7e4:	4f 01       	movw	r8, r30
#include "Matrix.h"

void mtx_mul_4x4(double ANS[4][4],double A[4][4],double B[4][4]){
	double buffer[4][4]={{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}};
	for(int i=0;i<4;i++)
		for(int j=0;j<4;j++)
     7e6:	08 94       	sec
     7e8:	61 1c       	adc	r6, r1
     7ea:	71 1c       	adc	r7, r1
     7ec:	f4 e0       	ldi	r31, 0x04	; 4
     7ee:	6f 16       	cp	r6, r31
     7f0:	71 04       	cpc	r7, r1
     7f2:	99 f0       	breq	.+38     	; 0x81a <mtx_mul_4x4+0xde>
     7f4:	d4 01       	movw	r26, r8
     7f6:	ed 90       	ld	r14, X+
     7f8:	fd 90       	ld	r15, X+
     7fa:	0d 91       	ld	r16, X+
     7fc:	1c 91       	ld	r17, X
     7fe:	63 01       	movw	r12, r6
     800:	cc 0c       	add	r12, r12
     802:	dd 1c       	adc	r13, r13
     804:	cc 0c       	add	r12, r12
     806:	dd 1c       	adc	r13, r13
     808:	23 96       	adiw	r28, 0x03	; 3
     80a:	ee ad       	ldd	r30, Y+62	; 0x3e
     80c:	ff ad       	ldd	r31, Y+63	; 0x3f
     80e:	23 97       	sbiw	r28, 0x03	; 3
     810:	ce 0e       	add	r12, r30
     812:	df 1e       	adc	r13, r31
     814:	aa 24       	eor	r10, r10
     816:	bb 24       	eor	r11, r11
     818:	be cf       	rjmp	.-132    	; 0x796 <mtx_mul_4x4+0x5a>
#include "Matrix.h"

void mtx_mul_4x4(double ANS[4][4],double A[4][4],double B[4][4]){
	double buffer[4][4]={{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}};
	for(int i=0;i<4;i++)
     81a:	08 94       	sec
     81c:	41 1c       	adc	r4, r1
     81e:	51 1c       	adc	r5, r1
     820:	80 e1       	ldi	r24, 0x10	; 16
     822:	90 e0       	ldi	r25, 0x00	; 0
     824:	28 0e       	add	r2, r24
     826:	39 1e       	adc	r3, r25
     828:	94 e0       	ldi	r25, 0x04	; 4
     82a:	49 16       	cp	r4, r25
     82c:	51 04       	cpc	r5, r1
     82e:	69 f4       	brne	.+26     	; 0x84a <mtx_mul_4x4+0x10e>
     830:	fe 01       	movw	r30, r28
     832:	31 96       	adiw	r30, 0x01	; 1
     834:	24 96       	adiw	r28, 0x04	; 4
     836:	8f ad       	ldd	r24, Y+63	; 0x3f
     838:	24 97       	sbiw	r28, 0x04	; 4
     83a:	25 96       	adiw	r28, 0x05	; 5
     83c:	9f ad       	ldd	r25, Y+63	; 0x3f
     83e:	25 97       	sbiw	r28, 0x05	; 5
     840:	9c 01       	movw	r18, r24
		for(int j=0;j<4;j++)
			for(int k=0;k<4;k++)
				buffer[i][j]+= A[i][k]*B[k][j];
	for(int i=0;i<4;i++)
     842:	ae 01       	movw	r20, r28
     844:	4f 5b       	subi	r20, 0xBF	; 191
     846:	5f 4f       	sbci	r21, 0xFF	; 255
     848:	0f c0       	rjmp	.+30     	; 0x868 <mtx_mul_4x4+0x12c>
#include "Matrix.h"

void mtx_mul_4x4(double ANS[4][4],double A[4][4],double B[4][4]){
	double buffer[4][4]={{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}};
	for(int i=0;i<4;i++)
     84a:	42 01       	movw	r8, r4
     84c:	84 e0       	ldi	r24, 0x04	; 4
     84e:	88 0c       	add	r8, r8
     850:	99 1c       	adc	r9, r9
     852:	8a 95       	dec	r24
     854:	e1 f7       	brne	.-8      	; 0x84e <mtx_mul_4x4+0x112>
     856:	a1 e0       	ldi	r26, 0x01	; 1
     858:	b0 e0       	ldi	r27, 0x00	; 0
     85a:	ac 0f       	add	r26, r28
     85c:	bd 1f       	adc	r27, r29
     85e:	8a 0e       	add	r8, r26
     860:	9b 1e       	adc	r9, r27
     862:	66 24       	eor	r6, r6
     864:	77 24       	eor	r7, r7
     866:	c6 cf       	rjmp	.-116    	; 0x7f4 <mtx_mul_4x4+0xb8>
		for(int j=0;j<4;j++)
			for(int k=0;k<4;k++)
				buffer[i][j]+= A[i][k]*B[k][j];
	for(int i=0;i<4;i++)
		for(int j=0;j<4;j++)
			ANS[i][j]=buffer[i][j];
     868:	e0 80       	ld	r14, Z
     86a:	f1 80       	ldd	r15, Z+1	; 0x01
     86c:	02 81       	ldd	r16, Z+2	; 0x02
     86e:	13 81       	ldd	r17, Z+3	; 0x03
     870:	d9 01       	movw	r26, r18
     872:	ed 92       	st	X+, r14
     874:	fd 92       	st	X+, r15
     876:	0d 93       	st	X+, r16
     878:	1c 93       	st	X, r17
     87a:	13 97       	sbiw	r26, 0x03	; 3
     87c:	e4 80       	ldd	r14, Z+4	; 0x04
     87e:	f5 80       	ldd	r15, Z+5	; 0x05
     880:	06 81       	ldd	r16, Z+6	; 0x06
     882:	17 81       	ldd	r17, Z+7	; 0x07
     884:	14 96       	adiw	r26, 0x04	; 4
     886:	ed 92       	st	X+, r14
     888:	fd 92       	st	X+, r15
     88a:	0d 93       	st	X+, r16
     88c:	1c 93       	st	X, r17
     88e:	17 97       	sbiw	r26, 0x07	; 7
     890:	e0 84       	ldd	r14, Z+8	; 0x08
     892:	f1 84       	ldd	r15, Z+9	; 0x09
     894:	02 85       	ldd	r16, Z+10	; 0x0a
     896:	13 85       	ldd	r17, Z+11	; 0x0b
     898:	18 96       	adiw	r26, 0x08	; 8
     89a:	ed 92       	st	X+, r14
     89c:	fd 92       	st	X+, r15
     89e:	0d 93       	st	X+, r16
     8a0:	1c 93       	st	X, r17
     8a2:	1b 97       	sbiw	r26, 0x0b	; 11
     8a4:	e4 84       	ldd	r14, Z+12	; 0x0c
     8a6:	f5 84       	ldd	r15, Z+13	; 0x0d
     8a8:	06 85       	ldd	r16, Z+14	; 0x0e
     8aa:	17 85       	ldd	r17, Z+15	; 0x0f
     8ac:	1c 96       	adiw	r26, 0x0c	; 12
     8ae:	ed 92       	st	X+, r14
     8b0:	fd 92       	st	X+, r15
     8b2:	0d 93       	st	X+, r16
     8b4:	1c 93       	st	X, r17
     8b6:	1f 97       	sbiw	r26, 0x0f	; 15
     8b8:	70 96       	adiw	r30, 0x10	; 16
     8ba:	20 5f       	subi	r18, 0xF0	; 240
     8bc:	3f 4f       	sbci	r19, 0xFF	; 255
	double buffer[4][4]={{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}};
	for(int i=0;i<4;i++)
		for(int j=0;j<4;j++)
			for(int k=0;k<4;k++)
				buffer[i][j]+= A[i][k]*B[k][j];
	for(int i=0;i<4;i++)
     8be:	e4 17       	cp	r30, r20
     8c0:	f5 07       	cpc	r31, r21
     8c2:	91 f6       	brne	.-92     	; 0x868 <mtx_mul_4x4+0x12c>
		for(int j=0;j<4;j++)
			ANS[i][j]=buffer[i][j];
}
     8c4:	cc 5b       	subi	r28, 0xBC	; 188
     8c6:	df 4f       	sbci	r29, 0xFF	; 255
     8c8:	cd bf       	out	0x3d, r28	; 61
     8ca:	de bf       	out	0x3e, r29	; 62
     8cc:	cf 91       	pop	r28
     8ce:	df 91       	pop	r29
     8d0:	1f 91       	pop	r17
     8d2:	0f 91       	pop	r16
     8d4:	ff 90       	pop	r15
     8d6:	ef 90       	pop	r14
     8d8:	df 90       	pop	r13
     8da:	cf 90       	pop	r12
     8dc:	bf 90       	pop	r11
     8de:	af 90       	pop	r10
     8e0:	9f 90       	pop	r9
     8e2:	8f 90       	pop	r8
     8e4:	7f 90       	pop	r7
     8e6:	6f 90       	pop	r6
     8e8:	5f 90       	pop	r5
     8ea:	4f 90       	pop	r4
     8ec:	3f 90       	pop	r3
     8ee:	2f 90       	pop	r2
     8f0:	08 95       	ret

000008f2 <mtx_mul_2x2>:
void mtx_mul_2x2(double ANS[2][2],double A[2][2],double B[2][2]){
     8f2:	2f 92       	push	r2
     8f4:	3f 92       	push	r3
     8f6:	4f 92       	push	r4
     8f8:	5f 92       	push	r5
     8fa:	6f 92       	push	r6
     8fc:	7f 92       	push	r7
     8fe:	8f 92       	push	r8
     900:	9f 92       	push	r9
     902:	af 92       	push	r10
     904:	bf 92       	push	r11
     906:	cf 92       	push	r12
     908:	df 92       	push	r13
     90a:	ef 92       	push	r14
     90c:	ff 92       	push	r15
     90e:	0f 93       	push	r16
     910:	1f 93       	push	r17
     912:	df 93       	push	r29
     914:	cf 93       	push	r28
     916:	cd b7       	in	r28, 0x3d	; 61
     918:	de b7       	in	r29, 0x3e	; 62
     91a:	62 97       	sbiw	r28, 0x12	; 18
     91c:	cd bf       	out	0x3d, r28	; 61
     91e:	de bf       	out	0x3e, r29	; 62
     920:	89 8b       	std	Y+17, r24	; 0x11
     922:	9a 8b       	std	Y+18, r25	; 0x12
     924:	2a 01       	movw	r4, r20
	double buffer[2][2]={{0,0},{0,0}};
     926:	fe 01       	movw	r30, r28
     928:	31 96       	adiw	r30, 0x01	; 1
     92a:	80 e1       	ldi	r24, 0x10	; 16
     92c:	df 01       	movw	r26, r30
     92e:	1d 92       	st	X+, r1
     930:	8a 95       	dec	r24
     932:	e9 f7       	brne	.-6      	; 0x92e <mtx_mul_2x2+0x3c>
     934:	3b 01       	movw	r6, r22
     936:	88 24       	eor	r8, r8
     938:	99 24       	eor	r9, r9
	for(int i=0;i<2;i++)
		for(int j=0;j<2;j++)
     93a:	38 e0       	ldi	r19, 0x08	; 8
     93c:	23 2e       	mov	r2, r19
     93e:	31 2c       	mov	r3, r1
     940:	24 0e       	add	r2, r20
     942:	35 1e       	adc	r3, r21
     944:	4c c0       	rjmp	.+152    	; 0x9de <mtx_mul_2x2+0xec>
			for(int k=0;k<2;k++)
				buffer[i][j]+= A[i][k]*B[k][j];
     946:	f3 01       	movw	r30, r6
     948:	60 81       	ld	r22, Z
     94a:	71 81       	ldd	r23, Z+1	; 0x01
     94c:	82 81       	ldd	r24, Z+2	; 0x02
     94e:	93 81       	ldd	r25, Z+3	; 0x03
     950:	d6 01       	movw	r26, r12
     952:	2d 91       	ld	r18, X+
     954:	3d 91       	ld	r19, X+
     956:	4d 91       	ld	r20, X+
     958:	5c 91       	ld	r21, X
     95a:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
     95e:	f5 01       	movw	r30, r10
     960:	20 81       	ld	r18, Z
     962:	31 81       	ldd	r19, Z+1	; 0x01
     964:	42 81       	ldd	r20, Z+2	; 0x02
     966:	53 81       	ldd	r21, Z+3	; 0x03
     968:	0e 94 89 1c 	call	0x3912	; 0x3912 <__addsf3>
     96c:	7b 01       	movw	r14, r22
     96e:	8c 01       	movw	r16, r24
     970:	d3 01       	movw	r26, r6
     972:	14 96       	adiw	r26, 0x04	; 4
     974:	6d 91       	ld	r22, X+
     976:	7d 91       	ld	r23, X+
     978:	8d 91       	ld	r24, X+
     97a:	9c 91       	ld	r25, X
     97c:	17 97       	sbiw	r26, 0x07	; 7
     97e:	f6 01       	movw	r30, r12
     980:	20 85       	ldd	r18, Z+8	; 0x08
     982:	31 85       	ldd	r19, Z+9	; 0x09
     984:	42 85       	ldd	r20, Z+10	; 0x0a
     986:	53 85       	ldd	r21, Z+11	; 0x0b
     988:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
     98c:	9b 01       	movw	r18, r22
     98e:	ac 01       	movw	r20, r24
     990:	c8 01       	movw	r24, r16
     992:	b7 01       	movw	r22, r14
     994:	0e 94 89 1c 	call	0x3912	; 0x3912 <__addsf3>
     998:	d5 01       	movw	r26, r10
     99a:	6d 93       	st	X+, r22
     99c:	7d 93       	st	X+, r23
     99e:	8d 93       	st	X+, r24
     9a0:	9d 93       	st	X+, r25
     9a2:	5d 01       	movw	r10, r26
     9a4:	e4 e0       	ldi	r30, 0x04	; 4
     9a6:	f0 e0       	ldi	r31, 0x00	; 0
     9a8:	ce 0e       	add	r12, r30
     9aa:	df 1e       	adc	r13, r31
			ANS[i][j]=buffer[i][j];
}
void mtx_mul_2x2(double ANS[2][2],double A[2][2],double B[2][2]){
	double buffer[2][2]={{0,0},{0,0}};
	for(int i=0;i<2;i++)
		for(int j=0;j<2;j++)
     9ac:	c2 14       	cp	r12, r2
     9ae:	d3 04       	cpc	r13, r3
     9b0:	51 f6       	brne	.-108    	; 0x946 <mtx_mul_2x2+0x54>
		for(int j=0;j<4;j++)
			ANS[i][j]=buffer[i][j];
}
void mtx_mul_2x2(double ANS[2][2],double A[2][2],double B[2][2]){
	double buffer[2][2]={{0,0},{0,0}};
	for(int i=0;i<2;i++)
     9b2:	08 94       	sec
     9b4:	81 1c       	adc	r8, r1
     9b6:	91 1c       	adc	r9, r1
     9b8:	88 e0       	ldi	r24, 0x08	; 8
     9ba:	90 e0       	ldi	r25, 0x00	; 0
     9bc:	68 0e       	add	r6, r24
     9be:	79 1e       	adc	r7, r25
     9c0:	92 e0       	ldi	r25, 0x02	; 2
     9c2:	89 16       	cp	r8, r25
     9c4:	91 04       	cpc	r9, r1
     9c6:	59 f4       	brne	.+22     	; 0x9de <mtx_mul_2x2+0xec>
     9c8:	ae 01       	movw	r20, r28
     9ca:	4f 5f       	subi	r20, 0xFF	; 255
     9cc:	5f 4f       	sbci	r21, 0xFF	; 255
     9ce:	89 89       	ldd	r24, Y+17	; 0x11
     9d0:	9a 89       	ldd	r25, Y+18	; 0x12
     9d2:	9c 01       	movw	r18, r24
     9d4:	f9 01       	movw	r30, r18
		for(int j=0;j<2;j++)
			for(int k=0;k<2;k++)
				buffer[i][j]+= A[i][k]*B[k][j];
	for(int i=0;i<2;i++)
     9d6:	9e 01       	movw	r18, r28
     9d8:	2f 5e       	subi	r18, 0xEF	; 239
     9da:	3f 4f       	sbci	r19, 0xFF	; 255
     9dc:	0e c0       	rjmp	.+28     	; 0x9fa <mtx_mul_2x2+0x108>
		for(int j=0;j<4;j++)
			ANS[i][j]=buffer[i][j];
}
void mtx_mul_2x2(double ANS[2][2],double A[2][2],double B[2][2]){
	double buffer[2][2]={{0,0},{0,0}};
	for(int i=0;i<2;i++)
     9de:	54 01       	movw	r10, r8
     9e0:	23 e0       	ldi	r18, 0x03	; 3
     9e2:	aa 0c       	add	r10, r10
     9e4:	bb 1c       	adc	r11, r11
     9e6:	2a 95       	dec	r18
     9e8:	e1 f7       	brne	.-8      	; 0x9e2 <mtx_mul_2x2+0xf0>
     9ea:	a1 e0       	ldi	r26, 0x01	; 1
     9ec:	b0 e0       	ldi	r27, 0x00	; 0
     9ee:	ac 0f       	add	r26, r28
     9f0:	bd 1f       	adc	r27, r29
     9f2:	aa 0e       	add	r10, r26
     9f4:	bb 1e       	adc	r11, r27
     9f6:	62 01       	movw	r12, r4
     9f8:	a6 cf       	rjmp	.-180    	; 0x946 <mtx_mul_2x2+0x54>
		for(int j=0;j<2;j++)
			for(int k=0;k<2;k++)
				buffer[i][j]+= A[i][k]*B[k][j];
	for(int i=0;i<2;i++)
		for(int j=0;j<2;j++)
			ANS[i][j]=buffer[i][j];
     9fa:	da 01       	movw	r26, r20
     9fc:	ad 90       	ld	r10, X+
     9fe:	bd 90       	ld	r11, X+
     a00:	cd 90       	ld	r12, X+
     a02:	dc 90       	ld	r13, X
     a04:	13 97       	sbiw	r26, 0x03	; 3
     a06:	a0 82       	st	Z, r10
     a08:	b1 82       	std	Z+1, r11	; 0x01
     a0a:	c2 82       	std	Z+2, r12	; 0x02
     a0c:	d3 82       	std	Z+3, r13	; 0x03
     a0e:	14 96       	adiw	r26, 0x04	; 4
     a10:	ad 90       	ld	r10, X+
     a12:	bd 90       	ld	r11, X+
     a14:	cd 90       	ld	r12, X+
     a16:	dc 90       	ld	r13, X
     a18:	17 97       	sbiw	r26, 0x07	; 7
     a1a:	a4 82       	std	Z+4, r10	; 0x04
     a1c:	b5 82       	std	Z+5, r11	; 0x05
     a1e:	c6 82       	std	Z+6, r12	; 0x06
     a20:	d7 82       	std	Z+7, r13	; 0x07
     a22:	48 5f       	subi	r20, 0xF8	; 248
     a24:	5f 4f       	sbci	r21, 0xFF	; 255
     a26:	38 96       	adiw	r30, 0x08	; 8
	double buffer[2][2]={{0,0},{0,0}};
	for(int i=0;i<2;i++)
		for(int j=0;j<2;j++)
			for(int k=0;k<2;k++)
				buffer[i][j]+= A[i][k]*B[k][j];
	for(int i=0;i<2;i++)
     a28:	42 17       	cp	r20, r18
     a2a:	53 07       	cpc	r21, r19
     a2c:	31 f7       	brne	.-52     	; 0x9fa <mtx_mul_2x2+0x108>
		for(int j=0;j<2;j++)
			ANS[i][j]=buffer[i][j];
}
     a2e:	62 96       	adiw	r28, 0x12	; 18
     a30:	cd bf       	out	0x3d, r28	; 61
     a32:	de bf       	out	0x3e, r29	; 62
     a34:	cf 91       	pop	r28
     a36:	df 91       	pop	r29
     a38:	1f 91       	pop	r17
     a3a:	0f 91       	pop	r16
     a3c:	ff 90       	pop	r15
     a3e:	ef 90       	pop	r14
     a40:	df 90       	pop	r13
     a42:	cf 90       	pop	r12
     a44:	bf 90       	pop	r11
     a46:	af 90       	pop	r10
     a48:	9f 90       	pop	r9
     a4a:	8f 90       	pop	r8
     a4c:	7f 90       	pop	r7
     a4e:	6f 90       	pop	r6
     a50:	5f 90       	pop	r5
     a52:	4f 90       	pop	r4
     a54:	3f 90       	pop	r3
     a56:	2f 90       	pop	r2
     a58:	08 95       	ret

00000a5a <mtx_mul_2x1>:
void mtx_mul_2x1(double ANS[2],double A[2][2],double B[2]){
     a5a:	4f 92       	push	r4
     a5c:	5f 92       	push	r5
     a5e:	6f 92       	push	r6
     a60:	7f 92       	push	r7
     a62:	8f 92       	push	r8
     a64:	9f 92       	push	r9
     a66:	af 92       	push	r10
     a68:	bf 92       	push	r11
     a6a:	cf 92       	push	r12
     a6c:	df 92       	push	r13
     a6e:	ef 92       	push	r14
     a70:	ff 92       	push	r15
     a72:	0f 93       	push	r16
     a74:	1f 93       	push	r17
     a76:	df 93       	push	r29
     a78:	cf 93       	push	r28
     a7a:	cd b7       	in	r28, 0x3d	; 61
     a7c:	de b7       	in	r29, 0x3e	; 62
     a7e:	28 97       	sbiw	r28, 0x08	; 8
     a80:	cd bf       	out	0x3d, r28	; 61
     a82:	de bf       	out	0x3e, r29	; 62
     a84:	3c 01       	movw	r6, r24
     a86:	4a 01       	movw	r8, r20
	double buffer[2]={0,0};
     a88:	de 01       	movw	r26, r28
     a8a:	11 96       	adiw	r26, 0x01	; 1
     a8c:	ef e0       	ldi	r30, 0x0F	; 15
     a8e:	f0 e2       	ldi	r31, 0x20	; 32
     a90:	88 e0       	ldi	r24, 0x08	; 8
     a92:	01 90       	ld	r0, Z+
     a94:	0d 92       	st	X+, r0
     a96:	81 50       	subi	r24, 0x01	; 1
     a98:	e1 f7       	brne	.-8      	; 0xa92 <mtx_mul_2x1+0x38>
     a9a:	5e 01       	movw	r10, r28
     a9c:	08 94       	sec
     a9e:	a1 1c       	adc	r10, r1
     aa0:	b1 1c       	adc	r11, r1
     aa2:	6b 01       	movw	r12, r22
	for(int i=0;i<2;i++)
     aa4:	49 e0       	ldi	r20, 0x09	; 9
     aa6:	44 2e       	mov	r4, r20
     aa8:	51 2c       	mov	r5, r1
     aaa:	4c 0e       	add	r4, r28
     aac:	5d 1e       	adc	r5, r29
		for(int j=0;j<2;j++)
				buffer[i]+= A[i][j]*B[j];
     aae:	f6 01       	movw	r30, r12
     ab0:	60 81       	ld	r22, Z
     ab2:	71 81       	ldd	r23, Z+1	; 0x01
     ab4:	82 81       	ldd	r24, Z+2	; 0x02
     ab6:	93 81       	ldd	r25, Z+3	; 0x03
     ab8:	f4 01       	movw	r30, r8
     aba:	20 81       	ld	r18, Z
     abc:	31 81       	ldd	r19, Z+1	; 0x01
     abe:	42 81       	ldd	r20, Z+2	; 0x02
     ac0:	53 81       	ldd	r21, Z+3	; 0x03
     ac2:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
     ac6:	f5 01       	movw	r30, r10
     ac8:	20 81       	ld	r18, Z
     aca:	31 81       	ldd	r19, Z+1	; 0x01
     acc:	42 81       	ldd	r20, Z+2	; 0x02
     ace:	53 81       	ldd	r21, Z+3	; 0x03
     ad0:	0e 94 89 1c 	call	0x3912	; 0x3912 <__addsf3>
     ad4:	7b 01       	movw	r14, r22
     ad6:	8c 01       	movw	r16, r24
     ad8:	f6 01       	movw	r30, r12
     ada:	64 81       	ldd	r22, Z+4	; 0x04
     adc:	75 81       	ldd	r23, Z+5	; 0x05
     ade:	86 81       	ldd	r24, Z+6	; 0x06
     ae0:	97 81       	ldd	r25, Z+7	; 0x07
     ae2:	f4 01       	movw	r30, r8
     ae4:	24 81       	ldd	r18, Z+4	; 0x04
     ae6:	35 81       	ldd	r19, Z+5	; 0x05
     ae8:	46 81       	ldd	r20, Z+6	; 0x06
     aea:	57 81       	ldd	r21, Z+7	; 0x07
     aec:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
     af0:	9b 01       	movw	r18, r22
     af2:	ac 01       	movw	r20, r24
     af4:	c8 01       	movw	r24, r16
     af6:	b7 01       	movw	r22, r14
     af8:	0e 94 89 1c 	call	0x3912	; 0x3912 <__addsf3>
     afc:	f5 01       	movw	r30, r10
     afe:	61 93       	st	Z+, r22
     b00:	71 93       	st	Z+, r23
     b02:	81 93       	st	Z+, r24
     b04:	91 93       	st	Z+, r25
     b06:	5f 01       	movw	r10, r30
     b08:	88 e0       	ldi	r24, 0x08	; 8
     b0a:	90 e0       	ldi	r25, 0x00	; 0
     b0c:	c8 0e       	add	r12, r24
     b0e:	d9 1e       	adc	r13, r25
		for(int j=0;j<2;j++)
			ANS[i][j]=buffer[i][j];
}
void mtx_mul_2x1(double ANS[2],double A[2][2],double B[2]){
	double buffer[2]={0,0};
	for(int i=0;i<2;i++)
     b10:	e4 15       	cp	r30, r4
     b12:	f5 05       	cpc	r31, r5
     b14:	61 f6       	brne	.-104    	; 0xaae <mtx_mul_2x1+0x54>
		for(int j=0;j<2;j++)
				buffer[i]+= A[i][j]*B[j];
	for(int i=0;i<2;i++)
			ANS[i]=buffer[i];
     b16:	89 81       	ldd	r24, Y+1	; 0x01
     b18:	9a 81       	ldd	r25, Y+2	; 0x02
     b1a:	ab 81       	ldd	r26, Y+3	; 0x03
     b1c:	bc 81       	ldd	r27, Y+4	; 0x04
     b1e:	f3 01       	movw	r30, r6
     b20:	80 83       	st	Z, r24
     b22:	91 83       	std	Z+1, r25	; 0x01
     b24:	a2 83       	std	Z+2, r26	; 0x02
     b26:	b3 83       	std	Z+3, r27	; 0x03
     b28:	8d 81       	ldd	r24, Y+5	; 0x05
     b2a:	9e 81       	ldd	r25, Y+6	; 0x06
     b2c:	af 81       	ldd	r26, Y+7	; 0x07
     b2e:	b8 85       	ldd	r27, Y+8	; 0x08
     b30:	84 83       	std	Z+4, r24	; 0x04
     b32:	95 83       	std	Z+5, r25	; 0x05
     b34:	a6 83       	std	Z+6, r26	; 0x06
     b36:	b7 83       	std	Z+7, r27	; 0x07
}
     b38:	28 96       	adiw	r28, 0x08	; 8
     b3a:	cd bf       	out	0x3d, r28	; 61
     b3c:	de bf       	out	0x3e, r29	; 62
     b3e:	cf 91       	pop	r28
     b40:	df 91       	pop	r29
     b42:	1f 91       	pop	r17
     b44:	0f 91       	pop	r16
     b46:	ff 90       	pop	r15
     b48:	ef 90       	pop	r14
     b4a:	df 90       	pop	r13
     b4c:	cf 90       	pop	r12
     b4e:	bf 90       	pop	r11
     b50:	af 90       	pop	r10
     b52:	9f 90       	pop	r9
     b54:	8f 90       	pop	r8
     b56:	7f 90       	pop	r7
     b58:	6f 90       	pop	r6
     b5a:	5f 90       	pop	r5
     b5c:	4f 90       	pop	r4
     b5e:	08 95       	ret

00000b60 <mtx_add_2x2>:
void mtx_add_2x2(double ANS[2][2],double A[2][2],double B[2][2],double s){
     b60:	8f 92       	push	r8
     b62:	9f 92       	push	r9
     b64:	af 92       	push	r10
     b66:	bf 92       	push	r11
     b68:	cf 92       	push	r12
     b6a:	df 92       	push	r13
     b6c:	ef 92       	push	r14
     b6e:	ff 92       	push	r15
     b70:	0f 93       	push	r16
     b72:	1f 93       	push	r17
     b74:	cf 93       	push	r28
     b76:	df 93       	push	r29
     b78:	48 01       	movw	r8, r16
     b7a:	59 01       	movw	r10, r18
     b7c:	6b 01       	movw	r12, r22
     b7e:	7a 01       	movw	r14, r20
     b80:	ec 01       	movw	r28, r24
     b82:	00 e0       	ldi	r16, 0x00	; 0
     b84:	10 e0       	ldi	r17, 0x00	; 0
	for(int i=0;i<2;i++)
		for(int j=0;j<2;j++)
			ANS[i][j]= A[i][j]+s*B[i][j];
     b86:	c5 01       	movw	r24, r10
     b88:	b4 01       	movw	r22, r8
     b8a:	f7 01       	movw	r30, r14
     b8c:	20 81       	ld	r18, Z
     b8e:	31 81       	ldd	r19, Z+1	; 0x01
     b90:	42 81       	ldd	r20, Z+2	; 0x02
     b92:	53 81       	ldd	r21, Z+3	; 0x03
     b94:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
     b98:	9b 01       	movw	r18, r22
     b9a:	ac 01       	movw	r20, r24
     b9c:	f6 01       	movw	r30, r12
     b9e:	60 81       	ld	r22, Z
     ba0:	71 81       	ldd	r23, Z+1	; 0x01
     ba2:	82 81       	ldd	r24, Z+2	; 0x02
     ba4:	93 81       	ldd	r25, Z+3	; 0x03
     ba6:	0e 94 89 1c 	call	0x3912	; 0x3912 <__addsf3>
     baa:	68 83       	st	Y, r22
     bac:	79 83       	std	Y+1, r23	; 0x01
     bae:	8a 83       	std	Y+2, r24	; 0x02
     bb0:	9b 83       	std	Y+3, r25	; 0x03
     bb2:	c5 01       	movw	r24, r10
     bb4:	b4 01       	movw	r22, r8
     bb6:	f7 01       	movw	r30, r14
     bb8:	24 81       	ldd	r18, Z+4	; 0x04
     bba:	35 81       	ldd	r19, Z+5	; 0x05
     bbc:	46 81       	ldd	r20, Z+6	; 0x06
     bbe:	57 81       	ldd	r21, Z+7	; 0x07
     bc0:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
     bc4:	9b 01       	movw	r18, r22
     bc6:	ac 01       	movw	r20, r24
     bc8:	f6 01       	movw	r30, r12
     bca:	64 81       	ldd	r22, Z+4	; 0x04
     bcc:	75 81       	ldd	r23, Z+5	; 0x05
     bce:	86 81       	ldd	r24, Z+6	; 0x06
     bd0:	97 81       	ldd	r25, Z+7	; 0x07
     bd2:	0e 94 89 1c 	call	0x3912	; 0x3912 <__addsf3>
     bd6:	6c 83       	std	Y+4, r22	; 0x04
     bd8:	7d 83       	std	Y+5, r23	; 0x05
     bda:	8e 83       	std	Y+6, r24	; 0x06
     bdc:	9f 83       	std	Y+7, r25	; 0x07
				buffer[i]+= A[i][j]*B[j];
	for(int i=0;i<2;i++)
			ANS[i]=buffer[i];
}
void mtx_add_2x2(double ANS[2][2],double A[2][2],double B[2][2],double s){
	for(int i=0;i<2;i++)
     bde:	0f 5f       	subi	r16, 0xFF	; 255
     be0:	1f 4f       	sbci	r17, 0xFF	; 255
     be2:	88 e0       	ldi	r24, 0x08	; 8
     be4:	90 e0       	ldi	r25, 0x00	; 0
     be6:	c8 0e       	add	r12, r24
     be8:	d9 1e       	adc	r13, r25
     bea:	e8 0e       	add	r14, r24
     bec:	f9 1e       	adc	r15, r25
     bee:	28 96       	adiw	r28, 0x08	; 8
     bf0:	02 30       	cpi	r16, 0x02	; 2
     bf2:	11 05       	cpc	r17, r1
     bf4:	41 f6       	brne	.-112    	; 0xb86 <mtx_add_2x2+0x26>
		for(int j=0;j<2;j++)
			ANS[i][j]= A[i][j]+s*B[i][j];
}
     bf6:	df 91       	pop	r29
     bf8:	cf 91       	pop	r28
     bfa:	1f 91       	pop	r17
     bfc:	0f 91       	pop	r16
     bfe:	ff 90       	pop	r15
     c00:	ef 90       	pop	r14
     c02:	df 90       	pop	r13
     c04:	cf 90       	pop	r12
     c06:	bf 90       	pop	r11
     c08:	af 90       	pop	r10
     c0a:	9f 90       	pop	r9
     c0c:	8f 90       	pop	r8
     c0e:	08 95       	ret

00000c10 <mtx_add_2x1>:
void mtx_add_2x1(double ANS[2],double A[2],double B[2],double s){
     c10:	8f 92       	push	r8
     c12:	9f 92       	push	r9
     c14:	af 92       	push	r10
     c16:	bf 92       	push	r11
     c18:	cf 92       	push	r12
     c1a:	df 92       	push	r13
     c1c:	ef 92       	push	r14
     c1e:	ff 92       	push	r15
     c20:	0f 93       	push	r16
     c22:	1f 93       	push	r17
     c24:	4c 01       	movw	r8, r24
     c26:	5b 01       	movw	r10, r22
     c28:	6a 01       	movw	r12, r20
     c2a:	78 01       	movw	r14, r16
     c2c:	89 01       	movw	r16, r18
	for(int i=0;i<2;i++)
		ANS[i]= A[i]+s*B[i];
     c2e:	c8 01       	movw	r24, r16
     c30:	b7 01       	movw	r22, r14
     c32:	fa 01       	movw	r30, r20
     c34:	20 81       	ld	r18, Z
     c36:	31 81       	ldd	r19, Z+1	; 0x01
     c38:	42 81       	ldd	r20, Z+2	; 0x02
     c3a:	53 81       	ldd	r21, Z+3	; 0x03
     c3c:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
     c40:	9b 01       	movw	r18, r22
     c42:	ac 01       	movw	r20, r24
     c44:	f5 01       	movw	r30, r10
     c46:	60 81       	ld	r22, Z
     c48:	71 81       	ldd	r23, Z+1	; 0x01
     c4a:	82 81       	ldd	r24, Z+2	; 0x02
     c4c:	93 81       	ldd	r25, Z+3	; 0x03
     c4e:	0e 94 89 1c 	call	0x3912	; 0x3912 <__addsf3>
     c52:	f4 01       	movw	r30, r8
     c54:	60 83       	st	Z, r22
     c56:	71 83       	std	Z+1, r23	; 0x01
     c58:	82 83       	std	Z+2, r24	; 0x02
     c5a:	93 83       	std	Z+3, r25	; 0x03
     c5c:	c8 01       	movw	r24, r16
     c5e:	b7 01       	movw	r22, r14
     c60:	f6 01       	movw	r30, r12
     c62:	24 81       	ldd	r18, Z+4	; 0x04
     c64:	35 81       	ldd	r19, Z+5	; 0x05
     c66:	46 81       	ldd	r20, Z+6	; 0x06
     c68:	57 81       	ldd	r21, Z+7	; 0x07
     c6a:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
     c6e:	9b 01       	movw	r18, r22
     c70:	ac 01       	movw	r20, r24
     c72:	f5 01       	movw	r30, r10
     c74:	64 81       	ldd	r22, Z+4	; 0x04
     c76:	75 81       	ldd	r23, Z+5	; 0x05
     c78:	86 81       	ldd	r24, Z+6	; 0x06
     c7a:	97 81       	ldd	r25, Z+7	; 0x07
     c7c:	0e 94 89 1c 	call	0x3912	; 0x3912 <__addsf3>
     c80:	f4 01       	movw	r30, r8
     c82:	64 83       	std	Z+4, r22	; 0x04
     c84:	75 83       	std	Z+5, r23	; 0x05
     c86:	86 83       	std	Z+6, r24	; 0x06
     c88:	97 83       	std	Z+7, r25	; 0x07
}
     c8a:	1f 91       	pop	r17
     c8c:	0f 91       	pop	r16
     c8e:	ff 90       	pop	r15
     c90:	ef 90       	pop	r14
     c92:	df 90       	pop	r13
     c94:	cf 90       	pop	r12
     c96:	bf 90       	pop	r11
     c98:	af 90       	pop	r10
     c9a:	9f 90       	pop	r9
     c9c:	8f 90       	pop	r8
     c9e:	08 95       	ret

00000ca0 <mtx_inv_2x2>:
void mtx_inv_2x2(double ANS[2][2],double A[2][2]){
     ca0:	2f 92       	push	r2
     ca2:	3f 92       	push	r3
     ca4:	4f 92       	push	r4
     ca6:	5f 92       	push	r5
     ca8:	6f 92       	push	r6
     caa:	7f 92       	push	r7
     cac:	8f 92       	push	r8
     cae:	9f 92       	push	r9
     cb0:	af 92       	push	r10
     cb2:	bf 92       	push	r11
     cb4:	cf 92       	push	r12
     cb6:	df 92       	push	r13
     cb8:	ef 92       	push	r14
     cba:	ff 92       	push	r15
     cbc:	0f 93       	push	r16
     cbe:	1f 93       	push	r17
     cc0:	df 93       	push	r29
     cc2:	cf 93       	push	r28
     cc4:	cd b7       	in	r28, 0x3d	; 61
     cc6:	de b7       	in	r29, 0x3e	; 62
     cc8:	66 97       	sbiw	r28, 0x16	; 22
     cca:	cd bf       	out	0x3d, r28	; 61
     ccc:	de bf       	out	0x3e, r29	; 62
     cce:	8d 8b       	std	Y+21, r24	; 0x15
     cd0:	9e 8b       	std	Y+22, r25	; 0x16
     cd2:	fb 01       	movw	r30, r22
	double det=A[0][0]*A[1][1]-A[0][1]*A[1][0];
     cd4:	80 81       	ld	r24, Z
     cd6:	91 81       	ldd	r25, Z+1	; 0x01
     cd8:	a2 81       	ldd	r26, Z+2	; 0x02
     cda:	b3 81       	ldd	r27, Z+3	; 0x03
     cdc:	89 8b       	std	Y+17, r24	; 0x11
     cde:	9a 8b       	std	Y+18, r25	; 0x12
     ce0:	ab 8b       	std	Y+19, r26	; 0x13
     ce2:	bc 8b       	std	Y+20, r27	; 0x14
     ce4:	a4 84       	ldd	r10, Z+12	; 0x0c
     ce6:	b5 84       	ldd	r11, Z+13	; 0x0d
     ce8:	c6 84       	ldd	r12, Z+14	; 0x0e
     cea:	d7 84       	ldd	r13, Z+15	; 0x0f
     cec:	64 80       	ldd	r6, Z+4	; 0x04
     cee:	75 80       	ldd	r7, Z+5	; 0x05
     cf0:	86 80       	ldd	r8, Z+6	; 0x06
     cf2:	97 80       	ldd	r9, Z+7	; 0x07
     cf4:	20 84       	ldd	r2, Z+8	; 0x08
     cf6:	31 84       	ldd	r3, Z+9	; 0x09
     cf8:	42 84       	ldd	r4, Z+10	; 0x0a
     cfa:	53 84       	ldd	r5, Z+11	; 0x0b
     cfc:	bc 01       	movw	r22, r24
     cfe:	cd 01       	movw	r24, r26
     d00:	a6 01       	movw	r20, r12
     d02:	95 01       	movw	r18, r10
     d04:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
     d08:	7b 01       	movw	r14, r22
     d0a:	8c 01       	movw	r16, r24
     d0c:	c4 01       	movw	r24, r8
     d0e:	b3 01       	movw	r22, r6
     d10:	a2 01       	movw	r20, r4
     d12:	91 01       	movw	r18, r2
     d14:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
     d18:	9b 01       	movw	r18, r22
     d1a:	ac 01       	movw	r20, r24
     d1c:	c8 01       	movw	r24, r16
     d1e:	b7 01       	movw	r22, r14
     d20:	0e 94 88 1c 	call	0x3910	; 0x3910 <__subsf3>
     d24:	7b 01       	movw	r14, r22
     d26:	8c 01       	movw	r16, r24
	double buffer[2][2];
	if(det==0)
     d28:	20 e0       	ldi	r18, 0x00	; 0
     d2a:	30 e0       	ldi	r19, 0x00	; 0
     d2c:	40 e0       	ldi	r20, 0x00	; 0
     d2e:	50 e0       	ldi	r21, 0x00	; 0
     d30:	0e 94 ed 1c 	call	0x39da	; 0x39da <__cmpsf2>
     d34:	88 23       	and	r24, r24
     d36:	09 f4       	brne	.+2      	; 0xd3a <mtx_inv_2x2+0x9a>
     d38:	50 c0       	rjmp	.+160    	; 0xdda <mtx_inv_2x2+0x13a>
		return;
	else{
		buffer[0][0]=A[1][1]/det;
     d3a:	c6 01       	movw	r24, r12
     d3c:	b5 01       	movw	r22, r10
     d3e:	a8 01       	movw	r20, r16
     d40:	97 01       	movw	r18, r14
     d42:	0e 94 f1 1c 	call	0x39e2	; 0x39e2 <__divsf3>
     d46:	69 83       	std	Y+1, r22	; 0x01
     d48:	7a 83       	std	Y+2, r23	; 0x02
     d4a:	8b 83       	std	Y+3, r24	; 0x03
     d4c:	9c 83       	std	Y+4, r25	; 0x04
		buffer[0][1]=-A[0][1]/det;
     d4e:	c4 01       	movw	r24, r8
     d50:	b3 01       	movw	r22, r6
     d52:	90 58       	subi	r25, 0x80	; 128
     d54:	a8 01       	movw	r20, r16
     d56:	97 01       	movw	r18, r14
     d58:	0e 94 f1 1c 	call	0x39e2	; 0x39e2 <__divsf3>
     d5c:	6d 83       	std	Y+5, r22	; 0x05
     d5e:	7e 83       	std	Y+6, r23	; 0x06
     d60:	8f 83       	std	Y+7, r24	; 0x07
     d62:	98 87       	std	Y+8, r25	; 0x08
		buffer[1][0]=-A[1][0]/det;
     d64:	c2 01       	movw	r24, r4
     d66:	b1 01       	movw	r22, r2
     d68:	90 58       	subi	r25, 0x80	; 128
     d6a:	a8 01       	movw	r20, r16
     d6c:	97 01       	movw	r18, r14
     d6e:	0e 94 f1 1c 	call	0x39e2	; 0x39e2 <__divsf3>
     d72:	69 87       	std	Y+9, r22	; 0x09
     d74:	7a 87       	std	Y+10, r23	; 0x0a
     d76:	8b 87       	std	Y+11, r24	; 0x0b
     d78:	9c 87       	std	Y+12, r25	; 0x0c
		buffer[1][1]=A[0][0]/det;
     d7a:	69 89       	ldd	r22, Y+17	; 0x11
     d7c:	7a 89       	ldd	r23, Y+18	; 0x12
     d7e:	8b 89       	ldd	r24, Y+19	; 0x13
     d80:	9c 89       	ldd	r25, Y+20	; 0x14
     d82:	a8 01       	movw	r20, r16
     d84:	97 01       	movw	r18, r14
     d86:	0e 94 f1 1c 	call	0x39e2	; 0x39e2 <__divsf3>
     d8a:	6d 87       	std	Y+13, r22	; 0x0d
     d8c:	7e 87       	std	Y+14, r23	; 0x0e
     d8e:	8f 87       	std	Y+15, r24	; 0x0f
     d90:	98 8b       	std	Y+16, r25	; 0x10
     d92:	ae 01       	movw	r20, r28
     d94:	4f 5f       	subi	r20, 0xFF	; 255
     d96:	5f 4f       	sbci	r21, 0xFF	; 255
     d98:	2d 89       	ldd	r18, Y+21	; 0x15
     d9a:	3e 89       	ldd	r19, Y+22	; 0x16
     d9c:	c9 01       	movw	r24, r18
     d9e:	fc 01       	movw	r30, r24
	for(int i=0;i<2;i++)
     da0:	9e 01       	movw	r18, r28
     da2:	2f 5e       	subi	r18, 0xEF	; 239
     da4:	3f 4f       	sbci	r19, 0xFF	; 255
		for(int j=0;j<2;j++)
			ANS[i][j]=buffer[i][j];
     da6:	da 01       	movw	r26, r20
     da8:	ed 90       	ld	r14, X+
     daa:	fd 90       	ld	r15, X+
     dac:	0d 91       	ld	r16, X+
     dae:	1c 91       	ld	r17, X
     db0:	13 97       	sbiw	r26, 0x03	; 3
     db2:	e0 82       	st	Z, r14
     db4:	f1 82       	std	Z+1, r15	; 0x01
     db6:	02 83       	std	Z+2, r16	; 0x02
     db8:	13 83       	std	Z+3, r17	; 0x03
     dba:	14 96       	adiw	r26, 0x04	; 4
     dbc:	ed 90       	ld	r14, X+
     dbe:	fd 90       	ld	r15, X+
     dc0:	0d 91       	ld	r16, X+
     dc2:	1c 91       	ld	r17, X
     dc4:	17 97       	sbiw	r26, 0x07	; 7
     dc6:	e4 82       	std	Z+4, r14	; 0x04
     dc8:	f5 82       	std	Z+5, r15	; 0x05
     dca:	06 83       	std	Z+6, r16	; 0x06
     dcc:	17 83       	std	Z+7, r17	; 0x07
     dce:	48 5f       	subi	r20, 0xF8	; 248
     dd0:	5f 4f       	sbci	r21, 0xFF	; 255
     dd2:	38 96       	adiw	r30, 0x08	; 8
	else{
		buffer[0][0]=A[1][1]/det;
		buffer[0][1]=-A[0][1]/det;
		buffer[1][0]=-A[1][0]/det;
		buffer[1][1]=A[0][0]/det;
	for(int i=0;i<2;i++)
     dd4:	42 17       	cp	r20, r18
     dd6:	53 07       	cpc	r21, r19
     dd8:	31 f7       	brne	.-52     	; 0xda6 <mtx_inv_2x2+0x106>
		for(int j=0;j<2;j++)
			ANS[i][j]=buffer[i][j];
	}
}
     dda:	66 96       	adiw	r28, 0x16	; 22
     ddc:	cd bf       	out	0x3d, r28	; 61
     dde:	de bf       	out	0x3e, r29	; 62
     de0:	cf 91       	pop	r28
     de2:	df 91       	pop	r29
     de4:	1f 91       	pop	r17
     de6:	0f 91       	pop	r16
     de8:	ff 90       	pop	r15
     dea:	ef 90       	pop	r14
     dec:	df 90       	pop	r13
     dee:	cf 90       	pop	r12
     df0:	bf 90       	pop	r11
     df2:	af 90       	pop	r10
     df4:	9f 90       	pop	r9
     df6:	8f 90       	pop	r8
     df8:	7f 90       	pop	r7
     dfa:	6f 90       	pop	r6
     dfc:	5f 90       	pop	r5
     dfe:	4f 90       	pop	r4
     e00:	3f 90       	pop	r3
     e02:	2f 90       	pop	r2
     e04:	08 95       	ret

00000e06 <mtx_det_4x4>:
	}
}



double mtx_det_4x4( double A[4][4]) {
     e06:	2f 92       	push	r2
     e08:	3f 92       	push	r3
     e0a:	4f 92       	push	r4
     e0c:	5f 92       	push	r5
     e0e:	6f 92       	push	r6
     e10:	7f 92       	push	r7
     e12:	8f 92       	push	r8
     e14:	9f 92       	push	r9
     e16:	af 92       	push	r10
     e18:	bf 92       	push	r11
     e1a:	cf 92       	push	r12
     e1c:	df 92       	push	r13
     e1e:	ef 92       	push	r14
     e20:	ff 92       	push	r15
     e22:	0f 93       	push	r16
     e24:	1f 93       	push	r17
     e26:	df 93       	push	r29
     e28:	cf 93       	push	r28
     e2a:	cd b7       	in	r28, 0x3d	; 61
     e2c:	de b7       	in	r29, 0x3e	; 62
     e2e:	c6 55       	subi	r28, 0x56	; 86
     e30:	d0 40       	sbci	r29, 0x00	; 0
     e32:	cd bf       	out	0x3d, r28	; 61
     e34:	de bf       	out	0x3e, r29	; 62
     e36:	8c 01       	movw	r16, r24
   double value;
   value =
     e38:	dc 01       	movw	r26, r24
     e3a:	1c 96       	adiw	r26, 0x0c	; 12
     e3c:	8d 91       	ld	r24, X+
     e3e:	9d 91       	ld	r25, X+
     e40:	0d 90       	ld	r0, X+
     e42:	bc 91       	ld	r27, X
     e44:	a0 2d       	mov	r26, r0
     e46:	8d a3       	std	Y+37, r24	; 0x25
     e48:	9e a3       	std	Y+38, r25	; 0x26
     e4a:	af a3       	std	Y+39, r26	; 0x27
     e4c:	b8 a7       	std	Y+40, r27	; 0x28
     e4e:	60 e1       	ldi	r22, 0x10	; 16
     e50:	e6 2e       	mov	r14, r22
     e52:	f1 2c       	mov	r15, r1
     e54:	e0 0e       	add	r14, r16
     e56:	f1 1e       	adc	r15, r17
     e58:	d7 01       	movw	r26, r14
     e5a:	18 96       	adiw	r26, 0x08	; 8
     e5c:	8d 91       	ld	r24, X+
     e5e:	9d 91       	ld	r25, X+
     e60:	0d 90       	ld	r0, X+
     e62:	bc 91       	ld	r27, X
     e64:	a0 2d       	mov	r26, r0
     e66:	89 a3       	std	Y+33, r24	; 0x21
     e68:	9a a3       	std	Y+34, r25	; 0x22
     e6a:	ab a3       	std	Y+35, r26	; 0x23
     e6c:	bc a3       	std	Y+36, r27	; 0x24
     e6e:	6d a1       	ldd	r22, Y+37	; 0x25
     e70:	7e a1       	ldd	r23, Y+38	; 0x26
     e72:	8f a1       	ldd	r24, Y+39	; 0x27
     e74:	98 a5       	ldd	r25, Y+40	; 0x28
     e76:	29 a1       	ldd	r18, Y+33	; 0x21
     e78:	3a a1       	ldd	r19, Y+34	; 0x22
     e7a:	4b a1       	ldd	r20, Y+35	; 0x23
     e7c:	5c a1       	ldd	r21, Y+36	; 0x24
     e7e:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
     e82:	69 a7       	std	Y+41, r22	; 0x29
     e84:	7a a7       	std	Y+42, r23	; 0x2a
     e86:	8b a7       	std	Y+43, r24	; 0x2b
     e88:	9c a7       	std	Y+44, r25	; 0x2c
     e8a:	50 e2       	ldi	r21, 0x20	; 32
     e8c:	c5 2e       	mov	r12, r21
     e8e:	d1 2c       	mov	r13, r1
     e90:	c0 0e       	add	r12, r16
     e92:	d1 1e       	adc	r13, r17
     e94:	d6 01       	movw	r26, r12
     e96:	14 96       	adiw	r26, 0x04	; 4
     e98:	8d 91       	ld	r24, X+
     e9a:	9d 91       	ld	r25, X+
     e9c:	0d 90       	ld	r0, X+
     e9e:	bc 91       	ld	r27, X
     ea0:	a0 2d       	mov	r26, r0
     ea2:	8d 8f       	std	Y+29, r24	; 0x1d
     ea4:	9e 8f       	std	Y+30, r25	; 0x1e
     ea6:	af 8f       	std	Y+31, r26	; 0x1f
     ea8:	b8 a3       	std	Y+32, r27	; 0x20
     eaa:	f8 01       	movw	r30, r16
     eac:	f0 96       	adiw	r30, 0x30	; 48
     eae:	67 96       	adiw	r28, 0x17	; 23
     eb0:	ee af       	std	Y+62, r30	; 0x3e
     eb2:	ff af       	std	Y+63, r31	; 0x3f
     eb4:	67 97       	sbiw	r28, 0x17	; 23
     eb6:	d8 01       	movw	r26, r16
     eb8:	d0 96       	adiw	r26, 0x30	; 48
     eba:	8d 91       	ld	r24, X+
     ebc:	9d 91       	ld	r25, X+
     ebe:	0d 90       	ld	r0, X+
     ec0:	bc 91       	ld	r27, X
     ec2:	a0 2d       	mov	r26, r0
     ec4:	89 8f       	std	Y+25, r24	; 0x19
     ec6:	9a 8f       	std	Y+26, r25	; 0x1a
     ec8:	ab 8f       	std	Y+27, r26	; 0x1b
     eca:	bc 8f       	std	Y+28, r27	; 0x1c
     ecc:	d8 01       	movw	r26, r16
     ece:	18 96       	adiw	r26, 0x08	; 8
     ed0:	8d 91       	ld	r24, X+
     ed2:	9d 91       	ld	r25, X+
     ed4:	0d 90       	ld	r0, X+
     ed6:	bc 91       	ld	r27, X
     ed8:	a0 2d       	mov	r26, r0
     eda:	8d 8b       	std	Y+21, r24	; 0x15
     edc:	9e 8b       	std	Y+22, r25	; 0x16
     ede:	af 8b       	std	Y+23, r26	; 0x17
     ee0:	b8 8f       	std	Y+24, r27	; 0x18
     ee2:	f7 01       	movw	r30, r14
     ee4:	64 84       	ldd	r6, Z+12	; 0x0c
     ee6:	75 84       	ldd	r7, Z+13	; 0x0d
     ee8:	86 84       	ldd	r8, Z+14	; 0x0e
     eea:	97 84       	ldd	r9, Z+15	; 0x0f
     eec:	bc 01       	movw	r22, r24
     eee:	cd 01       	movw	r24, r26
     ef0:	a4 01       	movw	r20, r8
     ef2:	93 01       	movw	r18, r6
     ef4:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
     ef8:	6d a7       	std	Y+45, r22	; 0x2d
     efa:	7e a7       	std	Y+46, r23	; 0x2e
     efc:	8f a7       	std	Y+47, r24	; 0x2f
     efe:	98 ab       	std	Y+48, r25	; 0x30
     f00:	d7 01       	movw	r26, r14
     f02:	14 96       	adiw	r26, 0x04	; 4
     f04:	8d 91       	ld	r24, X+
     f06:	9d 91       	ld	r25, X+
     f08:	0d 90       	ld	r0, X+
     f0a:	bc 91       	ld	r27, X
     f0c:	a0 2d       	mov	r26, r0
     f0e:	89 8b       	std	Y+17, r24	; 0x11
     f10:	9a 8b       	std	Y+18, r25	; 0x12
     f12:	ab 8b       	std	Y+19, r26	; 0x13
     f14:	bc 8b       	std	Y+20, r27	; 0x14
     f16:	6d a1       	ldd	r22, Y+37	; 0x25
     f18:	7e a1       	ldd	r23, Y+38	; 0x26
     f1a:	8f a1       	ldd	r24, Y+39	; 0x27
     f1c:	98 a5       	ldd	r25, Y+40	; 0x28
     f1e:	29 89       	ldd	r18, Y+17	; 0x11
     f20:	3a 89       	ldd	r19, Y+18	; 0x12
     f22:	4b 89       	ldd	r20, Y+19	; 0x13
     f24:	5c 89       	ldd	r21, Y+20	; 0x14
     f26:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
     f2a:	69 ab       	std	Y+49, r22	; 0x31
     f2c:	7a ab       	std	Y+50, r23	; 0x32
     f2e:	8b ab       	std	Y+51, r24	; 0x33
     f30:	9c ab       	std	Y+52, r25	; 0x34
     f32:	d6 01       	movw	r26, r12
     f34:	18 96       	adiw	r26, 0x08	; 8
     f36:	8d 91       	ld	r24, X+
     f38:	9d 91       	ld	r25, X+
     f3a:	0d 90       	ld	r0, X+
     f3c:	bc 91       	ld	r27, X
     f3e:	a0 2d       	mov	r26, r0
     f40:	8d 87       	std	Y+13, r24	; 0x0d
     f42:	9e 87       	std	Y+14, r25	; 0x0e
     f44:	af 87       	std	Y+15, r26	; 0x0f
     f46:	b8 8b       	std	Y+16, r27	; 0x10
     f48:	f8 01       	movw	r30, r16
     f4a:	24 80       	ldd	r2, Z+4	; 0x04
     f4c:	35 80       	ldd	r3, Z+5	; 0x05
     f4e:	46 80       	ldd	r4, Z+6	; 0x06
     f50:	57 80       	ldd	r5, Z+7	; 0x07
     f52:	c2 01       	movw	r24, r4
     f54:	b1 01       	movw	r22, r2
     f56:	a4 01       	movw	r20, r8
     f58:	93 01       	movw	r18, r6
     f5a:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
     f5e:	6d ab       	std	Y+53, r22	; 0x35
     f60:	7e ab       	std	Y+54, r23	; 0x36
     f62:	8f ab       	std	Y+55, r24	; 0x37
     f64:	98 af       	std	Y+56, r25	; 0x38
     f66:	6d 89       	ldd	r22, Y+21	; 0x15
     f68:	7e 89       	ldd	r23, Y+22	; 0x16
     f6a:	8f 89       	ldd	r24, Y+23	; 0x17
     f6c:	98 8d       	ldd	r25, Y+24	; 0x18
     f6e:	29 89       	ldd	r18, Y+17	; 0x11
     f70:	3a 89       	ldd	r19, Y+18	; 0x12
     f72:	4b 89       	ldd	r20, Y+19	; 0x13
     f74:	5c 89       	ldd	r21, Y+20	; 0x14
     f76:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
     f7a:	69 af       	std	Y+57, r22	; 0x39
     f7c:	7a af       	std	Y+58, r23	; 0x3a
     f7e:	8b af       	std	Y+59, r24	; 0x3b
     f80:	9c af       	std	Y+60, r25	; 0x3c
     f82:	d6 01       	movw	r26, r12
     f84:	1c 96       	adiw	r26, 0x0c	; 12
     f86:	8d 91       	ld	r24, X+
     f88:	9d 91       	ld	r25, X+
     f8a:	0d 90       	ld	r0, X+
     f8c:	bc 91       	ld	r27, X
     f8e:	a0 2d       	mov	r26, r0
     f90:	89 87       	std	Y+9, r24	; 0x09
     f92:	9a 87       	std	Y+10, r25	; 0x0a
     f94:	ab 87       	std	Y+11, r26	; 0x0b
     f96:	bc 87       	std	Y+12, r27	; 0x0c
     f98:	c2 01       	movw	r24, r4
     f9a:	b1 01       	movw	r22, r2
     f9c:	29 a1       	ldd	r18, Y+33	; 0x21
     f9e:	3a a1       	ldd	r19, Y+34	; 0x22
     fa0:	4b a1       	ldd	r20, Y+35	; 0x23
     fa2:	5c a1       	ldd	r21, Y+36	; 0x24
     fa4:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
     fa8:	21 96       	adiw	r28, 0x01	; 1
     faa:	6c af       	std	Y+60, r22	; 0x3c
     fac:	7d af       	std	Y+61, r23	; 0x3d
     fae:	8e af       	std	Y+62, r24	; 0x3e
     fb0:	9f af       	std	Y+63, r25	; 0x3f
     fb2:	21 97       	sbiw	r28, 0x01	; 1
     fb4:	d8 01       	movw	r26, r16
     fb6:	90 96       	adiw	r26, 0x20	; 32
     fb8:	8d 91       	ld	r24, X+
     fba:	9d 91       	ld	r25, X+
     fbc:	0d 90       	ld	r0, X+
     fbe:	bc 91       	ld	r27, X
     fc0:	a0 2d       	mov	r26, r0
     fc2:	8d 83       	std	Y+5, r24	; 0x05
     fc4:	9e 83       	std	Y+6, r25	; 0x06
     fc6:	af 83       	std	Y+7, r26	; 0x07
     fc8:	b8 87       	std	Y+8, r27	; 0x08
     fca:	67 96       	adiw	r28, 0x17	; 23
     fcc:	ae ad       	ldd	r26, Y+62	; 0x3e
     fce:	bf ad       	ldd	r27, Y+63	; 0x3f
     fd0:	67 97       	sbiw	r28, 0x17	; 23
     fd2:	14 96       	adiw	r26, 0x04	; 4
     fd4:	8d 91       	ld	r24, X+
     fd6:	9d 91       	ld	r25, X+
     fd8:	0d 90       	ld	r0, X+
     fda:	bc 91       	ld	r27, X
     fdc:	a0 2d       	mov	r26, r0
     fde:	89 83       	std	Y+1, r24	; 0x01
     fe0:	9a 83       	std	Y+2, r25	; 0x02
     fe2:	ab 83       	std	Y+3, r26	; 0x03
     fe4:	bc 83       	std	Y+4, r27	; 0x04
     fe6:	f8 01       	movw	r30, r16
     fe8:	a0 88       	ldd	r10, Z+16	; 0x10
     fea:	b1 88       	ldd	r11, Z+17	; 0x11
     fec:	c2 88       	ldd	r12, Z+18	; 0x12
     fee:	d3 88       	ldd	r13, Z+19	; 0x13
     ff0:	6d a1       	ldd	r22, Y+37	; 0x25
     ff2:	7e a1       	ldd	r23, Y+38	; 0x26
     ff4:	8f a1       	ldd	r24, Y+39	; 0x27
     ff6:	98 a5       	ldd	r25, Y+40	; 0x28
     ff8:	a6 01       	movw	r20, r12
     ffa:	95 01       	movw	r18, r10
     ffc:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    1000:	25 96       	adiw	r28, 0x05	; 5
    1002:	6c af       	std	Y+60, r22	; 0x3c
    1004:	7d af       	std	Y+61, r23	; 0x3d
    1006:	8e af       	std	Y+62, r24	; 0x3e
    1008:	9f af       	std	Y+63, r25	; 0x3f
    100a:	25 97       	sbiw	r28, 0x05	; 5
    100c:	d8 01       	movw	r26, r16
    100e:	ed 90       	ld	r14, X+
    1010:	fd 90       	ld	r15, X+
    1012:	0d 91       	ld	r16, X+
    1014:	1c 91       	ld	r17, X
    1016:	c8 01       	movw	r24, r16
    1018:	b7 01       	movw	r22, r14
    101a:	a4 01       	movw	r20, r8
    101c:	93 01       	movw	r18, r6
    101e:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    1022:	29 96       	adiw	r28, 0x09	; 9
    1024:	6c af       	std	Y+60, r22	; 0x3c
    1026:	7d af       	std	Y+61, r23	; 0x3d
    1028:	8e af       	std	Y+62, r24	; 0x3e
    102a:	9f af       	std	Y+63, r25	; 0x3f
    102c:	29 97       	sbiw	r28, 0x09	; 9
    102e:	6d 89       	ldd	r22, Y+21	; 0x15
    1030:	7e 89       	ldd	r23, Y+22	; 0x16
    1032:	8f 89       	ldd	r24, Y+23	; 0x17
    1034:	98 8d       	ldd	r25, Y+24	; 0x18
    1036:	a6 01       	movw	r20, r12
    1038:	95 01       	movw	r18, r10
    103a:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    103e:	2d 96       	adiw	r28, 0x0d	; 13
    1040:	6c af       	std	Y+60, r22	; 0x3c
    1042:	7d af       	std	Y+61, r23	; 0x3d
    1044:	8e af       	std	Y+62, r24	; 0x3e
    1046:	9f af       	std	Y+63, r25	; 0x3f
    1048:	2d 97       	sbiw	r28, 0x0d	; 13
    104a:	c8 01       	movw	r24, r16
    104c:	b7 01       	movw	r22, r14
    104e:	29 a1       	ldd	r18, Y+33	; 0x21
    1050:	3a a1       	ldd	r19, Y+34	; 0x22
    1052:	4b a1       	ldd	r20, Y+35	; 0x23
    1054:	5c a1       	ldd	r21, Y+36	; 0x24
    1056:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    105a:	61 96       	adiw	r28, 0x11	; 17
    105c:	6c af       	std	Y+60, r22	; 0x3c
    105e:	7d af       	std	Y+61, r23	; 0x3d
    1060:	8e af       	std	Y+62, r24	; 0x3e
    1062:	9f af       	std	Y+63, r25	; 0x3f
    1064:	61 97       	sbiw	r28, 0x11	; 17
    1066:	67 96       	adiw	r28, 0x17	; 23
    1068:	ee ad       	ldd	r30, Y+62	; 0x3e
    106a:	ff ad       	ldd	r31, Y+63	; 0x3f
    106c:	67 97       	sbiw	r28, 0x17	; 23
    106e:	60 84       	ldd	r6, Z+8	; 0x08
    1070:	71 84       	ldd	r7, Z+9	; 0x09
    1072:	82 84       	ldd	r8, Z+10	; 0x0a
    1074:	93 84       	ldd	r9, Z+11	; 0x0b
    1076:	c2 01       	movw	r24, r4
    1078:	b1 01       	movw	r22, r2
    107a:	a6 01       	movw	r20, r12
    107c:	95 01       	movw	r18, r10
    107e:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    1082:	1b 01       	movw	r2, r22
    1084:	2c 01       	movw	r4, r24
    1086:	c8 01       	movw	r24, r16
    1088:	b7 01       	movw	r22, r14
    108a:	29 89       	ldd	r18, Y+17	; 0x11
    108c:	3a 89       	ldd	r19, Y+18	; 0x12
    108e:	4b 89       	ldd	r20, Y+19	; 0x13
    1090:	5c 89       	ldd	r21, Y+20	; 0x14
    1092:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    1096:	65 96       	adiw	r28, 0x15	; 21
    1098:	6c af       	std	Y+60, r22	; 0x3c
    109a:	7d af       	std	Y+61, r23	; 0x3d
    109c:	8e af       	std	Y+62, r24	; 0x3e
    109e:	9f af       	std	Y+63, r25	; 0x3f
    10a0:	65 97       	sbiw	r28, 0x15	; 21
    10a2:	67 96       	adiw	r28, 0x17	; 23
    10a4:	ae ad       	ldd	r26, Y+62	; 0x3e
    10a6:	bf ad       	ldd	r27, Y+63	; 0x3f
    10a8:	67 97       	sbiw	r28, 0x17	; 23
    10aa:	1c 96       	adiw	r26, 0x0c	; 12
    10ac:	ad 90       	ld	r10, X+
    10ae:	bd 90       	ld	r11, X+
    10b0:	cd 90       	ld	r12, X+
    10b2:	dc 90       	ld	r13, X
    10b4:	1f 97       	sbiw	r26, 0x0f	; 15
    10b6:	69 a5       	ldd	r22, Y+41	; 0x29
    10b8:	7a a5       	ldd	r23, Y+42	; 0x2a
    10ba:	8b a5       	ldd	r24, Y+43	; 0x2b
    10bc:	9c a5       	ldd	r25, Y+44	; 0x2c
    10be:	2d 8d       	ldd	r18, Y+29	; 0x1d
    10c0:	3e 8d       	ldd	r19, Y+30	; 0x1e
    10c2:	4f 8d       	ldd	r20, Y+31	; 0x1f
    10c4:	58 a1       	ldd	r21, Y+32	; 0x20
    10c6:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    10ca:	29 8d       	ldd	r18, Y+25	; 0x19
    10cc:	3a 8d       	ldd	r19, Y+26	; 0x1a
    10ce:	4b 8d       	ldd	r20, Y+27	; 0x1b
    10d0:	5c 8d       	ldd	r21, Y+28	; 0x1c
    10d2:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    10d6:	7b 01       	movw	r14, r22
    10d8:	8c 01       	movw	r16, r24
    10da:	6d a5       	ldd	r22, Y+45	; 0x2d
    10dc:	7e a5       	ldd	r23, Y+46	; 0x2e
    10de:	8f a5       	ldd	r24, Y+47	; 0x2f
    10e0:	98 a9       	ldd	r25, Y+48	; 0x30
    10e2:	2d 8d       	ldd	r18, Y+29	; 0x1d
    10e4:	3e 8d       	ldd	r19, Y+30	; 0x1e
    10e6:	4f 8d       	ldd	r20, Y+31	; 0x1f
    10e8:	58 a1       	ldd	r21, Y+32	; 0x20
    10ea:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    10ee:	29 8d       	ldd	r18, Y+25	; 0x19
    10f0:	3a 8d       	ldd	r19, Y+26	; 0x1a
    10f2:	4b 8d       	ldd	r20, Y+27	; 0x1b
    10f4:	5c 8d       	ldd	r21, Y+28	; 0x1c
    10f6:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    10fa:	9b 01       	movw	r18, r22
    10fc:	ac 01       	movw	r20, r24
    10fe:	c8 01       	movw	r24, r16
    1100:	b7 01       	movw	r22, r14
    1102:	0e 94 88 1c 	call	0x3910	; 0x3910 <__subsf3>
    1106:	7b 01       	movw	r14, r22
    1108:	8c 01       	movw	r16, r24
    110a:	69 a9       	ldd	r22, Y+49	; 0x31
    110c:	7a a9       	ldd	r23, Y+50	; 0x32
    110e:	8b a9       	ldd	r24, Y+51	; 0x33
    1110:	9c a9       	ldd	r25, Y+52	; 0x34
    1112:	2d 85       	ldd	r18, Y+13	; 0x0d
    1114:	3e 85       	ldd	r19, Y+14	; 0x0e
    1116:	4f 85       	ldd	r20, Y+15	; 0x0f
    1118:	58 89       	ldd	r21, Y+16	; 0x10
    111a:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    111e:	29 8d       	ldd	r18, Y+25	; 0x19
    1120:	3a 8d       	ldd	r19, Y+26	; 0x1a
    1122:	4b 8d       	ldd	r20, Y+27	; 0x1b
    1124:	5c 8d       	ldd	r21, Y+28	; 0x1c
    1126:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    112a:	9b 01       	movw	r18, r22
    112c:	ac 01       	movw	r20, r24
    112e:	c8 01       	movw	r24, r16
    1130:	b7 01       	movw	r22, r14
    1132:	0e 94 88 1c 	call	0x3910	; 0x3910 <__subsf3>
    1136:	7b 01       	movw	r14, r22
    1138:	8c 01       	movw	r16, r24
    113a:	6d a9       	ldd	r22, Y+53	; 0x35
    113c:	7e a9       	ldd	r23, Y+54	; 0x36
    113e:	8f a9       	ldd	r24, Y+55	; 0x37
    1140:	98 ad       	ldd	r25, Y+56	; 0x38
    1142:	2d 85       	ldd	r18, Y+13	; 0x0d
    1144:	3e 85       	ldd	r19, Y+14	; 0x0e
    1146:	4f 85       	ldd	r20, Y+15	; 0x0f
    1148:	58 89       	ldd	r21, Y+16	; 0x10
    114a:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    114e:	29 8d       	ldd	r18, Y+25	; 0x19
    1150:	3a 8d       	ldd	r19, Y+26	; 0x1a
    1152:	4b 8d       	ldd	r20, Y+27	; 0x1b
    1154:	5c 8d       	ldd	r21, Y+28	; 0x1c
    1156:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    115a:	9b 01       	movw	r18, r22
    115c:	ac 01       	movw	r20, r24
    115e:	c8 01       	movw	r24, r16
    1160:	b7 01       	movw	r22, r14
    1162:	0e 94 89 1c 	call	0x3912	; 0x3912 <__addsf3>
    1166:	7b 01       	movw	r14, r22
    1168:	8c 01       	movw	r16, r24
    116a:	69 ad       	ldd	r22, Y+57	; 0x39
    116c:	7a ad       	ldd	r23, Y+58	; 0x3a
    116e:	8b ad       	ldd	r24, Y+59	; 0x3b
    1170:	9c ad       	ldd	r25, Y+60	; 0x3c
    1172:	29 85       	ldd	r18, Y+9	; 0x09
    1174:	3a 85       	ldd	r19, Y+10	; 0x0a
    1176:	4b 85       	ldd	r20, Y+11	; 0x0b
    1178:	5c 85       	ldd	r21, Y+12	; 0x0c
    117a:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    117e:	29 8d       	ldd	r18, Y+25	; 0x19
    1180:	3a 8d       	ldd	r19, Y+26	; 0x1a
    1182:	4b 8d       	ldd	r20, Y+27	; 0x1b
    1184:	5c 8d       	ldd	r21, Y+28	; 0x1c
    1186:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    118a:	9b 01       	movw	r18, r22
    118c:	ac 01       	movw	r20, r24
    118e:	c8 01       	movw	r24, r16
    1190:	b7 01       	movw	r22, r14
    1192:	0e 94 89 1c 	call	0x3912	; 0x3912 <__addsf3>
    1196:	7b 01       	movw	r14, r22
    1198:	8c 01       	movw	r16, r24
    119a:	21 96       	adiw	r28, 0x01	; 1
    119c:	6c ad       	ldd	r22, Y+60	; 0x3c
    119e:	7d ad       	ldd	r23, Y+61	; 0x3d
    11a0:	8e ad       	ldd	r24, Y+62	; 0x3e
    11a2:	9f ad       	ldd	r25, Y+63	; 0x3f
    11a4:	21 97       	sbiw	r28, 0x01	; 1
    11a6:	29 85       	ldd	r18, Y+9	; 0x09
    11a8:	3a 85       	ldd	r19, Y+10	; 0x0a
    11aa:	4b 85       	ldd	r20, Y+11	; 0x0b
    11ac:	5c 85       	ldd	r21, Y+12	; 0x0c
    11ae:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    11b2:	29 8d       	ldd	r18, Y+25	; 0x19
    11b4:	3a 8d       	ldd	r19, Y+26	; 0x1a
    11b6:	4b 8d       	ldd	r20, Y+27	; 0x1b
    11b8:	5c 8d       	ldd	r21, Y+28	; 0x1c
    11ba:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    11be:	9b 01       	movw	r18, r22
    11c0:	ac 01       	movw	r20, r24
    11c2:	c8 01       	movw	r24, r16
    11c4:	b7 01       	movw	r22, r14
    11c6:	0e 94 88 1c 	call	0x3910	; 0x3910 <__subsf3>
    11ca:	7b 01       	movw	r14, r22
    11cc:	8c 01       	movw	r16, r24
    11ce:	69 a5       	ldd	r22, Y+41	; 0x29
    11d0:	7a a5       	ldd	r23, Y+42	; 0x2a
    11d2:	8b a5       	ldd	r24, Y+43	; 0x2b
    11d4:	9c a5       	ldd	r25, Y+44	; 0x2c
    11d6:	2d 81       	ldd	r18, Y+5	; 0x05
    11d8:	3e 81       	ldd	r19, Y+6	; 0x06
    11da:	4f 81       	ldd	r20, Y+7	; 0x07
    11dc:	58 85       	ldd	r21, Y+8	; 0x08
    11de:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    11e2:	29 81       	ldd	r18, Y+1	; 0x01
    11e4:	3a 81       	ldd	r19, Y+2	; 0x02
    11e6:	4b 81       	ldd	r20, Y+3	; 0x03
    11e8:	5c 81       	ldd	r21, Y+4	; 0x04
    11ea:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    11ee:	9b 01       	movw	r18, r22
    11f0:	ac 01       	movw	r20, r24
    11f2:	c8 01       	movw	r24, r16
    11f4:	b7 01       	movw	r22, r14
    11f6:	0e 94 88 1c 	call	0x3910	; 0x3910 <__subsf3>
    11fa:	7b 01       	movw	r14, r22
    11fc:	8c 01       	movw	r16, r24
    11fe:	6d a5       	ldd	r22, Y+45	; 0x2d
    1200:	7e a5       	ldd	r23, Y+46	; 0x2e
    1202:	8f a5       	ldd	r24, Y+47	; 0x2f
    1204:	98 a9       	ldd	r25, Y+48	; 0x30
    1206:	2d 81       	ldd	r18, Y+5	; 0x05
    1208:	3e 81       	ldd	r19, Y+6	; 0x06
    120a:	4f 81       	ldd	r20, Y+7	; 0x07
    120c:	58 85       	ldd	r21, Y+8	; 0x08
    120e:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    1212:	29 81       	ldd	r18, Y+1	; 0x01
    1214:	3a 81       	ldd	r19, Y+2	; 0x02
    1216:	4b 81       	ldd	r20, Y+3	; 0x03
    1218:	5c 81       	ldd	r21, Y+4	; 0x04
    121a:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    121e:	9b 01       	movw	r18, r22
    1220:	ac 01       	movw	r20, r24
    1222:	c8 01       	movw	r24, r16
    1224:	b7 01       	movw	r22, r14
    1226:	0e 94 89 1c 	call	0x3912	; 0x3912 <__addsf3>
    122a:	7b 01       	movw	r14, r22
    122c:	8c 01       	movw	r16, r24
    122e:	25 96       	adiw	r28, 0x05	; 5
    1230:	6c ad       	ldd	r22, Y+60	; 0x3c
    1232:	7d ad       	ldd	r23, Y+61	; 0x3d
    1234:	8e ad       	ldd	r24, Y+62	; 0x3e
    1236:	9f ad       	ldd	r25, Y+63	; 0x3f
    1238:	25 97       	sbiw	r28, 0x05	; 5
    123a:	2d 85       	ldd	r18, Y+13	; 0x0d
    123c:	3e 85       	ldd	r19, Y+14	; 0x0e
    123e:	4f 85       	ldd	r20, Y+15	; 0x0f
    1240:	58 89       	ldd	r21, Y+16	; 0x10
    1242:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    1246:	29 81       	ldd	r18, Y+1	; 0x01
    1248:	3a 81       	ldd	r19, Y+2	; 0x02
    124a:	4b 81       	ldd	r20, Y+3	; 0x03
    124c:	5c 81       	ldd	r21, Y+4	; 0x04
    124e:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    1252:	9b 01       	movw	r18, r22
    1254:	ac 01       	movw	r20, r24
    1256:	c8 01       	movw	r24, r16
    1258:	b7 01       	movw	r22, r14
    125a:	0e 94 89 1c 	call	0x3912	; 0x3912 <__addsf3>
    125e:	7b 01       	movw	r14, r22
    1260:	8c 01       	movw	r16, r24
    1262:	29 96       	adiw	r28, 0x09	; 9
    1264:	6c ad       	ldd	r22, Y+60	; 0x3c
    1266:	7d ad       	ldd	r23, Y+61	; 0x3d
    1268:	8e ad       	ldd	r24, Y+62	; 0x3e
    126a:	9f ad       	ldd	r25, Y+63	; 0x3f
    126c:	29 97       	sbiw	r28, 0x09	; 9
    126e:	2d 85       	ldd	r18, Y+13	; 0x0d
    1270:	3e 85       	ldd	r19, Y+14	; 0x0e
    1272:	4f 85       	ldd	r20, Y+15	; 0x0f
    1274:	58 89       	ldd	r21, Y+16	; 0x10
    1276:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    127a:	29 81       	ldd	r18, Y+1	; 0x01
    127c:	3a 81       	ldd	r19, Y+2	; 0x02
    127e:	4b 81       	ldd	r20, Y+3	; 0x03
    1280:	5c 81       	ldd	r21, Y+4	; 0x04
    1282:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    1286:	9b 01       	movw	r18, r22
    1288:	ac 01       	movw	r20, r24
    128a:	c8 01       	movw	r24, r16
    128c:	b7 01       	movw	r22, r14
    128e:	0e 94 88 1c 	call	0x3910	; 0x3910 <__subsf3>
    1292:	7b 01       	movw	r14, r22
    1294:	8c 01       	movw	r16, r24
    1296:	2d 96       	adiw	r28, 0x0d	; 13
    1298:	6c ad       	ldd	r22, Y+60	; 0x3c
    129a:	7d ad       	ldd	r23, Y+61	; 0x3d
    129c:	8e ad       	ldd	r24, Y+62	; 0x3e
    129e:	9f ad       	ldd	r25, Y+63	; 0x3f
    12a0:	2d 97       	sbiw	r28, 0x0d	; 13
    12a2:	29 85       	ldd	r18, Y+9	; 0x09
    12a4:	3a 85       	ldd	r19, Y+10	; 0x0a
    12a6:	4b 85       	ldd	r20, Y+11	; 0x0b
    12a8:	5c 85       	ldd	r21, Y+12	; 0x0c
    12aa:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    12ae:	29 81       	ldd	r18, Y+1	; 0x01
    12b0:	3a 81       	ldd	r19, Y+2	; 0x02
    12b2:	4b 81       	ldd	r20, Y+3	; 0x03
    12b4:	5c 81       	ldd	r21, Y+4	; 0x04
    12b6:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    12ba:	9b 01       	movw	r18, r22
    12bc:	ac 01       	movw	r20, r24
    12be:	c8 01       	movw	r24, r16
    12c0:	b7 01       	movw	r22, r14
    12c2:	0e 94 88 1c 	call	0x3910	; 0x3910 <__subsf3>
    12c6:	7b 01       	movw	r14, r22
    12c8:	8c 01       	movw	r16, r24
    12ca:	61 96       	adiw	r28, 0x11	; 17
    12cc:	6c ad       	ldd	r22, Y+60	; 0x3c
    12ce:	7d ad       	ldd	r23, Y+61	; 0x3d
    12d0:	8e ad       	ldd	r24, Y+62	; 0x3e
    12d2:	9f ad       	ldd	r25, Y+63	; 0x3f
    12d4:	61 97       	sbiw	r28, 0x11	; 17
    12d6:	29 85       	ldd	r18, Y+9	; 0x09
    12d8:	3a 85       	ldd	r19, Y+10	; 0x0a
    12da:	4b 85       	ldd	r20, Y+11	; 0x0b
    12dc:	5c 85       	ldd	r21, Y+12	; 0x0c
    12de:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    12e2:	29 81       	ldd	r18, Y+1	; 0x01
    12e4:	3a 81       	ldd	r19, Y+2	; 0x02
    12e6:	4b 81       	ldd	r20, Y+3	; 0x03
    12e8:	5c 81       	ldd	r21, Y+4	; 0x04
    12ea:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    12ee:	9b 01       	movw	r18, r22
    12f0:	ac 01       	movw	r20, r24
    12f2:	c8 01       	movw	r24, r16
    12f4:	b7 01       	movw	r22, r14
    12f6:	0e 94 89 1c 	call	0x3912	; 0x3912 <__addsf3>
    12fa:	7b 01       	movw	r14, r22
    12fc:	8c 01       	movw	r16, r24
    12fe:	69 a9       	ldd	r22, Y+49	; 0x31
    1300:	7a a9       	ldd	r23, Y+50	; 0x32
    1302:	8b a9       	ldd	r24, Y+51	; 0x33
    1304:	9c a9       	ldd	r25, Y+52	; 0x34
    1306:	2d 81       	ldd	r18, Y+5	; 0x05
    1308:	3e 81       	ldd	r19, Y+6	; 0x06
    130a:	4f 81       	ldd	r20, Y+7	; 0x07
    130c:	58 85       	ldd	r21, Y+8	; 0x08
    130e:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    1312:	a4 01       	movw	r20, r8
    1314:	93 01       	movw	r18, r6
    1316:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    131a:	9b 01       	movw	r18, r22
    131c:	ac 01       	movw	r20, r24
    131e:	c8 01       	movw	r24, r16
    1320:	b7 01       	movw	r22, r14
    1322:	0e 94 89 1c 	call	0x3912	; 0x3912 <__addsf3>
    1326:	7b 01       	movw	r14, r22
    1328:	8c 01       	movw	r16, r24
    132a:	6d a9       	ldd	r22, Y+53	; 0x35
    132c:	7e a9       	ldd	r23, Y+54	; 0x36
    132e:	8f a9       	ldd	r24, Y+55	; 0x37
    1330:	98 ad       	ldd	r25, Y+56	; 0x38
    1332:	2d 81       	ldd	r18, Y+5	; 0x05
    1334:	3e 81       	ldd	r19, Y+6	; 0x06
    1336:	4f 81       	ldd	r20, Y+7	; 0x07
    1338:	58 85       	ldd	r21, Y+8	; 0x08
    133a:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    133e:	a4 01       	movw	r20, r8
    1340:	93 01       	movw	r18, r6
    1342:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    1346:	9b 01       	movw	r18, r22
    1348:	ac 01       	movw	r20, r24
    134a:	c8 01       	movw	r24, r16
    134c:	b7 01       	movw	r22, r14
    134e:	0e 94 88 1c 	call	0x3910	; 0x3910 <__subsf3>
    1352:	7b 01       	movw	r14, r22
    1354:	8c 01       	movw	r16, r24
    1356:	25 96       	adiw	r28, 0x05	; 5
    1358:	6c ad       	ldd	r22, Y+60	; 0x3c
    135a:	7d ad       	ldd	r23, Y+61	; 0x3d
    135c:	8e ad       	ldd	r24, Y+62	; 0x3e
    135e:	9f ad       	ldd	r25, Y+63	; 0x3f
    1360:	25 97       	sbiw	r28, 0x05	; 5
    1362:	2d 8d       	ldd	r18, Y+29	; 0x1d
    1364:	3e 8d       	ldd	r19, Y+30	; 0x1e
    1366:	4f 8d       	ldd	r20, Y+31	; 0x1f
    1368:	58 a1       	ldd	r21, Y+32	; 0x20
    136a:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    136e:	a4 01       	movw	r20, r8
    1370:	93 01       	movw	r18, r6
    1372:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    1376:	9b 01       	movw	r18, r22
    1378:	ac 01       	movw	r20, r24
    137a:	c8 01       	movw	r24, r16
    137c:	b7 01       	movw	r22, r14
    137e:	0e 94 88 1c 	call	0x3910	; 0x3910 <__subsf3>
    1382:	7b 01       	movw	r14, r22
    1384:	8c 01       	movw	r16, r24
    1386:	29 96       	adiw	r28, 0x09	; 9
    1388:	6c ad       	ldd	r22, Y+60	; 0x3c
    138a:	7d ad       	ldd	r23, Y+61	; 0x3d
    138c:	8e ad       	ldd	r24, Y+62	; 0x3e
    138e:	9f ad       	ldd	r25, Y+63	; 0x3f
    1390:	29 97       	sbiw	r28, 0x09	; 9
    1392:	2d 8d       	ldd	r18, Y+29	; 0x1d
    1394:	3e 8d       	ldd	r19, Y+30	; 0x1e
    1396:	4f 8d       	ldd	r20, Y+31	; 0x1f
    1398:	58 a1       	ldd	r21, Y+32	; 0x20
    139a:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    139e:	a4 01       	movw	r20, r8
    13a0:	93 01       	movw	r18, r6
    13a2:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    13a6:	9b 01       	movw	r18, r22
    13a8:	ac 01       	movw	r20, r24
    13aa:	c8 01       	movw	r24, r16
    13ac:	b7 01       	movw	r22, r14
    13ae:	0e 94 89 1c 	call	0x3912	; 0x3912 <__addsf3>
    13b2:	7b 01       	movw	r14, r22
    13b4:	8c 01       	movw	r16, r24
    13b6:	c2 01       	movw	r24, r4
    13b8:	b1 01       	movw	r22, r2
    13ba:	29 85       	ldd	r18, Y+9	; 0x09
    13bc:	3a 85       	ldd	r19, Y+10	; 0x0a
    13be:	4b 85       	ldd	r20, Y+11	; 0x0b
    13c0:	5c 85       	ldd	r21, Y+12	; 0x0c
    13c2:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    13c6:	a4 01       	movw	r20, r8
    13c8:	93 01       	movw	r18, r6
    13ca:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    13ce:	9b 01       	movw	r18, r22
    13d0:	ac 01       	movw	r20, r24
    13d2:	c8 01       	movw	r24, r16
    13d4:	b7 01       	movw	r22, r14
    13d6:	0e 94 89 1c 	call	0x3912	; 0x3912 <__addsf3>
    13da:	7b 01       	movw	r14, r22
    13dc:	8c 01       	movw	r16, r24
    13de:	65 96       	adiw	r28, 0x15	; 21
    13e0:	6c ad       	ldd	r22, Y+60	; 0x3c
    13e2:	7d ad       	ldd	r23, Y+61	; 0x3d
    13e4:	8e ad       	ldd	r24, Y+62	; 0x3e
    13e6:	9f ad       	ldd	r25, Y+63	; 0x3f
    13e8:	65 97       	sbiw	r28, 0x15	; 21
    13ea:	29 85       	ldd	r18, Y+9	; 0x09
    13ec:	3a 85       	ldd	r19, Y+10	; 0x0a
    13ee:	4b 85       	ldd	r20, Y+11	; 0x0b
    13f0:	5c 85       	ldd	r21, Y+12	; 0x0c
    13f2:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    13f6:	a4 01       	movw	r20, r8
    13f8:	93 01       	movw	r18, r6
    13fa:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    13fe:	9b 01       	movw	r18, r22
    1400:	ac 01       	movw	r20, r24
    1402:	c8 01       	movw	r24, r16
    1404:	b7 01       	movw	r22, r14
    1406:	0e 94 88 1c 	call	0x3910	; 0x3910 <__subsf3>
    140a:	7b 01       	movw	r14, r22
    140c:	8c 01       	movw	r16, r24
    140e:	69 ad       	ldd	r22, Y+57	; 0x39
    1410:	7a ad       	ldd	r23, Y+58	; 0x3a
    1412:	8b ad       	ldd	r24, Y+59	; 0x3b
    1414:	9c ad       	ldd	r25, Y+60	; 0x3c
    1416:	2d 81       	ldd	r18, Y+5	; 0x05
    1418:	3e 81       	ldd	r19, Y+6	; 0x06
    141a:	4f 81       	ldd	r20, Y+7	; 0x07
    141c:	58 85       	ldd	r21, Y+8	; 0x08
    141e:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    1422:	a6 01       	movw	r20, r12
    1424:	95 01       	movw	r18, r10
    1426:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    142a:	9b 01       	movw	r18, r22
    142c:	ac 01       	movw	r20, r24
    142e:	c8 01       	movw	r24, r16
    1430:	b7 01       	movw	r22, r14
    1432:	0e 94 88 1c 	call	0x3910	; 0x3910 <__subsf3>
    1436:	7b 01       	movw	r14, r22
    1438:	8c 01       	movw	r16, r24
    143a:	21 96       	adiw	r28, 0x01	; 1
    143c:	6c ad       	ldd	r22, Y+60	; 0x3c
    143e:	7d ad       	ldd	r23, Y+61	; 0x3d
    1440:	8e ad       	ldd	r24, Y+62	; 0x3e
    1442:	9f ad       	ldd	r25, Y+63	; 0x3f
    1444:	21 97       	sbiw	r28, 0x01	; 1
    1446:	2d 81       	ldd	r18, Y+5	; 0x05
    1448:	3e 81       	ldd	r19, Y+6	; 0x06
    144a:	4f 81       	ldd	r20, Y+7	; 0x07
    144c:	58 85       	ldd	r21, Y+8	; 0x08
    144e:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    1452:	a6 01       	movw	r20, r12
    1454:	95 01       	movw	r18, r10
    1456:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    145a:	9b 01       	movw	r18, r22
    145c:	ac 01       	movw	r20, r24
    145e:	c8 01       	movw	r24, r16
    1460:	b7 01       	movw	r22, r14
    1462:	0e 94 89 1c 	call	0x3912	; 0x3912 <__addsf3>
    1466:	7b 01       	movw	r14, r22
    1468:	8c 01       	movw	r16, r24
    146a:	2d 96       	adiw	r28, 0x0d	; 13
    146c:	6c ad       	ldd	r22, Y+60	; 0x3c
    146e:	7d ad       	ldd	r23, Y+61	; 0x3d
    1470:	8e ad       	ldd	r24, Y+62	; 0x3e
    1472:	9f ad       	ldd	r25, Y+63	; 0x3f
    1474:	2d 97       	sbiw	r28, 0x0d	; 13
    1476:	2d 8d       	ldd	r18, Y+29	; 0x1d
    1478:	3e 8d       	ldd	r19, Y+30	; 0x1e
    147a:	4f 8d       	ldd	r20, Y+31	; 0x1f
    147c:	58 a1       	ldd	r21, Y+32	; 0x20
    147e:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    1482:	a6 01       	movw	r20, r12
    1484:	95 01       	movw	r18, r10
    1486:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    148a:	9b 01       	movw	r18, r22
    148c:	ac 01       	movw	r20, r24
    148e:	c8 01       	movw	r24, r16
    1490:	b7 01       	movw	r22, r14
    1492:	0e 94 89 1c 	call	0x3912	; 0x3912 <__addsf3>
    1496:	7b 01       	movw	r14, r22
    1498:	8c 01       	movw	r16, r24
    149a:	61 96       	adiw	r28, 0x11	; 17
    149c:	6c ad       	ldd	r22, Y+60	; 0x3c
    149e:	7d ad       	ldd	r23, Y+61	; 0x3d
    14a0:	8e ad       	ldd	r24, Y+62	; 0x3e
    14a2:	9f ad       	ldd	r25, Y+63	; 0x3f
    14a4:	61 97       	sbiw	r28, 0x11	; 17
    14a6:	2d 8d       	ldd	r18, Y+29	; 0x1d
    14a8:	3e 8d       	ldd	r19, Y+30	; 0x1e
    14aa:	4f 8d       	ldd	r20, Y+31	; 0x1f
    14ac:	58 a1       	ldd	r21, Y+32	; 0x20
    14ae:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    14b2:	a6 01       	movw	r20, r12
    14b4:	95 01       	movw	r18, r10
    14b6:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    14ba:	9b 01       	movw	r18, r22
    14bc:	ac 01       	movw	r20, r24
    14be:	c8 01       	movw	r24, r16
    14c0:	b7 01       	movw	r22, r14
    14c2:	0e 94 88 1c 	call	0x3910	; 0x3910 <__subsf3>
    14c6:	7b 01       	movw	r14, r22
    14c8:	8c 01       	movw	r16, r24
    14ca:	c2 01       	movw	r24, r4
    14cc:	b1 01       	movw	r22, r2
    14ce:	2d 85       	ldd	r18, Y+13	; 0x0d
    14d0:	3e 85       	ldd	r19, Y+14	; 0x0e
    14d2:	4f 85       	ldd	r20, Y+15	; 0x0f
    14d4:	58 89       	ldd	r21, Y+16	; 0x10
    14d6:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    14da:	a6 01       	movw	r20, r12
    14dc:	95 01       	movw	r18, r10
    14de:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    14e2:	9b 01       	movw	r18, r22
    14e4:	ac 01       	movw	r20, r24
    14e6:	c8 01       	movw	r24, r16
    14e8:	b7 01       	movw	r22, r14
    14ea:	0e 94 88 1c 	call	0x3910	; 0x3910 <__subsf3>
    14ee:	7b 01       	movw	r14, r22
    14f0:	8c 01       	movw	r16, r24
    14f2:	65 96       	adiw	r28, 0x15	; 21
    14f4:	6c ad       	ldd	r22, Y+60	; 0x3c
    14f6:	7d ad       	ldd	r23, Y+61	; 0x3d
    14f8:	8e ad       	ldd	r24, Y+62	; 0x3e
    14fa:	9f ad       	ldd	r25, Y+63	; 0x3f
    14fc:	65 97       	sbiw	r28, 0x15	; 21
    14fe:	2d 85       	ldd	r18, Y+13	; 0x0d
    1500:	3e 85       	ldd	r19, Y+14	; 0x0e
    1502:	4f 85       	ldd	r20, Y+15	; 0x0f
    1504:	58 89       	ldd	r21, Y+16	; 0x10
    1506:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    150a:	a6 01       	movw	r20, r12
    150c:	95 01       	movw	r18, r10
    150e:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    1512:	9b 01       	movw	r18, r22
    1514:	ac 01       	movw	r20, r24
    1516:	c8 01       	movw	r24, r16
    1518:	b7 01       	movw	r22, r14
    151a:	0e 94 89 1c 	call	0x3912	; 0x3912 <__addsf3>
   A[0][3]*A[1][0]*A[2][2]*A[3][1] - A[0][0]*A[1][3]*A[2][2]*A[3][1] - A[0][2]*A[1][0]*A[2][3]*A[3][1] + A[0][0]*A[1][2]*A[2][3]*A[3][1]+
   A[0][3]*A[1][1]*A[2][0]*A[3][2] - A[0][1]*A[1][3]*A[2][0]*A[3][2] - A[0][3]*A[1][0]*A[2][1]*A[3][2] + A[0][0]*A[1][3]*A[2][1]*A[3][2]+
   A[0][1]*A[1][0]*A[2][3]*A[3][2] - A[0][0]*A[1][1]*A[2][3]*A[3][2] - A[0][2]*A[1][1]*A[2][0]*A[3][3] + A[0][1]*A[1][2]*A[2][0]*A[3][3]+
   A[0][2]*A[1][0]*A[2][1]*A[3][3] - A[0][0]*A[1][2]*A[2][1]*A[3][3] - A[0][1]*A[1][0]*A[2][2]*A[3][3] + A[0][0]*A[1][1]*A[2][2]*A[3][3];
   return value;
 }
    151e:	ca 5a       	subi	r28, 0xAA	; 170
    1520:	df 4f       	sbci	r29, 0xFF	; 255
    1522:	cd bf       	out	0x3d, r28	; 61
    1524:	de bf       	out	0x3e, r29	; 62
    1526:	cf 91       	pop	r28
    1528:	df 91       	pop	r29
    152a:	1f 91       	pop	r17
    152c:	0f 91       	pop	r16
    152e:	ff 90       	pop	r15
    1530:	ef 90       	pop	r14
    1532:	df 90       	pop	r13
    1534:	cf 90       	pop	r12
    1536:	bf 90       	pop	r11
    1538:	af 90       	pop	r10
    153a:	9f 90       	pop	r9
    153c:	8f 90       	pop	r8
    153e:	7f 90       	pop	r7
    1540:	6f 90       	pop	r6
    1542:	5f 90       	pop	r5
    1544:	4f 90       	pop	r4
    1546:	3f 90       	pop	r3
    1548:	2f 90       	pop	r2
    154a:	08 95       	ret

0000154c <mtx_inv_4x4>:
			ANS[i][j]=buffer[i][j];
	}
}


int mtx_inv_4x4(double ANS[4][4], double A[4][4]){
    154c:	2f 92       	push	r2
    154e:	3f 92       	push	r3
    1550:	4f 92       	push	r4
    1552:	5f 92       	push	r5
    1554:	6f 92       	push	r6
    1556:	7f 92       	push	r7
    1558:	8f 92       	push	r8
    155a:	9f 92       	push	r9
    155c:	af 92       	push	r10
    155e:	bf 92       	push	r11
    1560:	cf 92       	push	r12
    1562:	df 92       	push	r13
    1564:	ef 92       	push	r14
    1566:	ff 92       	push	r15
    1568:	0f 93       	push	r16
    156a:	1f 93       	push	r17
    156c:	df 93       	push	r29
    156e:	cf 93       	push	r28
    1570:	cd b7       	in	r28, 0x3d	; 61
    1572:	de b7       	in	r29, 0x3e	; 62
    1574:	c0 5c       	subi	r28, 0xC0	; 192
    1576:	d0 40       	sbci	r29, 0x00	; 0
    1578:	cd bf       	out	0x3d, r28	; 61
    157a:	de bf       	out	0x3e, r29	; 62
    157c:	8d ab       	std	Y+53, r24	; 0x35
    157e:	9e ab       	std	Y+54, r25	; 0x36
    1580:	c1 54       	subi	r28, 0x41	; 65
    1582:	df 4f       	sbci	r29, 0xFF	; 255
    1584:	68 83       	st	Y, r22
    1586:	79 83       	std	Y+1, r23	; 0x01
    1588:	cf 5b       	subi	r28, 0xBF	; 191
    158a:	d0 40       	sbci	r29, 0x00	; 0
	double TA[4][4];
	double scale=mtx_det_4x4(A);
    158c:	cb 01       	movw	r24, r22
    158e:	0e 94 03 07 	call	0xe06	; 0xe06 <mtx_det_4x4>
    1592:	69 83       	std	Y+1, r22	; 0x01
    1594:	7a 83       	std	Y+2, r23	; 0x02
    1596:	8b 83       	std	Y+3, r24	; 0x03
    1598:	9c 83       	std	Y+4, r25	; 0x04
	if(scale==0)
    159a:	20 e0       	ldi	r18, 0x00	; 0
    159c:	30 e0       	ldi	r19, 0x00	; 0
    159e:	40 e0       	ldi	r20, 0x00	; 0
    15a0:	50 e0       	ldi	r21, 0x00	; 0
    15a2:	0e 94 ed 1c 	call	0x39da	; 0x39da <__cmpsf2>
    15a6:	88 23       	and	r24, r24
    15a8:	21 f4       	brne	.+8      	; 0x15b2 <mtx_inv_4x4+0x66>
    15aa:	20 e0       	ldi	r18, 0x00	; 0
    15ac:	30 e0       	ldi	r19, 0x00	; 0
    15ae:	0c 94 d6 15 	jmp	0x2bac	; 0x2bac <mtx_inv_4x4+0x1660>
		return 0;
	else{
	   TA[0][0] = (  A[1][2]*A[2][3]*A[3][1] - A[1][3]*A[2][2]*A[3][1] + A[1][3]*A[2][1]*A[3][2] - A[1][1]*A[2][3]*A[3][2] - A[1][2]*A[2][1]*A[3][3] + A[1][1]*A[2][2]*A[3][3] ) / scale ;
    15b2:	e0 e1       	ldi	r30, 0x10	; 16
    15b4:	ee 2e       	mov	r14, r30
    15b6:	f1 2c       	mov	r15, r1
    15b8:	c1 54       	subi	r28, 0x41	; 65
    15ba:	df 4f       	sbci	r29, 0xFF	; 255
    15bc:	88 81       	ld	r24, Y
    15be:	99 81       	ldd	r25, Y+1	; 0x01
    15c0:	cf 5b       	subi	r28, 0xBF	; 191
    15c2:	d0 40       	sbci	r29, 0x00	; 0
    15c4:	e8 0e       	add	r14, r24
    15c6:	f9 1e       	adc	r15, r25
    15c8:	d7 01       	movw	r26, r14
    15ca:	18 96       	adiw	r26, 0x08	; 8
    15cc:	8d 91       	ld	r24, X+
    15ce:	9d 91       	ld	r25, X+
    15d0:	0d 90       	ld	r0, X+
    15d2:	bc 91       	ld	r27, X
    15d4:	a0 2d       	mov	r26, r0
    15d6:	89 ab       	std	Y+49, r24	; 0x31
    15d8:	9a ab       	std	Y+50, r25	; 0x32
    15da:	ab ab       	std	Y+51, r26	; 0x33
    15dc:	bc ab       	std	Y+52, r27	; 0x34
    15de:	c1 54       	subi	r28, 0x41	; 65
    15e0:	df 4f       	sbci	r29, 0xFF	; 255
    15e2:	08 81       	ld	r16, Y
    15e4:	19 81       	ldd	r17, Y+1	; 0x01
    15e6:	cf 5b       	subi	r28, 0xBF	; 191
    15e8:	d0 40       	sbci	r29, 0x00	; 0
    15ea:	00 5e       	subi	r16, 0xE0	; 224
    15ec:	1f 4f       	sbci	r17, 0xFF	; 255
    15ee:	d8 01       	movw	r26, r16
    15f0:	1c 96       	adiw	r26, 0x0c	; 12
    15f2:	8d 91       	ld	r24, X+
    15f4:	9d 91       	ld	r25, X+
    15f6:	0d 90       	ld	r0, X+
    15f8:	bc 91       	ld	r27, X
    15fa:	a0 2d       	mov	r26, r0
    15fc:	8d a7       	std	Y+45, r24	; 0x2d
    15fe:	9e a7       	std	Y+46, r25	; 0x2e
    1600:	af a7       	std	Y+47, r26	; 0x2f
    1602:	b8 ab       	std	Y+48, r27	; 0x30
    1604:	69 a9       	ldd	r22, Y+49	; 0x31
    1606:	7a a9       	ldd	r23, Y+50	; 0x32
    1608:	8b a9       	ldd	r24, Y+51	; 0x33
    160a:	9c a9       	ldd	r25, Y+52	; 0x34
    160c:	2d a5       	ldd	r18, Y+45	; 0x2d
    160e:	3e a5       	ldd	r19, Y+46	; 0x2e
    1610:	4f a5       	ldd	r20, Y+47	; 0x2f
    1612:	58 a9       	ldd	r21, Y+48	; 0x30
    1614:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    1618:	6f ab       	std	Y+55, r22	; 0x37
    161a:	78 af       	std	Y+56, r23	; 0x38
    161c:	89 af       	std	Y+57, r24	; 0x39
    161e:	9a af       	std	Y+58, r25	; 0x3a
    1620:	70 e3       	ldi	r23, 0x30	; 48
    1622:	c7 2e       	mov	r12, r23
    1624:	d1 2c       	mov	r13, r1
    1626:	c1 54       	subi	r28, 0x41	; 65
    1628:	df 4f       	sbci	r29, 0xFF	; 255
    162a:	e8 81       	ld	r30, Y
    162c:	f9 81       	ldd	r31, Y+1	; 0x01
    162e:	cf 5b       	subi	r28, 0xBF	; 191
    1630:	d0 40       	sbci	r29, 0x00	; 0
    1632:	ce 0e       	add	r12, r30
    1634:	df 1e       	adc	r13, r31
    1636:	d6 01       	movw	r26, r12
    1638:	14 96       	adiw	r26, 0x04	; 4
    163a:	8d 91       	ld	r24, X+
    163c:	9d 91       	ld	r25, X+
    163e:	0d 90       	ld	r0, X+
    1640:	bc 91       	ld	r27, X
    1642:	a0 2d       	mov	r26, r0
    1644:	89 a7       	std	Y+41, r24	; 0x29
    1646:	9a a7       	std	Y+42, r25	; 0x2a
    1648:	ab a7       	std	Y+43, r26	; 0x2b
    164a:	bc a7       	std	Y+44, r27	; 0x2c
    164c:	d7 01       	movw	r26, r14
    164e:	1c 96       	adiw	r26, 0x0c	; 12
    1650:	8d 91       	ld	r24, X+
    1652:	9d 91       	ld	r25, X+
    1654:	0d 90       	ld	r0, X+
    1656:	bc 91       	ld	r27, X
    1658:	a0 2d       	mov	r26, r0
    165a:	8d a3       	std	Y+37, r24	; 0x25
    165c:	9e a3       	std	Y+38, r25	; 0x26
    165e:	af a3       	std	Y+39, r26	; 0x27
    1660:	b8 a7       	std	Y+40, r27	; 0x28
    1662:	d8 01       	movw	r26, r16
    1664:	18 96       	adiw	r26, 0x08	; 8
    1666:	8d 91       	ld	r24, X+
    1668:	9d 91       	ld	r25, X+
    166a:	0d 90       	ld	r0, X+
    166c:	bc 91       	ld	r27, X
    166e:	a0 2d       	mov	r26, r0
    1670:	89 a3       	std	Y+33, r24	; 0x21
    1672:	9a a3       	std	Y+34, r25	; 0x22
    1674:	ab a3       	std	Y+35, r26	; 0x23
    1676:	bc a3       	std	Y+36, r27	; 0x24
    1678:	6d a1       	ldd	r22, Y+37	; 0x25
    167a:	7e a1       	ldd	r23, Y+38	; 0x26
    167c:	8f a1       	ldd	r24, Y+39	; 0x27
    167e:	98 a5       	ldd	r25, Y+40	; 0x28
    1680:	29 a1       	ldd	r18, Y+33	; 0x21
    1682:	3a a1       	ldd	r19, Y+34	; 0x22
    1684:	4b a1       	ldd	r20, Y+35	; 0x23
    1686:	5c a1       	ldd	r21, Y+36	; 0x24
    1688:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    168c:	6b af       	std	Y+59, r22	; 0x3b
    168e:	7c af       	std	Y+60, r23	; 0x3c
    1690:	8d af       	std	Y+61, r24	; 0x3d
    1692:	9e af       	std	Y+62, r25	; 0x3e
    1694:	d8 01       	movw	r26, r16
    1696:	14 96       	adiw	r26, 0x04	; 4
    1698:	8d 91       	ld	r24, X+
    169a:	9d 91       	ld	r25, X+
    169c:	0d 90       	ld	r0, X+
    169e:	bc 91       	ld	r27, X
    16a0:	a0 2d       	mov	r26, r0
    16a2:	8d 8f       	std	Y+29, r24	; 0x1d
    16a4:	9e 8f       	std	Y+30, r25	; 0x1e
    16a6:	af 8f       	std	Y+31, r26	; 0x1f
    16a8:	b8 a3       	std	Y+32, r27	; 0x20
    16aa:	6d a1       	ldd	r22, Y+37	; 0x25
    16ac:	7e a1       	ldd	r23, Y+38	; 0x26
    16ae:	8f a1       	ldd	r24, Y+39	; 0x27
    16b0:	98 a5       	ldd	r25, Y+40	; 0x28
    16b2:	2d 8d       	ldd	r18, Y+29	; 0x1d
    16b4:	3e 8d       	ldd	r19, Y+30	; 0x1e
    16b6:	4f 8d       	ldd	r20, Y+31	; 0x1f
    16b8:	58 a1       	ldd	r21, Y+32	; 0x20
    16ba:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    16be:	23 96       	adiw	r28, 0x03	; 3
    16c0:	6c af       	std	Y+60, r22	; 0x3c
    16c2:	7d af       	std	Y+61, r23	; 0x3d
    16c4:	8e af       	std	Y+62, r24	; 0x3e
    16c6:	9f af       	std	Y+63, r25	; 0x3f
    16c8:	23 97       	sbiw	r28, 0x03	; 3
    16ca:	d6 01       	movw	r26, r12
    16cc:	18 96       	adiw	r26, 0x08	; 8
    16ce:	8d 91       	ld	r24, X+
    16d0:	9d 91       	ld	r25, X+
    16d2:	0d 90       	ld	r0, X+
    16d4:	bc 91       	ld	r27, X
    16d6:	a0 2d       	mov	r26, r0
    16d8:	89 8f       	std	Y+25, r24	; 0x19
    16da:	9a 8f       	std	Y+26, r25	; 0x1a
    16dc:	ab 8f       	std	Y+27, r26	; 0x1b
    16de:	bc 8f       	std	Y+28, r27	; 0x1c
    16e0:	d7 01       	movw	r26, r14
    16e2:	14 96       	adiw	r26, 0x04	; 4
    16e4:	8d 91       	ld	r24, X+
    16e6:	9d 91       	ld	r25, X+
    16e8:	0d 90       	ld	r0, X+
    16ea:	bc 91       	ld	r27, X
    16ec:	a0 2d       	mov	r26, r0
    16ee:	8d 8b       	std	Y+21, r24	; 0x15
    16f0:	9e 8b       	std	Y+22, r25	; 0x16
    16f2:	af 8b       	std	Y+23, r26	; 0x17
    16f4:	b8 8f       	std	Y+24, r27	; 0x18
    16f6:	bc 01       	movw	r22, r24
    16f8:	cd 01       	movw	r24, r26
    16fa:	2d a5       	ldd	r18, Y+45	; 0x2d
    16fc:	3e a5       	ldd	r19, Y+46	; 0x2e
    16fe:	4f a5       	ldd	r20, Y+47	; 0x2f
    1700:	58 a9       	ldd	r21, Y+48	; 0x30
    1702:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    1706:	27 96       	adiw	r28, 0x07	; 7
    1708:	6c af       	std	Y+60, r22	; 0x3c
    170a:	7d af       	std	Y+61, r23	; 0x3d
    170c:	8e af       	std	Y+62, r24	; 0x3e
    170e:	9f af       	std	Y+63, r25	; 0x3f
    1710:	27 97       	sbiw	r28, 0x07	; 7
    1712:	69 a9       	ldd	r22, Y+49	; 0x31
    1714:	7a a9       	ldd	r23, Y+50	; 0x32
    1716:	8b a9       	ldd	r24, Y+51	; 0x33
    1718:	9c a9       	ldd	r25, Y+52	; 0x34
    171a:	2d 8d       	ldd	r18, Y+29	; 0x1d
    171c:	3e 8d       	ldd	r19, Y+30	; 0x1e
    171e:	4f 8d       	ldd	r20, Y+31	; 0x1f
    1720:	58 a1       	ldd	r21, Y+32	; 0x20
    1722:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    1726:	2b 96       	adiw	r28, 0x0b	; 11
    1728:	6c af       	std	Y+60, r22	; 0x3c
    172a:	7d af       	std	Y+61, r23	; 0x3d
    172c:	8e af       	std	Y+62, r24	; 0x3e
    172e:	9f af       	std	Y+63, r25	; 0x3f
    1730:	2b 97       	sbiw	r28, 0x0b	; 11
    1732:	d6 01       	movw	r26, r12
    1734:	1c 96       	adiw	r26, 0x0c	; 12
    1736:	8d 91       	ld	r24, X+
    1738:	9d 91       	ld	r25, X+
    173a:	0d 90       	ld	r0, X+
    173c:	bc 91       	ld	r27, X
    173e:	a0 2d       	mov	r26, r0
    1740:	89 8b       	std	Y+17, r24	; 0x11
    1742:	9a 8b       	std	Y+18, r25	; 0x12
    1744:	ab 8b       	std	Y+19, r26	; 0x13
    1746:	bc 8b       	std	Y+20, r27	; 0x14
    1748:	6d 89       	ldd	r22, Y+21	; 0x15
    174a:	7e 89       	ldd	r23, Y+22	; 0x16
    174c:	8f 89       	ldd	r24, Y+23	; 0x17
    174e:	98 8d       	ldd	r25, Y+24	; 0x18
    1750:	29 a1       	ldd	r18, Y+33	; 0x21
    1752:	3a a1       	ldd	r19, Y+34	; 0x22
    1754:	4b a1       	ldd	r20, Y+35	; 0x23
    1756:	5c a1       	ldd	r21, Y+36	; 0x24
    1758:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    175c:	2f 96       	adiw	r28, 0x0f	; 15
    175e:	6c af       	std	Y+60, r22	; 0x3c
    1760:	7d af       	std	Y+61, r23	; 0x3d
    1762:	8e af       	std	Y+62, r24	; 0x3e
    1764:	9f af       	std	Y+63, r25	; 0x3f
    1766:	2f 97       	sbiw	r28, 0x0f	; 15
	   TA[0][1] = (  A[0][3]*A[2][2]*A[3][1] - A[0][2]*A[2][3]*A[3][1] - A[0][3]*A[2][1]*A[3][2] + A[0][1]*A[2][3]*A[3][2] + A[0][2]*A[2][1]*A[3][3] - A[0][1]*A[2][2]*A[3][3] ) / scale ;
    1768:	c1 54       	subi	r28, 0x41	; 65
    176a:	df 4f       	sbci	r29, 0xFF	; 255
    176c:	e8 81       	ld	r30, Y
    176e:	f9 81       	ldd	r31, Y+1	; 0x01
    1770:	cf 5b       	subi	r28, 0xBF	; 191
    1772:	d0 40       	sbci	r29, 0x00	; 0
    1774:	64 84       	ldd	r6, Z+12	; 0x0c
    1776:	75 84       	ldd	r7, Z+13	; 0x0d
    1778:	86 84       	ldd	r8, Z+14	; 0x0e
    177a:	97 84       	ldd	r9, Z+15	; 0x0f
    177c:	c4 01       	movw	r24, r8
    177e:	b3 01       	movw	r22, r6
    1780:	29 a1       	ldd	r18, Y+33	; 0x21
    1782:	3a a1       	ldd	r19, Y+34	; 0x22
    1784:	4b a1       	ldd	r20, Y+35	; 0x23
    1786:	5c a1       	ldd	r21, Y+36	; 0x24
    1788:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    178c:	63 96       	adiw	r28, 0x13	; 19
    178e:	6c af       	std	Y+60, r22	; 0x3c
    1790:	7d af       	std	Y+61, r23	; 0x3d
    1792:	8e af       	std	Y+62, r24	; 0x3e
    1794:	9f af       	std	Y+63, r25	; 0x3f
    1796:	63 97       	sbiw	r28, 0x13	; 19
    1798:	c1 54       	subi	r28, 0x41	; 65
    179a:	df 4f       	sbci	r29, 0xFF	; 255
    179c:	a8 81       	ld	r26, Y
    179e:	b9 81       	ldd	r27, Y+1	; 0x01
    17a0:	cf 5b       	subi	r28, 0xBF	; 191
    17a2:	d0 40       	sbci	r29, 0x00	; 0
    17a4:	18 96       	adiw	r26, 0x08	; 8
    17a6:	2d 90       	ld	r2, X+
    17a8:	3d 90       	ld	r3, X+
    17aa:	4d 90       	ld	r4, X+
    17ac:	5c 90       	ld	r5, X
    17ae:	1b 97       	sbiw	r26, 0x0b	; 11
    17b0:	c2 01       	movw	r24, r4
    17b2:	b1 01       	movw	r22, r2
    17b4:	2d a5       	ldd	r18, Y+45	; 0x2d
    17b6:	3e a5       	ldd	r19, Y+46	; 0x2e
    17b8:	4f a5       	ldd	r20, Y+47	; 0x2f
    17ba:	58 a9       	ldd	r21, Y+48	; 0x30
    17bc:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    17c0:	67 96       	adiw	r28, 0x17	; 23
    17c2:	6c af       	std	Y+60, r22	; 0x3c
    17c4:	7d af       	std	Y+61, r23	; 0x3d
    17c6:	8e af       	std	Y+62, r24	; 0x3e
    17c8:	9f af       	std	Y+63, r25	; 0x3f
    17ca:	67 97       	sbiw	r28, 0x17	; 23
    17cc:	c4 01       	movw	r24, r8
    17ce:	b3 01       	movw	r22, r6
    17d0:	2d 8d       	ldd	r18, Y+29	; 0x1d
    17d2:	3e 8d       	ldd	r19, Y+30	; 0x1e
    17d4:	4f 8d       	ldd	r20, Y+31	; 0x1f
    17d6:	58 a1       	ldd	r21, Y+32	; 0x20
    17d8:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    17dc:	6b 96       	adiw	r28, 0x1b	; 27
    17de:	6c af       	std	Y+60, r22	; 0x3c
    17e0:	7d af       	std	Y+61, r23	; 0x3d
    17e2:	8e af       	std	Y+62, r24	; 0x3e
    17e4:	9f af       	std	Y+63, r25	; 0x3f
    17e6:	6b 97       	sbiw	r28, 0x1b	; 27
    17e8:	c1 54       	subi	r28, 0x41	; 65
    17ea:	df 4f       	sbci	r29, 0xFF	; 255
    17ec:	a8 81       	ld	r26, Y
    17ee:	b9 81       	ldd	r27, Y+1	; 0x01
    17f0:	cf 5b       	subi	r28, 0xBF	; 191
    17f2:	d0 40       	sbci	r29, 0x00	; 0
    17f4:	14 96       	adiw	r26, 0x04	; 4
    17f6:	8d 91       	ld	r24, X+
    17f8:	9d 91       	ld	r25, X+
    17fa:	0d 90       	ld	r0, X+
    17fc:	bc 91       	ld	r27, X
    17fe:	a0 2d       	mov	r26, r0
    1800:	8d 87       	std	Y+13, r24	; 0x0d
    1802:	9e 87       	std	Y+14, r25	; 0x0e
    1804:	af 87       	std	Y+15, r26	; 0x0f
    1806:	b8 8b       	std	Y+16, r27	; 0x10
    1808:	bc 01       	movw	r22, r24
    180a:	cd 01       	movw	r24, r26
    180c:	2d a5       	ldd	r18, Y+45	; 0x2d
    180e:	3e a5       	ldd	r19, Y+46	; 0x2e
    1810:	4f a5       	ldd	r20, Y+47	; 0x2f
    1812:	58 a9       	ldd	r21, Y+48	; 0x30
    1814:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    1818:	6f 96       	adiw	r28, 0x1f	; 31
    181a:	6c af       	std	Y+60, r22	; 0x3c
    181c:	7d af       	std	Y+61, r23	; 0x3d
    181e:	8e af       	std	Y+62, r24	; 0x3e
    1820:	9f af       	std	Y+63, r25	; 0x3f
    1822:	6f 97       	sbiw	r28, 0x1f	; 31
    1824:	c2 01       	movw	r24, r4
    1826:	b1 01       	movw	r22, r2
    1828:	2d 8d       	ldd	r18, Y+29	; 0x1d
    182a:	3e 8d       	ldd	r19, Y+30	; 0x1e
    182c:	4f 8d       	ldd	r20, Y+31	; 0x1f
    182e:	58 a1       	ldd	r21, Y+32	; 0x20
    1830:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    1834:	a3 96       	adiw	r28, 0x23	; 35
    1836:	6c af       	std	Y+60, r22	; 0x3c
    1838:	7d af       	std	Y+61, r23	; 0x3d
    183a:	8e af       	std	Y+62, r24	; 0x3e
    183c:	9f af       	std	Y+63, r25	; 0x3f
    183e:	a3 97       	sbiw	r28, 0x23	; 35
    1840:	6d 85       	ldd	r22, Y+13	; 0x0d
    1842:	7e 85       	ldd	r23, Y+14	; 0x0e
    1844:	8f 85       	ldd	r24, Y+15	; 0x0f
    1846:	98 89       	ldd	r25, Y+16	; 0x10
    1848:	29 a1       	ldd	r18, Y+33	; 0x21
    184a:	3a a1       	ldd	r19, Y+34	; 0x22
    184c:	4b a1       	ldd	r20, Y+35	; 0x23
    184e:	5c a1       	ldd	r21, Y+36	; 0x24
    1850:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    1854:	a7 96       	adiw	r28, 0x27	; 39
    1856:	6c af       	std	Y+60, r22	; 0x3c
    1858:	7d af       	std	Y+61, r23	; 0x3d
    185a:	8e af       	std	Y+62, r24	; 0x3e
    185c:	9f af       	std	Y+63, r25	; 0x3f
    185e:	a7 97       	sbiw	r28, 0x27	; 39
	   TA[0][2] = (  A[0][2]*A[1][3]*A[3][1] - A[0][3]*A[1][2]*A[3][1] + A[0][3]*A[1][1]*A[3][2] - A[0][1]*A[1][3]*A[3][2] - A[0][2]*A[1][1]*A[3][3] + A[0][1]*A[1][2]*A[3][3] ) / scale ;
    1860:	c2 01       	movw	r24, r4
    1862:	b1 01       	movw	r22, r2
    1864:	2d a1       	ldd	r18, Y+37	; 0x25
    1866:	3e a1       	ldd	r19, Y+38	; 0x26
    1868:	4f a1       	ldd	r20, Y+39	; 0x27
    186a:	58 a5       	ldd	r21, Y+40	; 0x28
    186c:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    1870:	ab 96       	adiw	r28, 0x2b	; 43
    1872:	6c af       	std	Y+60, r22	; 0x3c
    1874:	7d af       	std	Y+61, r23	; 0x3d
    1876:	8e af       	std	Y+62, r24	; 0x3e
    1878:	9f af       	std	Y+63, r25	; 0x3f
    187a:	ab 97       	sbiw	r28, 0x2b	; 43
    187c:	c4 01       	movw	r24, r8
    187e:	b3 01       	movw	r22, r6
    1880:	29 a9       	ldd	r18, Y+49	; 0x31
    1882:	3a a9       	ldd	r19, Y+50	; 0x32
    1884:	4b a9       	ldd	r20, Y+51	; 0x33
    1886:	5c a9       	ldd	r21, Y+52	; 0x34
    1888:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    188c:	af 96       	adiw	r28, 0x2f	; 47
    188e:	6c af       	std	Y+60, r22	; 0x3c
    1890:	7d af       	std	Y+61, r23	; 0x3d
    1892:	8e af       	std	Y+62, r24	; 0x3e
    1894:	9f af       	std	Y+63, r25	; 0x3f
    1896:	af 97       	sbiw	r28, 0x2f	; 47
    1898:	c4 01       	movw	r24, r8
    189a:	b3 01       	movw	r22, r6
    189c:	2d 89       	ldd	r18, Y+21	; 0x15
    189e:	3e 89       	ldd	r19, Y+22	; 0x16
    18a0:	4f 89       	ldd	r20, Y+23	; 0x17
    18a2:	58 8d       	ldd	r21, Y+24	; 0x18
    18a4:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    18a8:	e3 96       	adiw	r28, 0x33	; 51
    18aa:	6c af       	std	Y+60, r22	; 0x3c
    18ac:	7d af       	std	Y+61, r23	; 0x3d
    18ae:	8e af       	std	Y+62, r24	; 0x3e
    18b0:	9f af       	std	Y+63, r25	; 0x3f
    18b2:	e3 97       	sbiw	r28, 0x33	; 51
    18b4:	6d 85       	ldd	r22, Y+13	; 0x0d
    18b6:	7e 85       	ldd	r23, Y+14	; 0x0e
    18b8:	8f 85       	ldd	r24, Y+15	; 0x0f
    18ba:	98 89       	ldd	r25, Y+16	; 0x10
    18bc:	2d a1       	ldd	r18, Y+37	; 0x25
    18be:	3e a1       	ldd	r19, Y+38	; 0x26
    18c0:	4f a1       	ldd	r20, Y+39	; 0x27
    18c2:	58 a5       	ldd	r21, Y+40	; 0x28
    18c4:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    18c8:	e7 96       	adiw	r28, 0x37	; 55
    18ca:	6c af       	std	Y+60, r22	; 0x3c
    18cc:	7d af       	std	Y+61, r23	; 0x3d
    18ce:	8e af       	std	Y+62, r24	; 0x3e
    18d0:	9f af       	std	Y+63, r25	; 0x3f
    18d2:	e7 97       	sbiw	r28, 0x37	; 55
    18d4:	c2 01       	movw	r24, r4
    18d6:	b1 01       	movw	r22, r2
    18d8:	2d 89       	ldd	r18, Y+21	; 0x15
    18da:	3e 89       	ldd	r19, Y+22	; 0x16
    18dc:	4f 89       	ldd	r20, Y+23	; 0x17
    18de:	58 8d       	ldd	r21, Y+24	; 0x18
    18e0:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    18e4:	eb 96       	adiw	r28, 0x3b	; 59
    18e6:	6c af       	std	Y+60, r22	; 0x3c
    18e8:	7d af       	std	Y+61, r23	; 0x3d
    18ea:	8e af       	std	Y+62, r24	; 0x3e
    18ec:	9f af       	std	Y+63, r25	; 0x3f
    18ee:	eb 97       	sbiw	r28, 0x3b	; 59
    18f0:	6d 85       	ldd	r22, Y+13	; 0x0d
    18f2:	7e 85       	ldd	r23, Y+14	; 0x0e
    18f4:	8f 85       	ldd	r24, Y+15	; 0x0f
    18f6:	98 89       	ldd	r25, Y+16	; 0x10
    18f8:	29 a9       	ldd	r18, Y+49	; 0x31
    18fa:	3a a9       	ldd	r19, Y+50	; 0x32
    18fc:	4b a9       	ldd	r20, Y+51	; 0x33
    18fe:	5c a9       	ldd	r21, Y+52	; 0x34
    1900:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    1904:	ef 96       	adiw	r28, 0x3f	; 63
    1906:	6c af       	std	Y+60, r22	; 0x3c
    1908:	7d af       	std	Y+61, r23	; 0x3d
    190a:	8e af       	std	Y+62, r24	; 0x3e
    190c:	9f af       	std	Y+63, r25	; 0x3f
    190e:	ef 97       	sbiw	r28, 0x3f	; 63
	   TA[0][3] = (  A[0][3]*A[1][2]*A[2][1] - A[0][2]*A[1][3]*A[2][1] - A[0][3]*A[1][1]*A[2][2] + A[0][1]*A[1][3]*A[2][2] + A[0][2]*A[1][1]*A[2][3] - A[0][1]*A[1][2]*A[2][3] ) / scale ;
	   TA[1][0] = (  A[1][3]*A[2][2]*A[3][0] - A[1][2]*A[2][3]*A[3][0] - A[1][3]*A[2][0]*A[3][2] + A[1][0]*A[2][3]*A[3][2] + A[1][2]*A[2][0]*A[3][3] - A[1][0]*A[2][2]*A[3][3] ) / scale ;
    1910:	c1 54       	subi	r28, 0x41	; 65
    1912:	df 4f       	sbci	r29, 0xFF	; 255
    1914:	a8 81       	ld	r26, Y
    1916:	b9 81       	ldd	r27, Y+1	; 0x01
    1918:	cf 5b       	subi	r28, 0xBF	; 191
    191a:	d0 40       	sbci	r29, 0x00	; 0
    191c:	d0 96       	adiw	r26, 0x30	; 48
    191e:	8d 91       	ld	r24, X+
    1920:	9d 91       	ld	r25, X+
    1922:	0d 90       	ld	r0, X+
    1924:	bc 91       	ld	r27, X
    1926:	a0 2d       	mov	r26, r0
    1928:	89 87       	std	Y+9, r24	; 0x09
    192a:	9a 87       	std	Y+10, r25	; 0x0a
    192c:	ab 87       	std	Y+11, r26	; 0x0b
    192e:	bc 87       	std	Y+12, r27	; 0x0c
    1930:	c1 54       	subi	r28, 0x41	; 65
    1932:	df 4f       	sbci	r29, 0xFF	; 255
    1934:	a8 81       	ld	r26, Y
    1936:	b9 81       	ldd	r27, Y+1	; 0x01
    1938:	cf 5b       	subi	r28, 0xBF	; 191
    193a:	d0 40       	sbci	r29, 0x00	; 0
    193c:	90 96       	adiw	r26, 0x20	; 32
    193e:	8d 91       	ld	r24, X+
    1940:	9d 91       	ld	r25, X+
    1942:	0d 90       	ld	r0, X+
    1944:	bc 91       	ld	r27, X
    1946:	a0 2d       	mov	r26, r0
    1948:	8d 83       	std	Y+5, r24	; 0x05
    194a:	9e 83       	std	Y+6, r25	; 0x06
    194c:	af 83       	std	Y+7, r26	; 0x07
    194e:	b8 87       	std	Y+8, r27	; 0x08
    1950:	6d a1       	ldd	r22, Y+37	; 0x25
    1952:	7e a1       	ldd	r23, Y+38	; 0x26
    1954:	8f a1       	ldd	r24, Y+39	; 0x27
    1956:	98 a5       	ldd	r25, Y+40	; 0x28
    1958:	2d 81       	ldd	r18, Y+5	; 0x05
    195a:	3e 81       	ldd	r19, Y+6	; 0x06
    195c:	4f 81       	ldd	r20, Y+7	; 0x07
    195e:	58 85       	ldd	r21, Y+8	; 0x08
    1960:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    1964:	c1 58       	subi	r28, 0x81	; 129
    1966:	df 4f       	sbci	r29, 0xFF	; 255
    1968:	68 83       	st	Y, r22
    196a:	79 83       	std	Y+1, r23	; 0x01
    196c:	8a 83       	std	Y+2, r24	; 0x02
    196e:	9b 83       	std	Y+3, r25	; 0x03
    1970:	cf 57       	subi	r28, 0x7F	; 127
    1972:	d0 40       	sbci	r29, 0x00	; 0
    1974:	c1 54       	subi	r28, 0x41	; 65
    1976:	df 4f       	sbci	r29, 0xFF	; 255
    1978:	e8 81       	ld	r30, Y
    197a:	f9 81       	ldd	r31, Y+1	; 0x01
    197c:	cf 5b       	subi	r28, 0xBF	; 191
    197e:	d0 40       	sbci	r29, 0x00	; 0
    1980:	a0 88       	ldd	r10, Z+16	; 0x10
    1982:	b1 88       	ldd	r11, Z+17	; 0x11
    1984:	c2 88       	ldd	r12, Z+18	; 0x12
    1986:	d3 88       	ldd	r13, Z+19	; 0x13
    1988:	c6 01       	movw	r24, r12
    198a:	b5 01       	movw	r22, r10
    198c:	2d a5       	ldd	r18, Y+45	; 0x2d
    198e:	3e a5       	ldd	r19, Y+46	; 0x2e
    1990:	4f a5       	ldd	r20, Y+47	; 0x2f
    1992:	58 a9       	ldd	r21, Y+48	; 0x30
    1994:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    1998:	cd 57       	subi	r28, 0x7D	; 125
    199a:	df 4f       	sbci	r29, 0xFF	; 255
    199c:	68 83       	st	Y, r22
    199e:	79 83       	std	Y+1, r23	; 0x01
    19a0:	8a 83       	std	Y+2, r24	; 0x02
    19a2:	9b 83       	std	Y+3, r25	; 0x03
    19a4:	c3 58       	subi	r28, 0x83	; 131
    19a6:	d0 40       	sbci	r29, 0x00	; 0
    19a8:	69 a9       	ldd	r22, Y+49	; 0x31
    19aa:	7a a9       	ldd	r23, Y+50	; 0x32
    19ac:	8b a9       	ldd	r24, Y+51	; 0x33
    19ae:	9c a9       	ldd	r25, Y+52	; 0x34
    19b0:	2d 81       	ldd	r18, Y+5	; 0x05
    19b2:	3e 81       	ldd	r19, Y+6	; 0x06
    19b4:	4f 81       	ldd	r20, Y+7	; 0x07
    19b6:	58 85       	ldd	r21, Y+8	; 0x08
    19b8:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    19bc:	c9 57       	subi	r28, 0x79	; 121
    19be:	df 4f       	sbci	r29, 0xFF	; 255
    19c0:	68 83       	st	Y, r22
    19c2:	79 83       	std	Y+1, r23	; 0x01
    19c4:	8a 83       	std	Y+2, r24	; 0x02
    19c6:	9b 83       	std	Y+3, r25	; 0x03
    19c8:	c7 58       	subi	r28, 0x87	; 135
    19ca:	d0 40       	sbci	r29, 0x00	; 0
    19cc:	c6 01       	movw	r24, r12
    19ce:	b5 01       	movw	r22, r10
    19d0:	29 a1       	ldd	r18, Y+33	; 0x21
    19d2:	3a a1       	ldd	r19, Y+34	; 0x22
    19d4:	4b a1       	ldd	r20, Y+35	; 0x23
    19d6:	5c a1       	ldd	r21, Y+36	; 0x24
    19d8:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    19dc:	c5 57       	subi	r28, 0x75	; 117
    19de:	df 4f       	sbci	r29, 0xFF	; 255
    19e0:	68 83       	st	Y, r22
    19e2:	79 83       	std	Y+1, r23	; 0x01
    19e4:	8a 83       	std	Y+2, r24	; 0x02
    19e6:	9b 83       	std	Y+3, r25	; 0x03
    19e8:	cb 58       	subi	r28, 0x8B	; 139
    19ea:	d0 40       	sbci	r29, 0x00	; 0
	   TA[1][1] = (  A[0][2]*A[2][3]*A[3][0] - A[0][3]*A[2][2]*A[3][0] + A[0][3]*A[2][0]*A[3][2] - A[0][0]*A[2][3]*A[3][2] - A[0][2]*A[2][0]*A[3][3] + A[0][0]*A[2][2]*A[3][3] ) / scale ;
    19ec:	c4 01       	movw	r24, r8
    19ee:	b3 01       	movw	r22, r6
    19f0:	2d 81       	ldd	r18, Y+5	; 0x05
    19f2:	3e 81       	ldd	r19, Y+6	; 0x06
    19f4:	4f 81       	ldd	r20, Y+7	; 0x07
    19f6:	58 85       	ldd	r21, Y+8	; 0x08
    19f8:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    19fc:	c1 57       	subi	r28, 0x71	; 113
    19fe:	df 4f       	sbci	r29, 0xFF	; 255
    1a00:	68 83       	st	Y, r22
    1a02:	79 83       	std	Y+1, r23	; 0x01
    1a04:	8a 83       	std	Y+2, r24	; 0x02
    1a06:	9b 83       	std	Y+3, r25	; 0x03
    1a08:	cf 58       	subi	r28, 0x8F	; 143
    1a0a:	d0 40       	sbci	r29, 0x00	; 0
    1a0c:	c1 54       	subi	r28, 0x41	; 65
    1a0e:	df 4f       	sbci	r29, 0xFF	; 255
    1a10:	a8 81       	ld	r26, Y
    1a12:	b9 81       	ldd	r27, Y+1	; 0x01
    1a14:	cf 5b       	subi	r28, 0xBF	; 191
    1a16:	d0 40       	sbci	r29, 0x00	; 0
    1a18:	ed 90       	ld	r14, X+
    1a1a:	fd 90       	ld	r15, X+
    1a1c:	0d 91       	ld	r16, X+
    1a1e:	1c 91       	ld	r17, X
    1a20:	c8 01       	movw	r24, r16
    1a22:	b7 01       	movw	r22, r14
    1a24:	2d a5       	ldd	r18, Y+45	; 0x2d
    1a26:	3e a5       	ldd	r19, Y+46	; 0x2e
    1a28:	4f a5       	ldd	r20, Y+47	; 0x2f
    1a2a:	58 a9       	ldd	r21, Y+48	; 0x30
    1a2c:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    1a30:	cd 56       	subi	r28, 0x6D	; 109
    1a32:	df 4f       	sbci	r29, 0xFF	; 255
    1a34:	68 83       	st	Y, r22
    1a36:	79 83       	std	Y+1, r23	; 0x01
    1a38:	8a 83       	std	Y+2, r24	; 0x02
    1a3a:	9b 83       	std	Y+3, r25	; 0x03
    1a3c:	c3 59       	subi	r28, 0x93	; 147
    1a3e:	d0 40       	sbci	r29, 0x00	; 0
    1a40:	c2 01       	movw	r24, r4
    1a42:	b1 01       	movw	r22, r2
    1a44:	2d 81       	ldd	r18, Y+5	; 0x05
    1a46:	3e 81       	ldd	r19, Y+6	; 0x06
    1a48:	4f 81       	ldd	r20, Y+7	; 0x07
    1a4a:	58 85       	ldd	r21, Y+8	; 0x08
    1a4c:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    1a50:	c9 56       	subi	r28, 0x69	; 105
    1a52:	df 4f       	sbci	r29, 0xFF	; 255
    1a54:	68 83       	st	Y, r22
    1a56:	79 83       	std	Y+1, r23	; 0x01
    1a58:	8a 83       	std	Y+2, r24	; 0x02
    1a5a:	9b 83       	std	Y+3, r25	; 0x03
    1a5c:	c7 59       	subi	r28, 0x97	; 151
    1a5e:	d0 40       	sbci	r29, 0x00	; 0
    1a60:	c8 01       	movw	r24, r16
    1a62:	b7 01       	movw	r22, r14
    1a64:	29 a1       	ldd	r18, Y+33	; 0x21
    1a66:	3a a1       	ldd	r19, Y+34	; 0x22
    1a68:	4b a1       	ldd	r20, Y+35	; 0x23
    1a6a:	5c a1       	ldd	r21, Y+36	; 0x24
    1a6c:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    1a70:	c5 56       	subi	r28, 0x65	; 101
    1a72:	df 4f       	sbci	r29, 0xFF	; 255
    1a74:	68 83       	st	Y, r22
    1a76:	79 83       	std	Y+1, r23	; 0x01
    1a78:	8a 83       	std	Y+2, r24	; 0x02
    1a7a:	9b 83       	std	Y+3, r25	; 0x03
    1a7c:	cb 59       	subi	r28, 0x9B	; 155
    1a7e:	d0 40       	sbci	r29, 0x00	; 0
	   TA[1][2] = (  A[0][3]*A[1][2]*A[3][0] - A[0][2]*A[1][3]*A[3][0] - A[0][3]*A[1][0]*A[3][2] + A[0][0]*A[1][3]*A[3][2] + A[0][2]*A[1][0]*A[3][3] - A[0][0]*A[1][2]*A[3][3] ) / scale ;
    1a80:	c4 01       	movw	r24, r8
    1a82:	b3 01       	movw	r22, r6
    1a84:	a6 01       	movw	r20, r12
    1a86:	95 01       	movw	r18, r10
    1a88:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    1a8c:	3b 01       	movw	r6, r22
    1a8e:	4c 01       	movw	r8, r24
    1a90:	c8 01       	movw	r24, r16
    1a92:	b7 01       	movw	r22, r14
    1a94:	2d a1       	ldd	r18, Y+37	; 0x25
    1a96:	3e a1       	ldd	r19, Y+38	; 0x26
    1a98:	4f a1       	ldd	r20, Y+39	; 0x27
    1a9a:	58 a5       	ldd	r21, Y+40	; 0x28
    1a9c:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    1aa0:	c1 56       	subi	r28, 0x61	; 97
    1aa2:	df 4f       	sbci	r29, 0xFF	; 255
    1aa4:	68 83       	st	Y, r22
    1aa6:	79 83       	std	Y+1, r23	; 0x01
    1aa8:	8a 83       	std	Y+2, r24	; 0x02
    1aaa:	9b 83       	std	Y+3, r25	; 0x03
    1aac:	cf 59       	subi	r28, 0x9F	; 159
    1aae:	d0 40       	sbci	r29, 0x00	; 0
    1ab0:	c2 01       	movw	r24, r4
    1ab2:	b1 01       	movw	r22, r2
    1ab4:	a6 01       	movw	r20, r12
    1ab6:	95 01       	movw	r18, r10
    1ab8:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    1abc:	cd 55       	subi	r28, 0x5D	; 93
    1abe:	df 4f       	sbci	r29, 0xFF	; 255
    1ac0:	68 83       	st	Y, r22
    1ac2:	79 83       	std	Y+1, r23	; 0x01
    1ac4:	8a 83       	std	Y+2, r24	; 0x02
    1ac6:	9b 83       	std	Y+3, r25	; 0x03
    1ac8:	c3 5a       	subi	r28, 0xA3	; 163
    1aca:	d0 40       	sbci	r29, 0x00	; 0
    1acc:	c8 01       	movw	r24, r16
    1ace:	b7 01       	movw	r22, r14
    1ad0:	29 a9       	ldd	r18, Y+49	; 0x31
    1ad2:	3a a9       	ldd	r19, Y+50	; 0x32
    1ad4:	4b a9       	ldd	r20, Y+51	; 0x33
    1ad6:	5c a9       	ldd	r21, Y+52	; 0x34
    1ad8:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    1adc:	c9 55       	subi	r28, 0x59	; 89
    1ade:	df 4f       	sbci	r29, 0xFF	; 255
    1ae0:	68 83       	st	Y, r22
    1ae2:	79 83       	std	Y+1, r23	; 0x01
    1ae4:	8a 83       	std	Y+2, r24	; 0x02
    1ae6:	9b 83       	std	Y+3, r25	; 0x03
    1ae8:	c7 5a       	subi	r28, 0xA7	; 167
    1aea:	d0 40       	sbci	r29, 0x00	; 0
	   TA[1][3] = (  A[0][2]*A[1][3]*A[2][0] - A[0][3]*A[1][2]*A[2][0] + A[0][3]*A[1][0]*A[2][2] - A[0][0]*A[1][3]*A[2][2] - A[0][2]*A[1][0]*A[2][3] + A[0][0]*A[1][2]*A[2][3] ) / scale ;
	   TA[2][0] = (  A[1][1]*A[2][3]*A[3][0] - A[1][3]*A[2][1]*A[3][0] + A[1][3]*A[2][0]*A[3][1] - A[1][0]*A[2][3]*A[3][1] - A[1][1]*A[2][0]*A[3][3] + A[1][0]*A[2][1]*A[3][3] ) / scale ;
    1aec:	6d 89       	ldd	r22, Y+21	; 0x15
    1aee:	7e 89       	ldd	r23, Y+22	; 0x16
    1af0:	8f 89       	ldd	r24, Y+23	; 0x17
    1af2:	98 8d       	ldd	r25, Y+24	; 0x18
    1af4:	2d 81       	ldd	r18, Y+5	; 0x05
    1af6:	3e 81       	ldd	r19, Y+6	; 0x06
    1af8:	4f 81       	ldd	r20, Y+7	; 0x07
    1afa:	58 85       	ldd	r21, Y+8	; 0x08
    1afc:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    1b00:	c5 55       	subi	r28, 0x55	; 85
    1b02:	df 4f       	sbci	r29, 0xFF	; 255
    1b04:	68 83       	st	Y, r22
    1b06:	79 83       	std	Y+1, r23	; 0x01
    1b08:	8a 83       	std	Y+2, r24	; 0x02
    1b0a:	9b 83       	std	Y+3, r25	; 0x03
    1b0c:	cb 5a       	subi	r28, 0xAB	; 171
    1b0e:	d0 40       	sbci	r29, 0x00	; 0
    1b10:	c6 01       	movw	r24, r12
    1b12:	b5 01       	movw	r22, r10
    1b14:	2d 8d       	ldd	r18, Y+29	; 0x1d
    1b16:	3e 8d       	ldd	r19, Y+30	; 0x1e
    1b18:	4f 8d       	ldd	r20, Y+31	; 0x1f
    1b1a:	58 a1       	ldd	r21, Y+32	; 0x20
    1b1c:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    1b20:	c1 55       	subi	r28, 0x51	; 81
    1b22:	df 4f       	sbci	r29, 0xFF	; 255
    1b24:	68 83       	st	Y, r22
    1b26:	79 83       	std	Y+1, r23	; 0x01
    1b28:	8a 83       	std	Y+2, r24	; 0x02
    1b2a:	9b 83       	std	Y+3, r25	; 0x03
    1b2c:	cf 5a       	subi	r28, 0xAF	; 175
    1b2e:	d0 40       	sbci	r29, 0x00	; 0
	   TA[2][1] = (  A[0][3]*A[2][1]*A[3][0] - A[0][1]*A[2][3]*A[3][0] - A[0][3]*A[2][0]*A[3][1] + A[0][0]*A[2][3]*A[3][1] + A[0][1]*A[2][0]*A[3][3] - A[0][0]*A[2][1]*A[3][3] ) / scale ;
    1b30:	6d 85       	ldd	r22, Y+13	; 0x0d
    1b32:	7e 85       	ldd	r23, Y+14	; 0x0e
    1b34:	8f 85       	ldd	r24, Y+15	; 0x0f
    1b36:	98 89       	ldd	r25, Y+16	; 0x10
    1b38:	2d 81       	ldd	r18, Y+5	; 0x05
    1b3a:	3e 81       	ldd	r19, Y+6	; 0x06
    1b3c:	4f 81       	ldd	r20, Y+7	; 0x07
    1b3e:	58 85       	ldd	r21, Y+8	; 0x08
    1b40:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    1b44:	cd 54       	subi	r28, 0x4D	; 77
    1b46:	df 4f       	sbci	r29, 0xFF	; 255
    1b48:	68 83       	st	Y, r22
    1b4a:	79 83       	std	Y+1, r23	; 0x01
    1b4c:	8a 83       	std	Y+2, r24	; 0x02
    1b4e:	9b 83       	std	Y+3, r25	; 0x03
    1b50:	c3 5b       	subi	r28, 0xB3	; 179
    1b52:	d0 40       	sbci	r29, 0x00	; 0
    1b54:	c8 01       	movw	r24, r16
    1b56:	b7 01       	movw	r22, r14
    1b58:	2d 8d       	ldd	r18, Y+29	; 0x1d
    1b5a:	3e 8d       	ldd	r19, Y+30	; 0x1e
    1b5c:	4f 8d       	ldd	r20, Y+31	; 0x1f
    1b5e:	58 a1       	ldd	r21, Y+32	; 0x20
    1b60:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    1b64:	c9 54       	subi	r28, 0x49	; 73
    1b66:	df 4f       	sbci	r29, 0xFF	; 255
    1b68:	68 83       	st	Y, r22
    1b6a:	79 83       	std	Y+1, r23	; 0x01
    1b6c:	8a 83       	std	Y+2, r24	; 0x02
    1b6e:	9b 83       	std	Y+3, r25	; 0x03
    1b70:	c7 5b       	subi	r28, 0xB7	; 183
    1b72:	d0 40       	sbci	r29, 0x00	; 0
	   TA[2][2] = (  A[0][1]*A[1][3]*A[3][0] - A[0][3]*A[1][1]*A[3][0] + A[0][3]*A[1][0]*A[3][1] - A[0][0]*A[1][3]*A[3][1] - A[0][1]*A[1][0]*A[3][3] + A[0][0]*A[1][1]*A[3][3] ) / scale ;
    1b74:	6d 85       	ldd	r22, Y+13	; 0x0d
    1b76:	7e 85       	ldd	r23, Y+14	; 0x0e
    1b78:	8f 85       	ldd	r24, Y+15	; 0x0f
    1b7a:	98 89       	ldd	r25, Y+16	; 0x10
    1b7c:	a6 01       	movw	r20, r12
    1b7e:	95 01       	movw	r18, r10
    1b80:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    1b84:	1b 01       	movw	r2, r22
    1b86:	2c 01       	movw	r4, r24
    1b88:	c8 01       	movw	r24, r16
    1b8a:	b7 01       	movw	r22, r14
    1b8c:	2d 89       	ldd	r18, Y+21	; 0x15
    1b8e:	3e 89       	ldd	r19, Y+22	; 0x16
    1b90:	4f 89       	ldd	r20, Y+23	; 0x17
    1b92:	58 8d       	ldd	r21, Y+24	; 0x18
    1b94:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    1b98:	c5 54       	subi	r28, 0x45	; 69
    1b9a:	df 4f       	sbci	r29, 0xFF	; 255
    1b9c:	68 83       	st	Y, r22
    1b9e:	79 83       	std	Y+1, r23	; 0x01
    1ba0:	8a 83       	std	Y+2, r24	; 0x02
    1ba2:	9b 83       	std	Y+3, r25	; 0x03
    1ba4:	cb 5b       	subi	r28, 0xBB	; 187
    1ba6:	d0 40       	sbci	r29, 0x00	; 0
	   TA[2][3] = (  A[0][3]*A[1][1]*A[2][0] - A[0][1]*A[1][3]*A[2][0] - A[0][3]*A[1][0]*A[2][1] + A[0][0]*A[1][3]*A[2][1] + A[0][1]*A[1][0]*A[2][3] - A[0][0]*A[1][1]*A[2][3] ) / scale ;
	   TA[3][0] = (  A[1][2]*A[2][1]*A[3][0] - A[1][1]*A[2][2]*A[3][0] - A[1][2]*A[2][0]*A[3][1] + A[1][0]*A[2][2]*A[3][1] + A[1][1]*A[2][0]*A[3][2] - A[1][0]*A[2][1]*A[3][2] ) / scale ;
	   TA[3][1] = (  A[0][1]*A[2][2]*A[3][0] - A[0][2]*A[2][1]*A[3][0] + A[0][2]*A[2][0]*A[3][1] - A[0][0]*A[2][2]*A[3][1] - A[0][1]*A[2][0]*A[3][2] + A[0][0]*A[2][1]*A[3][2] ) / scale ;
	   TA[3][2] = (  A[0][2]*A[1][1]*A[3][0] - A[0][1]*A[1][2]*A[3][0] - A[0][2]*A[1][0]*A[3][1] + A[0][0]*A[1][2]*A[3][1] + A[0][1]*A[1][0]*A[3][2] - A[0][0]*A[1][1]*A[3][2] ) / scale ;
	   TA[3][3] = (  A[0][1]*A[1][2]*A[2][0] - A[0][2]*A[1][1]*A[2][0] + A[0][2]*A[1][0]*A[2][1] - A[0][0]*A[1][2]*A[2][1] - A[0][1]*A[1][0]*A[2][2] + A[0][0]*A[1][1]*A[2][2] ) / scale ;
	   ANS[0][0]=TA[0][0];
    1ba8:	6f a9       	ldd	r22, Y+55	; 0x37
    1baa:	78 ad       	ldd	r23, Y+56	; 0x38
    1bac:	89 ad       	ldd	r24, Y+57	; 0x39
    1bae:	9a ad       	ldd	r25, Y+58	; 0x3a
    1bb0:	29 a5       	ldd	r18, Y+41	; 0x29
    1bb2:	3a a5       	ldd	r19, Y+42	; 0x2a
    1bb4:	4b a5       	ldd	r20, Y+43	; 0x2b
    1bb6:	5c a5       	ldd	r21, Y+44	; 0x2c
    1bb8:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    1bbc:	7b 01       	movw	r14, r22
    1bbe:	8c 01       	movw	r16, r24
    1bc0:	6b ad       	ldd	r22, Y+59	; 0x3b
    1bc2:	7c ad       	ldd	r23, Y+60	; 0x3c
    1bc4:	8d ad       	ldd	r24, Y+61	; 0x3d
    1bc6:	9e ad       	ldd	r25, Y+62	; 0x3e
    1bc8:	29 a5       	ldd	r18, Y+41	; 0x29
    1bca:	3a a5       	ldd	r19, Y+42	; 0x2a
    1bcc:	4b a5       	ldd	r20, Y+43	; 0x2b
    1bce:	5c a5       	ldd	r21, Y+44	; 0x2c
    1bd0:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    1bd4:	9b 01       	movw	r18, r22
    1bd6:	ac 01       	movw	r20, r24
    1bd8:	c8 01       	movw	r24, r16
    1bda:	b7 01       	movw	r22, r14
    1bdc:	0e 94 88 1c 	call	0x3910	; 0x3910 <__subsf3>
    1be0:	7b 01       	movw	r14, r22
    1be2:	8c 01       	movw	r16, r24
    1be4:	23 96       	adiw	r28, 0x03	; 3
    1be6:	6c ad       	ldd	r22, Y+60	; 0x3c
    1be8:	7d ad       	ldd	r23, Y+61	; 0x3d
    1bea:	8e ad       	ldd	r24, Y+62	; 0x3e
    1bec:	9f ad       	ldd	r25, Y+63	; 0x3f
    1bee:	23 97       	sbiw	r28, 0x03	; 3
    1bf0:	29 8d       	ldd	r18, Y+25	; 0x19
    1bf2:	3a 8d       	ldd	r19, Y+26	; 0x1a
    1bf4:	4b 8d       	ldd	r20, Y+27	; 0x1b
    1bf6:	5c 8d       	ldd	r21, Y+28	; 0x1c
    1bf8:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    1bfc:	9b 01       	movw	r18, r22
    1bfe:	ac 01       	movw	r20, r24
    1c00:	c8 01       	movw	r24, r16
    1c02:	b7 01       	movw	r22, r14
    1c04:	0e 94 89 1c 	call	0x3912	; 0x3912 <__addsf3>
    1c08:	7b 01       	movw	r14, r22
    1c0a:	8c 01       	movw	r16, r24
    1c0c:	27 96       	adiw	r28, 0x07	; 7
    1c0e:	6c ad       	ldd	r22, Y+60	; 0x3c
    1c10:	7d ad       	ldd	r23, Y+61	; 0x3d
    1c12:	8e ad       	ldd	r24, Y+62	; 0x3e
    1c14:	9f ad       	ldd	r25, Y+63	; 0x3f
    1c16:	27 97       	sbiw	r28, 0x07	; 7
    1c18:	29 8d       	ldd	r18, Y+25	; 0x19
    1c1a:	3a 8d       	ldd	r19, Y+26	; 0x1a
    1c1c:	4b 8d       	ldd	r20, Y+27	; 0x1b
    1c1e:	5c 8d       	ldd	r21, Y+28	; 0x1c
    1c20:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    1c24:	9b 01       	movw	r18, r22
    1c26:	ac 01       	movw	r20, r24
    1c28:	c8 01       	movw	r24, r16
    1c2a:	b7 01       	movw	r22, r14
    1c2c:	0e 94 88 1c 	call	0x3910	; 0x3910 <__subsf3>
    1c30:	7b 01       	movw	r14, r22
    1c32:	8c 01       	movw	r16, r24
    1c34:	2b 96       	adiw	r28, 0x0b	; 11
    1c36:	6c ad       	ldd	r22, Y+60	; 0x3c
    1c38:	7d ad       	ldd	r23, Y+61	; 0x3d
    1c3a:	8e ad       	ldd	r24, Y+62	; 0x3e
    1c3c:	9f ad       	ldd	r25, Y+63	; 0x3f
    1c3e:	2b 97       	sbiw	r28, 0x0b	; 11
    1c40:	29 89       	ldd	r18, Y+17	; 0x11
    1c42:	3a 89       	ldd	r19, Y+18	; 0x12
    1c44:	4b 89       	ldd	r20, Y+19	; 0x13
    1c46:	5c 89       	ldd	r21, Y+20	; 0x14
    1c48:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    1c4c:	9b 01       	movw	r18, r22
    1c4e:	ac 01       	movw	r20, r24
    1c50:	c8 01       	movw	r24, r16
    1c52:	b7 01       	movw	r22, r14
    1c54:	0e 94 88 1c 	call	0x3910	; 0x3910 <__subsf3>
    1c58:	7b 01       	movw	r14, r22
    1c5a:	8c 01       	movw	r16, r24
    1c5c:	2f 96       	adiw	r28, 0x0f	; 15
    1c5e:	6c ad       	ldd	r22, Y+60	; 0x3c
    1c60:	7d ad       	ldd	r23, Y+61	; 0x3d
    1c62:	8e ad       	ldd	r24, Y+62	; 0x3e
    1c64:	9f ad       	ldd	r25, Y+63	; 0x3f
    1c66:	2f 97       	sbiw	r28, 0x0f	; 15
    1c68:	29 89       	ldd	r18, Y+17	; 0x11
    1c6a:	3a 89       	ldd	r19, Y+18	; 0x12
    1c6c:	4b 89       	ldd	r20, Y+19	; 0x13
    1c6e:	5c 89       	ldd	r21, Y+20	; 0x14
    1c70:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    1c74:	9b 01       	movw	r18, r22
    1c76:	ac 01       	movw	r20, r24
    1c78:	c8 01       	movw	r24, r16
    1c7a:	b7 01       	movw	r22, r14
    1c7c:	0e 94 89 1c 	call	0x3912	; 0x3912 <__addsf3>
    1c80:	29 81       	ldd	r18, Y+1	; 0x01
    1c82:	3a 81       	ldd	r19, Y+2	; 0x02
    1c84:	4b 81       	ldd	r20, Y+3	; 0x03
    1c86:	5c 81       	ldd	r21, Y+4	; 0x04
    1c88:	0e 94 f1 1c 	call	0x39e2	; 0x39e2 <__divsf3>
    1c8c:	ed a9       	ldd	r30, Y+53	; 0x35
    1c8e:	fe a9       	ldd	r31, Y+54	; 0x36
    1c90:	60 83       	st	Z, r22
    1c92:	71 83       	std	Z+1, r23	; 0x01
    1c94:	82 83       	std	Z+2, r24	; 0x02
    1c96:	93 83       	std	Z+3, r25	; 0x03
	   ANS[0][1]=TA[0][1];
    1c98:	63 96       	adiw	r28, 0x13	; 19
    1c9a:	6c ad       	ldd	r22, Y+60	; 0x3c
    1c9c:	7d ad       	ldd	r23, Y+61	; 0x3d
    1c9e:	8e ad       	ldd	r24, Y+62	; 0x3e
    1ca0:	9f ad       	ldd	r25, Y+63	; 0x3f
    1ca2:	63 97       	sbiw	r28, 0x13	; 19
    1ca4:	29 a5       	ldd	r18, Y+41	; 0x29
    1ca6:	3a a5       	ldd	r19, Y+42	; 0x2a
    1ca8:	4b a5       	ldd	r20, Y+43	; 0x2b
    1caa:	5c a5       	ldd	r21, Y+44	; 0x2c
    1cac:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    1cb0:	7b 01       	movw	r14, r22
    1cb2:	8c 01       	movw	r16, r24
    1cb4:	67 96       	adiw	r28, 0x17	; 23
    1cb6:	6c ad       	ldd	r22, Y+60	; 0x3c
    1cb8:	7d ad       	ldd	r23, Y+61	; 0x3d
    1cba:	8e ad       	ldd	r24, Y+62	; 0x3e
    1cbc:	9f ad       	ldd	r25, Y+63	; 0x3f
    1cbe:	67 97       	sbiw	r28, 0x17	; 23
    1cc0:	29 a5       	ldd	r18, Y+41	; 0x29
    1cc2:	3a a5       	ldd	r19, Y+42	; 0x2a
    1cc4:	4b a5       	ldd	r20, Y+43	; 0x2b
    1cc6:	5c a5       	ldd	r21, Y+44	; 0x2c
    1cc8:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    1ccc:	9b 01       	movw	r18, r22
    1cce:	ac 01       	movw	r20, r24
    1cd0:	c8 01       	movw	r24, r16
    1cd2:	b7 01       	movw	r22, r14
    1cd4:	0e 94 88 1c 	call	0x3910	; 0x3910 <__subsf3>
    1cd8:	7b 01       	movw	r14, r22
    1cda:	8c 01       	movw	r16, r24
    1cdc:	6b 96       	adiw	r28, 0x1b	; 27
    1cde:	6c ad       	ldd	r22, Y+60	; 0x3c
    1ce0:	7d ad       	ldd	r23, Y+61	; 0x3d
    1ce2:	8e ad       	ldd	r24, Y+62	; 0x3e
    1ce4:	9f ad       	ldd	r25, Y+63	; 0x3f
    1ce6:	6b 97       	sbiw	r28, 0x1b	; 27
    1ce8:	29 8d       	ldd	r18, Y+25	; 0x19
    1cea:	3a 8d       	ldd	r19, Y+26	; 0x1a
    1cec:	4b 8d       	ldd	r20, Y+27	; 0x1b
    1cee:	5c 8d       	ldd	r21, Y+28	; 0x1c
    1cf0:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    1cf4:	9b 01       	movw	r18, r22
    1cf6:	ac 01       	movw	r20, r24
    1cf8:	c8 01       	movw	r24, r16
    1cfa:	b7 01       	movw	r22, r14
    1cfc:	0e 94 88 1c 	call	0x3910	; 0x3910 <__subsf3>
    1d00:	7b 01       	movw	r14, r22
    1d02:	8c 01       	movw	r16, r24
    1d04:	6f 96       	adiw	r28, 0x1f	; 31
    1d06:	6c ad       	ldd	r22, Y+60	; 0x3c
    1d08:	7d ad       	ldd	r23, Y+61	; 0x3d
    1d0a:	8e ad       	ldd	r24, Y+62	; 0x3e
    1d0c:	9f ad       	ldd	r25, Y+63	; 0x3f
    1d0e:	6f 97       	sbiw	r28, 0x1f	; 31
    1d10:	29 8d       	ldd	r18, Y+25	; 0x19
    1d12:	3a 8d       	ldd	r19, Y+26	; 0x1a
    1d14:	4b 8d       	ldd	r20, Y+27	; 0x1b
    1d16:	5c 8d       	ldd	r21, Y+28	; 0x1c
    1d18:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    1d1c:	9b 01       	movw	r18, r22
    1d1e:	ac 01       	movw	r20, r24
    1d20:	c8 01       	movw	r24, r16
    1d22:	b7 01       	movw	r22, r14
    1d24:	0e 94 89 1c 	call	0x3912	; 0x3912 <__addsf3>
    1d28:	7b 01       	movw	r14, r22
    1d2a:	8c 01       	movw	r16, r24
    1d2c:	a3 96       	adiw	r28, 0x23	; 35
    1d2e:	6c ad       	ldd	r22, Y+60	; 0x3c
    1d30:	7d ad       	ldd	r23, Y+61	; 0x3d
    1d32:	8e ad       	ldd	r24, Y+62	; 0x3e
    1d34:	9f ad       	ldd	r25, Y+63	; 0x3f
    1d36:	a3 97       	sbiw	r28, 0x23	; 35
    1d38:	29 89       	ldd	r18, Y+17	; 0x11
    1d3a:	3a 89       	ldd	r19, Y+18	; 0x12
    1d3c:	4b 89       	ldd	r20, Y+19	; 0x13
    1d3e:	5c 89       	ldd	r21, Y+20	; 0x14
    1d40:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    1d44:	9b 01       	movw	r18, r22
    1d46:	ac 01       	movw	r20, r24
    1d48:	c8 01       	movw	r24, r16
    1d4a:	b7 01       	movw	r22, r14
    1d4c:	0e 94 89 1c 	call	0x3912	; 0x3912 <__addsf3>
    1d50:	7b 01       	movw	r14, r22
    1d52:	8c 01       	movw	r16, r24
    1d54:	a7 96       	adiw	r28, 0x27	; 39
    1d56:	6c ad       	ldd	r22, Y+60	; 0x3c
    1d58:	7d ad       	ldd	r23, Y+61	; 0x3d
    1d5a:	8e ad       	ldd	r24, Y+62	; 0x3e
    1d5c:	9f ad       	ldd	r25, Y+63	; 0x3f
    1d5e:	a7 97       	sbiw	r28, 0x27	; 39
    1d60:	29 89       	ldd	r18, Y+17	; 0x11
    1d62:	3a 89       	ldd	r19, Y+18	; 0x12
    1d64:	4b 89       	ldd	r20, Y+19	; 0x13
    1d66:	5c 89       	ldd	r21, Y+20	; 0x14
    1d68:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    1d6c:	9b 01       	movw	r18, r22
    1d6e:	ac 01       	movw	r20, r24
    1d70:	c8 01       	movw	r24, r16
    1d72:	b7 01       	movw	r22, r14
    1d74:	0e 94 88 1c 	call	0x3910	; 0x3910 <__subsf3>
    1d78:	29 81       	ldd	r18, Y+1	; 0x01
    1d7a:	3a 81       	ldd	r19, Y+2	; 0x02
    1d7c:	4b 81       	ldd	r20, Y+3	; 0x03
    1d7e:	5c 81       	ldd	r21, Y+4	; 0x04
    1d80:	0e 94 f1 1c 	call	0x39e2	; 0x39e2 <__divsf3>
    1d84:	ad a9       	ldd	r26, Y+53	; 0x35
    1d86:	be a9       	ldd	r27, Y+54	; 0x36
    1d88:	14 96       	adiw	r26, 0x04	; 4
    1d8a:	6d 93       	st	X+, r22
    1d8c:	7d 93       	st	X+, r23
    1d8e:	8d 93       	st	X+, r24
    1d90:	9c 93       	st	X, r25
    1d92:	17 97       	sbiw	r26, 0x07	; 7
	   ANS[0][2]=TA[0][2];
    1d94:	ab 96       	adiw	r28, 0x2b	; 43
    1d96:	6c ad       	ldd	r22, Y+60	; 0x3c
    1d98:	7d ad       	ldd	r23, Y+61	; 0x3d
    1d9a:	8e ad       	ldd	r24, Y+62	; 0x3e
    1d9c:	9f ad       	ldd	r25, Y+63	; 0x3f
    1d9e:	ab 97       	sbiw	r28, 0x2b	; 43
    1da0:	29 a5       	ldd	r18, Y+41	; 0x29
    1da2:	3a a5       	ldd	r19, Y+42	; 0x2a
    1da4:	4b a5       	ldd	r20, Y+43	; 0x2b
    1da6:	5c a5       	ldd	r21, Y+44	; 0x2c
    1da8:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    1dac:	7b 01       	movw	r14, r22
    1dae:	8c 01       	movw	r16, r24
    1db0:	af 96       	adiw	r28, 0x2f	; 47
    1db2:	6c ad       	ldd	r22, Y+60	; 0x3c
    1db4:	7d ad       	ldd	r23, Y+61	; 0x3d
    1db6:	8e ad       	ldd	r24, Y+62	; 0x3e
    1db8:	9f ad       	ldd	r25, Y+63	; 0x3f
    1dba:	af 97       	sbiw	r28, 0x2f	; 47
    1dbc:	29 a5       	ldd	r18, Y+41	; 0x29
    1dbe:	3a a5       	ldd	r19, Y+42	; 0x2a
    1dc0:	4b a5       	ldd	r20, Y+43	; 0x2b
    1dc2:	5c a5       	ldd	r21, Y+44	; 0x2c
    1dc4:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    1dc8:	9b 01       	movw	r18, r22
    1dca:	ac 01       	movw	r20, r24
    1dcc:	c8 01       	movw	r24, r16
    1dce:	b7 01       	movw	r22, r14
    1dd0:	0e 94 88 1c 	call	0x3910	; 0x3910 <__subsf3>
    1dd4:	7b 01       	movw	r14, r22
    1dd6:	8c 01       	movw	r16, r24
    1dd8:	e3 96       	adiw	r28, 0x33	; 51
    1dda:	6c ad       	ldd	r22, Y+60	; 0x3c
    1ddc:	7d ad       	ldd	r23, Y+61	; 0x3d
    1dde:	8e ad       	ldd	r24, Y+62	; 0x3e
    1de0:	9f ad       	ldd	r25, Y+63	; 0x3f
    1de2:	e3 97       	sbiw	r28, 0x33	; 51
    1de4:	29 8d       	ldd	r18, Y+25	; 0x19
    1de6:	3a 8d       	ldd	r19, Y+26	; 0x1a
    1de8:	4b 8d       	ldd	r20, Y+27	; 0x1b
    1dea:	5c 8d       	ldd	r21, Y+28	; 0x1c
    1dec:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    1df0:	9b 01       	movw	r18, r22
    1df2:	ac 01       	movw	r20, r24
    1df4:	c8 01       	movw	r24, r16
    1df6:	b7 01       	movw	r22, r14
    1df8:	0e 94 89 1c 	call	0x3912	; 0x3912 <__addsf3>
    1dfc:	7b 01       	movw	r14, r22
    1dfe:	8c 01       	movw	r16, r24
    1e00:	e7 96       	adiw	r28, 0x37	; 55
    1e02:	6c ad       	ldd	r22, Y+60	; 0x3c
    1e04:	7d ad       	ldd	r23, Y+61	; 0x3d
    1e06:	8e ad       	ldd	r24, Y+62	; 0x3e
    1e08:	9f ad       	ldd	r25, Y+63	; 0x3f
    1e0a:	e7 97       	sbiw	r28, 0x37	; 55
    1e0c:	29 8d       	ldd	r18, Y+25	; 0x19
    1e0e:	3a 8d       	ldd	r19, Y+26	; 0x1a
    1e10:	4b 8d       	ldd	r20, Y+27	; 0x1b
    1e12:	5c 8d       	ldd	r21, Y+28	; 0x1c
    1e14:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    1e18:	9b 01       	movw	r18, r22
    1e1a:	ac 01       	movw	r20, r24
    1e1c:	c8 01       	movw	r24, r16
    1e1e:	b7 01       	movw	r22, r14
    1e20:	0e 94 88 1c 	call	0x3910	; 0x3910 <__subsf3>
    1e24:	7b 01       	movw	r14, r22
    1e26:	8c 01       	movw	r16, r24
    1e28:	eb 96       	adiw	r28, 0x3b	; 59
    1e2a:	6c ad       	ldd	r22, Y+60	; 0x3c
    1e2c:	7d ad       	ldd	r23, Y+61	; 0x3d
    1e2e:	8e ad       	ldd	r24, Y+62	; 0x3e
    1e30:	9f ad       	ldd	r25, Y+63	; 0x3f
    1e32:	eb 97       	sbiw	r28, 0x3b	; 59
    1e34:	29 89       	ldd	r18, Y+17	; 0x11
    1e36:	3a 89       	ldd	r19, Y+18	; 0x12
    1e38:	4b 89       	ldd	r20, Y+19	; 0x13
    1e3a:	5c 89       	ldd	r21, Y+20	; 0x14
    1e3c:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    1e40:	9b 01       	movw	r18, r22
    1e42:	ac 01       	movw	r20, r24
    1e44:	c8 01       	movw	r24, r16
    1e46:	b7 01       	movw	r22, r14
    1e48:	0e 94 88 1c 	call	0x3910	; 0x3910 <__subsf3>
    1e4c:	7b 01       	movw	r14, r22
    1e4e:	8c 01       	movw	r16, r24
    1e50:	ef 96       	adiw	r28, 0x3f	; 63
    1e52:	6c ad       	ldd	r22, Y+60	; 0x3c
    1e54:	7d ad       	ldd	r23, Y+61	; 0x3d
    1e56:	8e ad       	ldd	r24, Y+62	; 0x3e
    1e58:	9f ad       	ldd	r25, Y+63	; 0x3f
    1e5a:	ef 97       	sbiw	r28, 0x3f	; 63
    1e5c:	29 89       	ldd	r18, Y+17	; 0x11
    1e5e:	3a 89       	ldd	r19, Y+18	; 0x12
    1e60:	4b 89       	ldd	r20, Y+19	; 0x13
    1e62:	5c 89       	ldd	r21, Y+20	; 0x14
    1e64:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    1e68:	9b 01       	movw	r18, r22
    1e6a:	ac 01       	movw	r20, r24
    1e6c:	c8 01       	movw	r24, r16
    1e6e:	b7 01       	movw	r22, r14
    1e70:	0e 94 89 1c 	call	0x3912	; 0x3912 <__addsf3>
    1e74:	29 81       	ldd	r18, Y+1	; 0x01
    1e76:	3a 81       	ldd	r19, Y+2	; 0x02
    1e78:	4b 81       	ldd	r20, Y+3	; 0x03
    1e7a:	5c 81       	ldd	r21, Y+4	; 0x04
    1e7c:	0e 94 f1 1c 	call	0x39e2	; 0x39e2 <__divsf3>
    1e80:	ed a9       	ldd	r30, Y+53	; 0x35
    1e82:	fe a9       	ldd	r31, Y+54	; 0x36
    1e84:	60 87       	std	Z+8, r22	; 0x08
    1e86:	71 87       	std	Z+9, r23	; 0x09
    1e88:	82 87       	std	Z+10, r24	; 0x0a
    1e8a:	93 87       	std	Z+11, r25	; 0x0b
	   ANS[0][3]=TA[0][3];
    1e8c:	af 96       	adiw	r28, 0x2f	; 47
    1e8e:	6c ad       	ldd	r22, Y+60	; 0x3c
    1e90:	7d ad       	ldd	r23, Y+61	; 0x3d
    1e92:	8e ad       	ldd	r24, Y+62	; 0x3e
    1e94:	9f ad       	ldd	r25, Y+63	; 0x3f
    1e96:	af 97       	sbiw	r28, 0x2f	; 47
    1e98:	2d 8d       	ldd	r18, Y+29	; 0x1d
    1e9a:	3e 8d       	ldd	r19, Y+30	; 0x1e
    1e9c:	4f 8d       	ldd	r20, Y+31	; 0x1f
    1e9e:	58 a1       	ldd	r21, Y+32	; 0x20
    1ea0:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    1ea4:	7b 01       	movw	r14, r22
    1ea6:	8c 01       	movw	r16, r24
    1ea8:	ab 96       	adiw	r28, 0x2b	; 43
    1eaa:	6c ad       	ldd	r22, Y+60	; 0x3c
    1eac:	7d ad       	ldd	r23, Y+61	; 0x3d
    1eae:	8e ad       	ldd	r24, Y+62	; 0x3e
    1eb0:	9f ad       	ldd	r25, Y+63	; 0x3f
    1eb2:	ab 97       	sbiw	r28, 0x2b	; 43
    1eb4:	2d 8d       	ldd	r18, Y+29	; 0x1d
    1eb6:	3e 8d       	ldd	r19, Y+30	; 0x1e
    1eb8:	4f 8d       	ldd	r20, Y+31	; 0x1f
    1eba:	58 a1       	ldd	r21, Y+32	; 0x20
    1ebc:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    1ec0:	9b 01       	movw	r18, r22
    1ec2:	ac 01       	movw	r20, r24
    1ec4:	c8 01       	movw	r24, r16
    1ec6:	b7 01       	movw	r22, r14
    1ec8:	0e 94 88 1c 	call	0x3910	; 0x3910 <__subsf3>
    1ecc:	7b 01       	movw	r14, r22
    1ece:	8c 01       	movw	r16, r24
    1ed0:	e3 96       	adiw	r28, 0x33	; 51
    1ed2:	6c ad       	ldd	r22, Y+60	; 0x3c
    1ed4:	7d ad       	ldd	r23, Y+61	; 0x3d
    1ed6:	8e ad       	ldd	r24, Y+62	; 0x3e
    1ed8:	9f ad       	ldd	r25, Y+63	; 0x3f
    1eda:	e3 97       	sbiw	r28, 0x33	; 51
    1edc:	29 a1       	ldd	r18, Y+33	; 0x21
    1ede:	3a a1       	ldd	r19, Y+34	; 0x22
    1ee0:	4b a1       	ldd	r20, Y+35	; 0x23
    1ee2:	5c a1       	ldd	r21, Y+36	; 0x24
    1ee4:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    1ee8:	9b 01       	movw	r18, r22
    1eea:	ac 01       	movw	r20, r24
    1eec:	c8 01       	movw	r24, r16
    1eee:	b7 01       	movw	r22, r14
    1ef0:	0e 94 88 1c 	call	0x3910	; 0x3910 <__subsf3>
    1ef4:	7b 01       	movw	r14, r22
    1ef6:	8c 01       	movw	r16, r24
    1ef8:	e7 96       	adiw	r28, 0x37	; 55
    1efa:	6c ad       	ldd	r22, Y+60	; 0x3c
    1efc:	7d ad       	ldd	r23, Y+61	; 0x3d
    1efe:	8e ad       	ldd	r24, Y+62	; 0x3e
    1f00:	9f ad       	ldd	r25, Y+63	; 0x3f
    1f02:	e7 97       	sbiw	r28, 0x37	; 55
    1f04:	29 a1       	ldd	r18, Y+33	; 0x21
    1f06:	3a a1       	ldd	r19, Y+34	; 0x22
    1f08:	4b a1       	ldd	r20, Y+35	; 0x23
    1f0a:	5c a1       	ldd	r21, Y+36	; 0x24
    1f0c:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    1f10:	9b 01       	movw	r18, r22
    1f12:	ac 01       	movw	r20, r24
    1f14:	c8 01       	movw	r24, r16
    1f16:	b7 01       	movw	r22, r14
    1f18:	0e 94 89 1c 	call	0x3912	; 0x3912 <__addsf3>
    1f1c:	7b 01       	movw	r14, r22
    1f1e:	8c 01       	movw	r16, r24
    1f20:	eb 96       	adiw	r28, 0x3b	; 59
    1f22:	6c ad       	ldd	r22, Y+60	; 0x3c
    1f24:	7d ad       	ldd	r23, Y+61	; 0x3d
    1f26:	8e ad       	ldd	r24, Y+62	; 0x3e
    1f28:	9f ad       	ldd	r25, Y+63	; 0x3f
    1f2a:	eb 97       	sbiw	r28, 0x3b	; 59
    1f2c:	2d a5       	ldd	r18, Y+45	; 0x2d
    1f2e:	3e a5       	ldd	r19, Y+46	; 0x2e
    1f30:	4f a5       	ldd	r20, Y+47	; 0x2f
    1f32:	58 a9       	ldd	r21, Y+48	; 0x30
    1f34:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    1f38:	9b 01       	movw	r18, r22
    1f3a:	ac 01       	movw	r20, r24
    1f3c:	c8 01       	movw	r24, r16
    1f3e:	b7 01       	movw	r22, r14
    1f40:	0e 94 89 1c 	call	0x3912	; 0x3912 <__addsf3>
    1f44:	7b 01       	movw	r14, r22
    1f46:	8c 01       	movw	r16, r24
    1f48:	ef 96       	adiw	r28, 0x3f	; 63
    1f4a:	6c ad       	ldd	r22, Y+60	; 0x3c
    1f4c:	7d ad       	ldd	r23, Y+61	; 0x3d
    1f4e:	8e ad       	ldd	r24, Y+62	; 0x3e
    1f50:	9f ad       	ldd	r25, Y+63	; 0x3f
    1f52:	ef 97       	sbiw	r28, 0x3f	; 63
    1f54:	2d a5       	ldd	r18, Y+45	; 0x2d
    1f56:	3e a5       	ldd	r19, Y+46	; 0x2e
    1f58:	4f a5       	ldd	r20, Y+47	; 0x2f
    1f5a:	58 a9       	ldd	r21, Y+48	; 0x30
    1f5c:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    1f60:	9b 01       	movw	r18, r22
    1f62:	ac 01       	movw	r20, r24
    1f64:	c8 01       	movw	r24, r16
    1f66:	b7 01       	movw	r22, r14
    1f68:	0e 94 88 1c 	call	0x3910	; 0x3910 <__subsf3>
    1f6c:	29 81       	ldd	r18, Y+1	; 0x01
    1f6e:	3a 81       	ldd	r19, Y+2	; 0x02
    1f70:	4b 81       	ldd	r20, Y+3	; 0x03
    1f72:	5c 81       	ldd	r21, Y+4	; 0x04
    1f74:	0e 94 f1 1c 	call	0x39e2	; 0x39e2 <__divsf3>
    1f78:	ad a9       	ldd	r26, Y+53	; 0x35
    1f7a:	be a9       	ldd	r27, Y+54	; 0x36
    1f7c:	1c 96       	adiw	r26, 0x0c	; 12
    1f7e:	6d 93       	st	X+, r22
    1f80:	7d 93       	st	X+, r23
    1f82:	8d 93       	st	X+, r24
    1f84:	9c 93       	st	X, r25
    1f86:	1f 97       	sbiw	r26, 0x0f	; 15
	   ANS[1][0]=TA[1][0];
    1f88:	6d 01       	movw	r12, r26
    1f8a:	e0 e1       	ldi	r30, 0x10	; 16
    1f8c:	f0 e0       	ldi	r31, 0x00	; 0
    1f8e:	ce 0e       	add	r12, r30
    1f90:	df 1e       	adc	r13, r31
    1f92:	6b ad       	ldd	r22, Y+59	; 0x3b
    1f94:	7c ad       	ldd	r23, Y+60	; 0x3c
    1f96:	8d ad       	ldd	r24, Y+61	; 0x3d
    1f98:	9e ad       	ldd	r25, Y+62	; 0x3e
    1f9a:	29 85       	ldd	r18, Y+9	; 0x09
    1f9c:	3a 85       	ldd	r19, Y+10	; 0x0a
    1f9e:	4b 85       	ldd	r20, Y+11	; 0x0b
    1fa0:	5c 85       	ldd	r21, Y+12	; 0x0c
    1fa2:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    1fa6:	7b 01       	movw	r14, r22
    1fa8:	8c 01       	movw	r16, r24
    1faa:	6f a9       	ldd	r22, Y+55	; 0x37
    1fac:	78 ad       	ldd	r23, Y+56	; 0x38
    1fae:	89 ad       	ldd	r24, Y+57	; 0x39
    1fb0:	9a ad       	ldd	r25, Y+58	; 0x3a
    1fb2:	29 85       	ldd	r18, Y+9	; 0x09
    1fb4:	3a 85       	ldd	r19, Y+10	; 0x0a
    1fb6:	4b 85       	ldd	r20, Y+11	; 0x0b
    1fb8:	5c 85       	ldd	r21, Y+12	; 0x0c
    1fba:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    1fbe:	9b 01       	movw	r18, r22
    1fc0:	ac 01       	movw	r20, r24
    1fc2:	c8 01       	movw	r24, r16
    1fc4:	b7 01       	movw	r22, r14
    1fc6:	0e 94 88 1c 	call	0x3910	; 0x3910 <__subsf3>
    1fca:	7b 01       	movw	r14, r22
    1fcc:	8c 01       	movw	r16, r24
    1fce:	c1 58       	subi	r28, 0x81	; 129
    1fd0:	df 4f       	sbci	r29, 0xFF	; 255
    1fd2:	68 81       	ld	r22, Y
    1fd4:	79 81       	ldd	r23, Y+1	; 0x01
    1fd6:	8a 81       	ldd	r24, Y+2	; 0x02
    1fd8:	9b 81       	ldd	r25, Y+3	; 0x03
    1fda:	cf 57       	subi	r28, 0x7F	; 127
    1fdc:	d0 40       	sbci	r29, 0x00	; 0
    1fde:	29 8d       	ldd	r18, Y+25	; 0x19
    1fe0:	3a 8d       	ldd	r19, Y+26	; 0x1a
    1fe2:	4b 8d       	ldd	r20, Y+27	; 0x1b
    1fe4:	5c 8d       	ldd	r21, Y+28	; 0x1c
    1fe6:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    1fea:	9b 01       	movw	r18, r22
    1fec:	ac 01       	movw	r20, r24
    1fee:	c8 01       	movw	r24, r16
    1ff0:	b7 01       	movw	r22, r14
    1ff2:	0e 94 88 1c 	call	0x3910	; 0x3910 <__subsf3>
    1ff6:	7b 01       	movw	r14, r22
    1ff8:	8c 01       	movw	r16, r24
    1ffa:	cd 57       	subi	r28, 0x7D	; 125
    1ffc:	df 4f       	sbci	r29, 0xFF	; 255
    1ffe:	68 81       	ld	r22, Y
    2000:	79 81       	ldd	r23, Y+1	; 0x01
    2002:	8a 81       	ldd	r24, Y+2	; 0x02
    2004:	9b 81       	ldd	r25, Y+3	; 0x03
    2006:	c3 58       	subi	r28, 0x83	; 131
    2008:	d0 40       	sbci	r29, 0x00	; 0
    200a:	29 8d       	ldd	r18, Y+25	; 0x19
    200c:	3a 8d       	ldd	r19, Y+26	; 0x1a
    200e:	4b 8d       	ldd	r20, Y+27	; 0x1b
    2010:	5c 8d       	ldd	r21, Y+28	; 0x1c
    2012:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    2016:	9b 01       	movw	r18, r22
    2018:	ac 01       	movw	r20, r24
    201a:	c8 01       	movw	r24, r16
    201c:	b7 01       	movw	r22, r14
    201e:	0e 94 89 1c 	call	0x3912	; 0x3912 <__addsf3>
    2022:	7b 01       	movw	r14, r22
    2024:	8c 01       	movw	r16, r24
    2026:	c9 57       	subi	r28, 0x79	; 121
    2028:	df 4f       	sbci	r29, 0xFF	; 255
    202a:	68 81       	ld	r22, Y
    202c:	79 81       	ldd	r23, Y+1	; 0x01
    202e:	8a 81       	ldd	r24, Y+2	; 0x02
    2030:	9b 81       	ldd	r25, Y+3	; 0x03
    2032:	c7 58       	subi	r28, 0x87	; 135
    2034:	d0 40       	sbci	r29, 0x00	; 0
    2036:	29 89       	ldd	r18, Y+17	; 0x11
    2038:	3a 89       	ldd	r19, Y+18	; 0x12
    203a:	4b 89       	ldd	r20, Y+19	; 0x13
    203c:	5c 89       	ldd	r21, Y+20	; 0x14
    203e:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    2042:	9b 01       	movw	r18, r22
    2044:	ac 01       	movw	r20, r24
    2046:	c8 01       	movw	r24, r16
    2048:	b7 01       	movw	r22, r14
    204a:	0e 94 89 1c 	call	0x3912	; 0x3912 <__addsf3>
    204e:	7b 01       	movw	r14, r22
    2050:	8c 01       	movw	r16, r24
    2052:	c5 57       	subi	r28, 0x75	; 117
    2054:	df 4f       	sbci	r29, 0xFF	; 255
    2056:	68 81       	ld	r22, Y
    2058:	79 81       	ldd	r23, Y+1	; 0x01
    205a:	8a 81       	ldd	r24, Y+2	; 0x02
    205c:	9b 81       	ldd	r25, Y+3	; 0x03
    205e:	cb 58       	subi	r28, 0x8B	; 139
    2060:	d0 40       	sbci	r29, 0x00	; 0
    2062:	29 89       	ldd	r18, Y+17	; 0x11
    2064:	3a 89       	ldd	r19, Y+18	; 0x12
    2066:	4b 89       	ldd	r20, Y+19	; 0x13
    2068:	5c 89       	ldd	r21, Y+20	; 0x14
    206a:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    206e:	9b 01       	movw	r18, r22
    2070:	ac 01       	movw	r20, r24
    2072:	c8 01       	movw	r24, r16
    2074:	b7 01       	movw	r22, r14
    2076:	0e 94 88 1c 	call	0x3910	; 0x3910 <__subsf3>
    207a:	29 81       	ldd	r18, Y+1	; 0x01
    207c:	3a 81       	ldd	r19, Y+2	; 0x02
    207e:	4b 81       	ldd	r20, Y+3	; 0x03
    2080:	5c 81       	ldd	r21, Y+4	; 0x04
    2082:	0e 94 f1 1c 	call	0x39e2	; 0x39e2 <__divsf3>
    2086:	ad a9       	ldd	r26, Y+53	; 0x35
    2088:	be a9       	ldd	r27, Y+54	; 0x36
    208a:	50 96       	adiw	r26, 0x10	; 16
    208c:	6d 93       	st	X+, r22
    208e:	7d 93       	st	X+, r23
    2090:	8d 93       	st	X+, r24
    2092:	9c 93       	st	X, r25
    2094:	53 97       	sbiw	r26, 0x13	; 19
	   ANS[1][1]=TA[1][1];
    2096:	67 96       	adiw	r28, 0x17	; 23
    2098:	6c ad       	ldd	r22, Y+60	; 0x3c
    209a:	7d ad       	ldd	r23, Y+61	; 0x3d
    209c:	8e ad       	ldd	r24, Y+62	; 0x3e
    209e:	9f ad       	ldd	r25, Y+63	; 0x3f
    20a0:	67 97       	sbiw	r28, 0x17	; 23
    20a2:	29 85       	ldd	r18, Y+9	; 0x09
    20a4:	3a 85       	ldd	r19, Y+10	; 0x0a
    20a6:	4b 85       	ldd	r20, Y+11	; 0x0b
    20a8:	5c 85       	ldd	r21, Y+12	; 0x0c
    20aa:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    20ae:	7b 01       	movw	r14, r22
    20b0:	8c 01       	movw	r16, r24
    20b2:	63 96       	adiw	r28, 0x13	; 19
    20b4:	6c ad       	ldd	r22, Y+60	; 0x3c
    20b6:	7d ad       	ldd	r23, Y+61	; 0x3d
    20b8:	8e ad       	ldd	r24, Y+62	; 0x3e
    20ba:	9f ad       	ldd	r25, Y+63	; 0x3f
    20bc:	63 97       	sbiw	r28, 0x13	; 19
    20be:	29 85       	ldd	r18, Y+9	; 0x09
    20c0:	3a 85       	ldd	r19, Y+10	; 0x0a
    20c2:	4b 85       	ldd	r20, Y+11	; 0x0b
    20c4:	5c 85       	ldd	r21, Y+12	; 0x0c
    20c6:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    20ca:	9b 01       	movw	r18, r22
    20cc:	ac 01       	movw	r20, r24
    20ce:	c8 01       	movw	r24, r16
    20d0:	b7 01       	movw	r22, r14
    20d2:	0e 94 88 1c 	call	0x3910	; 0x3910 <__subsf3>
    20d6:	7b 01       	movw	r14, r22
    20d8:	8c 01       	movw	r16, r24
    20da:	c1 57       	subi	r28, 0x71	; 113
    20dc:	df 4f       	sbci	r29, 0xFF	; 255
    20de:	68 81       	ld	r22, Y
    20e0:	79 81       	ldd	r23, Y+1	; 0x01
    20e2:	8a 81       	ldd	r24, Y+2	; 0x02
    20e4:	9b 81       	ldd	r25, Y+3	; 0x03
    20e6:	cf 58       	subi	r28, 0x8F	; 143
    20e8:	d0 40       	sbci	r29, 0x00	; 0
    20ea:	29 8d       	ldd	r18, Y+25	; 0x19
    20ec:	3a 8d       	ldd	r19, Y+26	; 0x1a
    20ee:	4b 8d       	ldd	r20, Y+27	; 0x1b
    20f0:	5c 8d       	ldd	r21, Y+28	; 0x1c
    20f2:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    20f6:	9b 01       	movw	r18, r22
    20f8:	ac 01       	movw	r20, r24
    20fa:	c8 01       	movw	r24, r16
    20fc:	b7 01       	movw	r22, r14
    20fe:	0e 94 89 1c 	call	0x3912	; 0x3912 <__addsf3>
    2102:	7b 01       	movw	r14, r22
    2104:	8c 01       	movw	r16, r24
    2106:	cd 56       	subi	r28, 0x6D	; 109
    2108:	df 4f       	sbci	r29, 0xFF	; 255
    210a:	68 81       	ld	r22, Y
    210c:	79 81       	ldd	r23, Y+1	; 0x01
    210e:	8a 81       	ldd	r24, Y+2	; 0x02
    2110:	9b 81       	ldd	r25, Y+3	; 0x03
    2112:	c3 59       	subi	r28, 0x93	; 147
    2114:	d0 40       	sbci	r29, 0x00	; 0
    2116:	29 8d       	ldd	r18, Y+25	; 0x19
    2118:	3a 8d       	ldd	r19, Y+26	; 0x1a
    211a:	4b 8d       	ldd	r20, Y+27	; 0x1b
    211c:	5c 8d       	ldd	r21, Y+28	; 0x1c
    211e:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    2122:	9b 01       	movw	r18, r22
    2124:	ac 01       	movw	r20, r24
    2126:	c8 01       	movw	r24, r16
    2128:	b7 01       	movw	r22, r14
    212a:	0e 94 88 1c 	call	0x3910	; 0x3910 <__subsf3>
    212e:	7b 01       	movw	r14, r22
    2130:	8c 01       	movw	r16, r24
    2132:	c9 56       	subi	r28, 0x69	; 105
    2134:	df 4f       	sbci	r29, 0xFF	; 255
    2136:	68 81       	ld	r22, Y
    2138:	79 81       	ldd	r23, Y+1	; 0x01
    213a:	8a 81       	ldd	r24, Y+2	; 0x02
    213c:	9b 81       	ldd	r25, Y+3	; 0x03
    213e:	c7 59       	subi	r28, 0x97	; 151
    2140:	d0 40       	sbci	r29, 0x00	; 0
    2142:	29 89       	ldd	r18, Y+17	; 0x11
    2144:	3a 89       	ldd	r19, Y+18	; 0x12
    2146:	4b 89       	ldd	r20, Y+19	; 0x13
    2148:	5c 89       	ldd	r21, Y+20	; 0x14
    214a:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    214e:	9b 01       	movw	r18, r22
    2150:	ac 01       	movw	r20, r24
    2152:	c8 01       	movw	r24, r16
    2154:	b7 01       	movw	r22, r14
    2156:	0e 94 88 1c 	call	0x3910	; 0x3910 <__subsf3>
    215a:	7b 01       	movw	r14, r22
    215c:	8c 01       	movw	r16, r24
    215e:	c5 56       	subi	r28, 0x65	; 101
    2160:	df 4f       	sbci	r29, 0xFF	; 255
    2162:	68 81       	ld	r22, Y
    2164:	79 81       	ldd	r23, Y+1	; 0x01
    2166:	8a 81       	ldd	r24, Y+2	; 0x02
    2168:	9b 81       	ldd	r25, Y+3	; 0x03
    216a:	cb 59       	subi	r28, 0x9B	; 155
    216c:	d0 40       	sbci	r29, 0x00	; 0
    216e:	29 89       	ldd	r18, Y+17	; 0x11
    2170:	3a 89       	ldd	r19, Y+18	; 0x12
    2172:	4b 89       	ldd	r20, Y+19	; 0x13
    2174:	5c 89       	ldd	r21, Y+20	; 0x14
    2176:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    217a:	9b 01       	movw	r18, r22
    217c:	ac 01       	movw	r20, r24
    217e:	c8 01       	movw	r24, r16
    2180:	b7 01       	movw	r22, r14
    2182:	0e 94 89 1c 	call	0x3912	; 0x3912 <__addsf3>
    2186:	29 81       	ldd	r18, Y+1	; 0x01
    2188:	3a 81       	ldd	r19, Y+2	; 0x02
    218a:	4b 81       	ldd	r20, Y+3	; 0x03
    218c:	5c 81       	ldd	r21, Y+4	; 0x04
    218e:	0e 94 f1 1c 	call	0x39e2	; 0x39e2 <__divsf3>
    2192:	f6 01       	movw	r30, r12
    2194:	64 83       	std	Z+4, r22	; 0x04
    2196:	75 83       	std	Z+5, r23	; 0x05
    2198:	86 83       	std	Z+6, r24	; 0x06
    219a:	97 83       	std	Z+7, r25	; 0x07
	   ANS[1][2]=TA[1][2];
    219c:	af 96       	adiw	r28, 0x2f	; 47
    219e:	6c ad       	ldd	r22, Y+60	; 0x3c
    21a0:	7d ad       	ldd	r23, Y+61	; 0x3d
    21a2:	8e ad       	ldd	r24, Y+62	; 0x3e
    21a4:	9f ad       	ldd	r25, Y+63	; 0x3f
    21a6:	af 97       	sbiw	r28, 0x2f	; 47
    21a8:	29 85       	ldd	r18, Y+9	; 0x09
    21aa:	3a 85       	ldd	r19, Y+10	; 0x0a
    21ac:	4b 85       	ldd	r20, Y+11	; 0x0b
    21ae:	5c 85       	ldd	r21, Y+12	; 0x0c
    21b0:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    21b4:	7b 01       	movw	r14, r22
    21b6:	8c 01       	movw	r16, r24
    21b8:	ab 96       	adiw	r28, 0x2b	; 43
    21ba:	6c ad       	ldd	r22, Y+60	; 0x3c
    21bc:	7d ad       	ldd	r23, Y+61	; 0x3d
    21be:	8e ad       	ldd	r24, Y+62	; 0x3e
    21c0:	9f ad       	ldd	r25, Y+63	; 0x3f
    21c2:	ab 97       	sbiw	r28, 0x2b	; 43
    21c4:	29 85       	ldd	r18, Y+9	; 0x09
    21c6:	3a 85       	ldd	r19, Y+10	; 0x0a
    21c8:	4b 85       	ldd	r20, Y+11	; 0x0b
    21ca:	5c 85       	ldd	r21, Y+12	; 0x0c
    21cc:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    21d0:	9b 01       	movw	r18, r22
    21d2:	ac 01       	movw	r20, r24
    21d4:	c8 01       	movw	r24, r16
    21d6:	b7 01       	movw	r22, r14
    21d8:	0e 94 88 1c 	call	0x3910	; 0x3910 <__subsf3>
    21dc:	7b 01       	movw	r14, r22
    21de:	8c 01       	movw	r16, r24
    21e0:	c4 01       	movw	r24, r8
    21e2:	b3 01       	movw	r22, r6
    21e4:	29 8d       	ldd	r18, Y+25	; 0x19
    21e6:	3a 8d       	ldd	r19, Y+26	; 0x1a
    21e8:	4b 8d       	ldd	r20, Y+27	; 0x1b
    21ea:	5c 8d       	ldd	r21, Y+28	; 0x1c
    21ec:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    21f0:	9b 01       	movw	r18, r22
    21f2:	ac 01       	movw	r20, r24
    21f4:	c8 01       	movw	r24, r16
    21f6:	b7 01       	movw	r22, r14
    21f8:	0e 94 88 1c 	call	0x3910	; 0x3910 <__subsf3>
    21fc:	7b 01       	movw	r14, r22
    21fe:	8c 01       	movw	r16, r24
    2200:	c1 56       	subi	r28, 0x61	; 97
    2202:	df 4f       	sbci	r29, 0xFF	; 255
    2204:	68 81       	ld	r22, Y
    2206:	79 81       	ldd	r23, Y+1	; 0x01
    2208:	8a 81       	ldd	r24, Y+2	; 0x02
    220a:	9b 81       	ldd	r25, Y+3	; 0x03
    220c:	cf 59       	subi	r28, 0x9F	; 159
    220e:	d0 40       	sbci	r29, 0x00	; 0
    2210:	29 8d       	ldd	r18, Y+25	; 0x19
    2212:	3a 8d       	ldd	r19, Y+26	; 0x1a
    2214:	4b 8d       	ldd	r20, Y+27	; 0x1b
    2216:	5c 8d       	ldd	r21, Y+28	; 0x1c
    2218:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    221c:	9b 01       	movw	r18, r22
    221e:	ac 01       	movw	r20, r24
    2220:	c8 01       	movw	r24, r16
    2222:	b7 01       	movw	r22, r14
    2224:	0e 94 89 1c 	call	0x3912	; 0x3912 <__addsf3>
    2228:	7b 01       	movw	r14, r22
    222a:	8c 01       	movw	r16, r24
    222c:	cd 55       	subi	r28, 0x5D	; 93
    222e:	df 4f       	sbci	r29, 0xFF	; 255
    2230:	68 81       	ld	r22, Y
    2232:	79 81       	ldd	r23, Y+1	; 0x01
    2234:	8a 81       	ldd	r24, Y+2	; 0x02
    2236:	9b 81       	ldd	r25, Y+3	; 0x03
    2238:	c3 5a       	subi	r28, 0xA3	; 163
    223a:	d0 40       	sbci	r29, 0x00	; 0
    223c:	29 89       	ldd	r18, Y+17	; 0x11
    223e:	3a 89       	ldd	r19, Y+18	; 0x12
    2240:	4b 89       	ldd	r20, Y+19	; 0x13
    2242:	5c 89       	ldd	r21, Y+20	; 0x14
    2244:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    2248:	9b 01       	movw	r18, r22
    224a:	ac 01       	movw	r20, r24
    224c:	c8 01       	movw	r24, r16
    224e:	b7 01       	movw	r22, r14
    2250:	0e 94 89 1c 	call	0x3912	; 0x3912 <__addsf3>
    2254:	7b 01       	movw	r14, r22
    2256:	8c 01       	movw	r16, r24
    2258:	c9 55       	subi	r28, 0x59	; 89
    225a:	df 4f       	sbci	r29, 0xFF	; 255
    225c:	68 81       	ld	r22, Y
    225e:	79 81       	ldd	r23, Y+1	; 0x01
    2260:	8a 81       	ldd	r24, Y+2	; 0x02
    2262:	9b 81       	ldd	r25, Y+3	; 0x03
    2264:	c7 5a       	subi	r28, 0xA7	; 167
    2266:	d0 40       	sbci	r29, 0x00	; 0
    2268:	29 89       	ldd	r18, Y+17	; 0x11
    226a:	3a 89       	ldd	r19, Y+18	; 0x12
    226c:	4b 89       	ldd	r20, Y+19	; 0x13
    226e:	5c 89       	ldd	r21, Y+20	; 0x14
    2270:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    2274:	9b 01       	movw	r18, r22
    2276:	ac 01       	movw	r20, r24
    2278:	c8 01       	movw	r24, r16
    227a:	b7 01       	movw	r22, r14
    227c:	0e 94 88 1c 	call	0x3910	; 0x3910 <__subsf3>
    2280:	29 81       	ldd	r18, Y+1	; 0x01
    2282:	3a 81       	ldd	r19, Y+2	; 0x02
    2284:	4b 81       	ldd	r20, Y+3	; 0x03
    2286:	5c 81       	ldd	r21, Y+4	; 0x04
    2288:	0e 94 f1 1c 	call	0x39e2	; 0x39e2 <__divsf3>
    228c:	d6 01       	movw	r26, r12
    228e:	18 96       	adiw	r26, 0x08	; 8
    2290:	6d 93       	st	X+, r22
    2292:	7d 93       	st	X+, r23
    2294:	8d 93       	st	X+, r24
    2296:	9c 93       	st	X, r25
    2298:	1b 97       	sbiw	r26, 0x0b	; 11
	   ANS[1][3]=TA[1][3];
    229a:	ab 96       	adiw	r28, 0x2b	; 43
    229c:	6c ad       	ldd	r22, Y+60	; 0x3c
    229e:	7d ad       	ldd	r23, Y+61	; 0x3d
    22a0:	8e ad       	ldd	r24, Y+62	; 0x3e
    22a2:	9f ad       	ldd	r25, Y+63	; 0x3f
    22a4:	ab 97       	sbiw	r28, 0x2b	; 43
    22a6:	2d 81       	ldd	r18, Y+5	; 0x05
    22a8:	3e 81       	ldd	r19, Y+6	; 0x06
    22aa:	4f 81       	ldd	r20, Y+7	; 0x07
    22ac:	58 85       	ldd	r21, Y+8	; 0x08
    22ae:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    22b2:	7b 01       	movw	r14, r22
    22b4:	8c 01       	movw	r16, r24
    22b6:	af 96       	adiw	r28, 0x2f	; 47
    22b8:	6c ad       	ldd	r22, Y+60	; 0x3c
    22ba:	7d ad       	ldd	r23, Y+61	; 0x3d
    22bc:	8e ad       	ldd	r24, Y+62	; 0x3e
    22be:	9f ad       	ldd	r25, Y+63	; 0x3f
    22c0:	af 97       	sbiw	r28, 0x2f	; 47
    22c2:	2d 81       	ldd	r18, Y+5	; 0x05
    22c4:	3e 81       	ldd	r19, Y+6	; 0x06
    22c6:	4f 81       	ldd	r20, Y+7	; 0x07
    22c8:	58 85       	ldd	r21, Y+8	; 0x08
    22ca:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    22ce:	9b 01       	movw	r18, r22
    22d0:	ac 01       	movw	r20, r24
    22d2:	c8 01       	movw	r24, r16
    22d4:	b7 01       	movw	r22, r14
    22d6:	0e 94 88 1c 	call	0x3910	; 0x3910 <__subsf3>
    22da:	7b 01       	movw	r14, r22
    22dc:	8c 01       	movw	r16, r24
    22de:	c4 01       	movw	r24, r8
    22e0:	b3 01       	movw	r22, r6
    22e2:	29 a1       	ldd	r18, Y+33	; 0x21
    22e4:	3a a1       	ldd	r19, Y+34	; 0x22
    22e6:	4b a1       	ldd	r20, Y+35	; 0x23
    22e8:	5c a1       	ldd	r21, Y+36	; 0x24
    22ea:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    22ee:	9b 01       	movw	r18, r22
    22f0:	ac 01       	movw	r20, r24
    22f2:	c8 01       	movw	r24, r16
    22f4:	b7 01       	movw	r22, r14
    22f6:	0e 94 89 1c 	call	0x3912	; 0x3912 <__addsf3>
    22fa:	7b 01       	movw	r14, r22
    22fc:	8c 01       	movw	r16, r24
    22fe:	c1 56       	subi	r28, 0x61	; 97
    2300:	df 4f       	sbci	r29, 0xFF	; 255
    2302:	68 81       	ld	r22, Y
    2304:	79 81       	ldd	r23, Y+1	; 0x01
    2306:	8a 81       	ldd	r24, Y+2	; 0x02
    2308:	9b 81       	ldd	r25, Y+3	; 0x03
    230a:	cf 59       	subi	r28, 0x9F	; 159
    230c:	d0 40       	sbci	r29, 0x00	; 0
    230e:	29 a1       	ldd	r18, Y+33	; 0x21
    2310:	3a a1       	ldd	r19, Y+34	; 0x22
    2312:	4b a1       	ldd	r20, Y+35	; 0x23
    2314:	5c a1       	ldd	r21, Y+36	; 0x24
    2316:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    231a:	9b 01       	movw	r18, r22
    231c:	ac 01       	movw	r20, r24
    231e:	c8 01       	movw	r24, r16
    2320:	b7 01       	movw	r22, r14
    2322:	0e 94 88 1c 	call	0x3910	; 0x3910 <__subsf3>
    2326:	7b 01       	movw	r14, r22
    2328:	8c 01       	movw	r16, r24
    232a:	cd 55       	subi	r28, 0x5D	; 93
    232c:	df 4f       	sbci	r29, 0xFF	; 255
    232e:	68 81       	ld	r22, Y
    2330:	79 81       	ldd	r23, Y+1	; 0x01
    2332:	8a 81       	ldd	r24, Y+2	; 0x02
    2334:	9b 81       	ldd	r25, Y+3	; 0x03
    2336:	c3 5a       	subi	r28, 0xA3	; 163
    2338:	d0 40       	sbci	r29, 0x00	; 0
    233a:	2d a5       	ldd	r18, Y+45	; 0x2d
    233c:	3e a5       	ldd	r19, Y+46	; 0x2e
    233e:	4f a5       	ldd	r20, Y+47	; 0x2f
    2340:	58 a9       	ldd	r21, Y+48	; 0x30
    2342:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    2346:	9b 01       	movw	r18, r22
    2348:	ac 01       	movw	r20, r24
    234a:	c8 01       	movw	r24, r16
    234c:	b7 01       	movw	r22, r14
    234e:	0e 94 88 1c 	call	0x3910	; 0x3910 <__subsf3>
    2352:	7b 01       	movw	r14, r22
    2354:	8c 01       	movw	r16, r24
    2356:	c9 55       	subi	r28, 0x59	; 89
    2358:	df 4f       	sbci	r29, 0xFF	; 255
    235a:	68 81       	ld	r22, Y
    235c:	79 81       	ldd	r23, Y+1	; 0x01
    235e:	8a 81       	ldd	r24, Y+2	; 0x02
    2360:	9b 81       	ldd	r25, Y+3	; 0x03
    2362:	c7 5a       	subi	r28, 0xA7	; 167
    2364:	d0 40       	sbci	r29, 0x00	; 0
    2366:	2d a5       	ldd	r18, Y+45	; 0x2d
    2368:	3e a5       	ldd	r19, Y+46	; 0x2e
    236a:	4f a5       	ldd	r20, Y+47	; 0x2f
    236c:	58 a9       	ldd	r21, Y+48	; 0x30
    236e:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    2372:	9b 01       	movw	r18, r22
    2374:	ac 01       	movw	r20, r24
    2376:	c8 01       	movw	r24, r16
    2378:	b7 01       	movw	r22, r14
    237a:	0e 94 89 1c 	call	0x3912	; 0x3912 <__addsf3>
    237e:	29 81       	ldd	r18, Y+1	; 0x01
    2380:	3a 81       	ldd	r19, Y+2	; 0x02
    2382:	4b 81       	ldd	r20, Y+3	; 0x03
    2384:	5c 81       	ldd	r21, Y+4	; 0x04
    2386:	0e 94 f1 1c 	call	0x39e2	; 0x39e2 <__divsf3>
    238a:	f6 01       	movw	r30, r12
    238c:	64 87       	std	Z+12, r22	; 0x0c
    238e:	75 87       	std	Z+13, r23	; 0x0d
    2390:	86 87       	std	Z+14, r24	; 0x0e
    2392:	97 87       	std	Z+15, r25	; 0x0f
	   ANS[2][0]=TA[2][0];
    2394:	cd a8       	ldd	r12, Y+53	; 0x35
    2396:	de a8       	ldd	r13, Y+54	; 0x36
    2398:	80 e2       	ldi	r24, 0x20	; 32
    239a:	90 e0       	ldi	r25, 0x00	; 0
    239c:	c8 0e       	add	r12, r24
    239e:	d9 1e       	adc	r13, r25
    23a0:	27 96       	adiw	r28, 0x07	; 7
    23a2:	6c ad       	ldd	r22, Y+60	; 0x3c
    23a4:	7d ad       	ldd	r23, Y+61	; 0x3d
    23a6:	8e ad       	ldd	r24, Y+62	; 0x3e
    23a8:	9f ad       	ldd	r25, Y+63	; 0x3f
    23aa:	27 97       	sbiw	r28, 0x07	; 7
    23ac:	29 85       	ldd	r18, Y+9	; 0x09
    23ae:	3a 85       	ldd	r19, Y+10	; 0x0a
    23b0:	4b 85       	ldd	r20, Y+11	; 0x0b
    23b2:	5c 85       	ldd	r21, Y+12	; 0x0c
    23b4:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    23b8:	7b 01       	movw	r14, r22
    23ba:	8c 01       	movw	r16, r24
    23bc:	23 96       	adiw	r28, 0x03	; 3
    23be:	6c ad       	ldd	r22, Y+60	; 0x3c
    23c0:	7d ad       	ldd	r23, Y+61	; 0x3d
    23c2:	8e ad       	ldd	r24, Y+62	; 0x3e
    23c4:	9f ad       	ldd	r25, Y+63	; 0x3f
    23c6:	23 97       	sbiw	r28, 0x03	; 3
    23c8:	29 85       	ldd	r18, Y+9	; 0x09
    23ca:	3a 85       	ldd	r19, Y+10	; 0x0a
    23cc:	4b 85       	ldd	r20, Y+11	; 0x0b
    23ce:	5c 85       	ldd	r21, Y+12	; 0x0c
    23d0:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    23d4:	9b 01       	movw	r18, r22
    23d6:	ac 01       	movw	r20, r24
    23d8:	c8 01       	movw	r24, r16
    23da:	b7 01       	movw	r22, r14
    23dc:	0e 94 88 1c 	call	0x3910	; 0x3910 <__subsf3>
    23e0:	7b 01       	movw	r14, r22
    23e2:	8c 01       	movw	r16, r24
    23e4:	c1 58       	subi	r28, 0x81	; 129
    23e6:	df 4f       	sbci	r29, 0xFF	; 255
    23e8:	68 81       	ld	r22, Y
    23ea:	79 81       	ldd	r23, Y+1	; 0x01
    23ec:	8a 81       	ldd	r24, Y+2	; 0x02
    23ee:	9b 81       	ldd	r25, Y+3	; 0x03
    23f0:	cf 57       	subi	r28, 0x7F	; 127
    23f2:	d0 40       	sbci	r29, 0x00	; 0
    23f4:	29 a5       	ldd	r18, Y+41	; 0x29
    23f6:	3a a5       	ldd	r19, Y+42	; 0x2a
    23f8:	4b a5       	ldd	r20, Y+43	; 0x2b
    23fa:	5c a5       	ldd	r21, Y+44	; 0x2c
    23fc:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    2400:	9b 01       	movw	r18, r22
    2402:	ac 01       	movw	r20, r24
    2404:	c8 01       	movw	r24, r16
    2406:	b7 01       	movw	r22, r14
    2408:	0e 94 89 1c 	call	0x3912	; 0x3912 <__addsf3>
    240c:	7b 01       	movw	r14, r22
    240e:	8c 01       	movw	r16, r24
    2410:	cd 57       	subi	r28, 0x7D	; 125
    2412:	df 4f       	sbci	r29, 0xFF	; 255
    2414:	68 81       	ld	r22, Y
    2416:	79 81       	ldd	r23, Y+1	; 0x01
    2418:	8a 81       	ldd	r24, Y+2	; 0x02
    241a:	9b 81       	ldd	r25, Y+3	; 0x03
    241c:	c3 58       	subi	r28, 0x83	; 131
    241e:	d0 40       	sbci	r29, 0x00	; 0
    2420:	29 a5       	ldd	r18, Y+41	; 0x29
    2422:	3a a5       	ldd	r19, Y+42	; 0x2a
    2424:	4b a5       	ldd	r20, Y+43	; 0x2b
    2426:	5c a5       	ldd	r21, Y+44	; 0x2c
    2428:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    242c:	9b 01       	movw	r18, r22
    242e:	ac 01       	movw	r20, r24
    2430:	c8 01       	movw	r24, r16
    2432:	b7 01       	movw	r22, r14
    2434:	0e 94 88 1c 	call	0x3910	; 0x3910 <__subsf3>
    2438:	7b 01       	movw	r14, r22
    243a:	8c 01       	movw	r16, r24
    243c:	c5 55       	subi	r28, 0x55	; 85
    243e:	df 4f       	sbci	r29, 0xFF	; 255
    2440:	68 81       	ld	r22, Y
    2442:	79 81       	ldd	r23, Y+1	; 0x01
    2444:	8a 81       	ldd	r24, Y+2	; 0x02
    2446:	9b 81       	ldd	r25, Y+3	; 0x03
    2448:	cb 5a       	subi	r28, 0xAB	; 171
    244a:	d0 40       	sbci	r29, 0x00	; 0
    244c:	29 89       	ldd	r18, Y+17	; 0x11
    244e:	3a 89       	ldd	r19, Y+18	; 0x12
    2450:	4b 89       	ldd	r20, Y+19	; 0x13
    2452:	5c 89       	ldd	r21, Y+20	; 0x14
    2454:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    2458:	9b 01       	movw	r18, r22
    245a:	ac 01       	movw	r20, r24
    245c:	c8 01       	movw	r24, r16
    245e:	b7 01       	movw	r22, r14
    2460:	0e 94 88 1c 	call	0x3910	; 0x3910 <__subsf3>
    2464:	7b 01       	movw	r14, r22
    2466:	8c 01       	movw	r16, r24
    2468:	c1 55       	subi	r28, 0x51	; 81
    246a:	df 4f       	sbci	r29, 0xFF	; 255
    246c:	68 81       	ld	r22, Y
    246e:	79 81       	ldd	r23, Y+1	; 0x01
    2470:	8a 81       	ldd	r24, Y+2	; 0x02
    2472:	9b 81       	ldd	r25, Y+3	; 0x03
    2474:	cf 5a       	subi	r28, 0xAF	; 175
    2476:	d0 40       	sbci	r29, 0x00	; 0
    2478:	29 89       	ldd	r18, Y+17	; 0x11
    247a:	3a 89       	ldd	r19, Y+18	; 0x12
    247c:	4b 89       	ldd	r20, Y+19	; 0x13
    247e:	5c 89       	ldd	r21, Y+20	; 0x14
    2480:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    2484:	9b 01       	movw	r18, r22
    2486:	ac 01       	movw	r20, r24
    2488:	c8 01       	movw	r24, r16
    248a:	b7 01       	movw	r22, r14
    248c:	0e 94 89 1c 	call	0x3912	; 0x3912 <__addsf3>
    2490:	29 81       	ldd	r18, Y+1	; 0x01
    2492:	3a 81       	ldd	r19, Y+2	; 0x02
    2494:	4b 81       	ldd	r20, Y+3	; 0x03
    2496:	5c 81       	ldd	r21, Y+4	; 0x04
    2498:	0e 94 f1 1c 	call	0x39e2	; 0x39e2 <__divsf3>
    249c:	ad a9       	ldd	r26, Y+53	; 0x35
    249e:	be a9       	ldd	r27, Y+54	; 0x36
    24a0:	90 96       	adiw	r26, 0x20	; 32
    24a2:	6d 93       	st	X+, r22
    24a4:	7d 93       	st	X+, r23
    24a6:	8d 93       	st	X+, r24
    24a8:	9c 93       	st	X, r25
    24aa:	93 97       	sbiw	r26, 0x23	; 35
	   ANS[2][1]=TA[2][1];
    24ac:	6b 96       	adiw	r28, 0x1b	; 27
    24ae:	6c ad       	ldd	r22, Y+60	; 0x3c
    24b0:	7d ad       	ldd	r23, Y+61	; 0x3d
    24b2:	8e ad       	ldd	r24, Y+62	; 0x3e
    24b4:	9f ad       	ldd	r25, Y+63	; 0x3f
    24b6:	6b 97       	sbiw	r28, 0x1b	; 27
    24b8:	29 85       	ldd	r18, Y+9	; 0x09
    24ba:	3a 85       	ldd	r19, Y+10	; 0x0a
    24bc:	4b 85       	ldd	r20, Y+11	; 0x0b
    24be:	5c 85       	ldd	r21, Y+12	; 0x0c
    24c0:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    24c4:	7b 01       	movw	r14, r22
    24c6:	8c 01       	movw	r16, r24
    24c8:	6f 96       	adiw	r28, 0x1f	; 31
    24ca:	6c ad       	ldd	r22, Y+60	; 0x3c
    24cc:	7d ad       	ldd	r23, Y+61	; 0x3d
    24ce:	8e ad       	ldd	r24, Y+62	; 0x3e
    24d0:	9f ad       	ldd	r25, Y+63	; 0x3f
    24d2:	6f 97       	sbiw	r28, 0x1f	; 31
    24d4:	29 85       	ldd	r18, Y+9	; 0x09
    24d6:	3a 85       	ldd	r19, Y+10	; 0x0a
    24d8:	4b 85       	ldd	r20, Y+11	; 0x0b
    24da:	5c 85       	ldd	r21, Y+12	; 0x0c
    24dc:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    24e0:	9b 01       	movw	r18, r22
    24e2:	ac 01       	movw	r20, r24
    24e4:	c8 01       	movw	r24, r16
    24e6:	b7 01       	movw	r22, r14
    24e8:	0e 94 88 1c 	call	0x3910	; 0x3910 <__subsf3>
    24ec:	7b 01       	movw	r14, r22
    24ee:	8c 01       	movw	r16, r24
    24f0:	c1 57       	subi	r28, 0x71	; 113
    24f2:	df 4f       	sbci	r29, 0xFF	; 255
    24f4:	68 81       	ld	r22, Y
    24f6:	79 81       	ldd	r23, Y+1	; 0x01
    24f8:	8a 81       	ldd	r24, Y+2	; 0x02
    24fa:	9b 81       	ldd	r25, Y+3	; 0x03
    24fc:	cf 58       	subi	r28, 0x8F	; 143
    24fe:	d0 40       	sbci	r29, 0x00	; 0
    2500:	29 a5       	ldd	r18, Y+41	; 0x29
    2502:	3a a5       	ldd	r19, Y+42	; 0x2a
    2504:	4b a5       	ldd	r20, Y+43	; 0x2b
    2506:	5c a5       	ldd	r21, Y+44	; 0x2c
    2508:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    250c:	9b 01       	movw	r18, r22
    250e:	ac 01       	movw	r20, r24
    2510:	c8 01       	movw	r24, r16
    2512:	b7 01       	movw	r22, r14
    2514:	0e 94 88 1c 	call	0x3910	; 0x3910 <__subsf3>
    2518:	7b 01       	movw	r14, r22
    251a:	8c 01       	movw	r16, r24
    251c:	cd 56       	subi	r28, 0x6D	; 109
    251e:	df 4f       	sbci	r29, 0xFF	; 255
    2520:	68 81       	ld	r22, Y
    2522:	79 81       	ldd	r23, Y+1	; 0x01
    2524:	8a 81       	ldd	r24, Y+2	; 0x02
    2526:	9b 81       	ldd	r25, Y+3	; 0x03
    2528:	c3 59       	subi	r28, 0x93	; 147
    252a:	d0 40       	sbci	r29, 0x00	; 0
    252c:	29 a5       	ldd	r18, Y+41	; 0x29
    252e:	3a a5       	ldd	r19, Y+42	; 0x2a
    2530:	4b a5       	ldd	r20, Y+43	; 0x2b
    2532:	5c a5       	ldd	r21, Y+44	; 0x2c
    2534:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    2538:	9b 01       	movw	r18, r22
    253a:	ac 01       	movw	r20, r24
    253c:	c8 01       	movw	r24, r16
    253e:	b7 01       	movw	r22, r14
    2540:	0e 94 89 1c 	call	0x3912	; 0x3912 <__addsf3>
    2544:	7b 01       	movw	r14, r22
    2546:	8c 01       	movw	r16, r24
    2548:	cd 54       	subi	r28, 0x4D	; 77
    254a:	df 4f       	sbci	r29, 0xFF	; 255
    254c:	68 81       	ld	r22, Y
    254e:	79 81       	ldd	r23, Y+1	; 0x01
    2550:	8a 81       	ldd	r24, Y+2	; 0x02
    2552:	9b 81       	ldd	r25, Y+3	; 0x03
    2554:	c3 5b       	subi	r28, 0xB3	; 179
    2556:	d0 40       	sbci	r29, 0x00	; 0
    2558:	29 89       	ldd	r18, Y+17	; 0x11
    255a:	3a 89       	ldd	r19, Y+18	; 0x12
    255c:	4b 89       	ldd	r20, Y+19	; 0x13
    255e:	5c 89       	ldd	r21, Y+20	; 0x14
    2560:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    2564:	9b 01       	movw	r18, r22
    2566:	ac 01       	movw	r20, r24
    2568:	c8 01       	movw	r24, r16
    256a:	b7 01       	movw	r22, r14
    256c:	0e 94 89 1c 	call	0x3912	; 0x3912 <__addsf3>
    2570:	7b 01       	movw	r14, r22
    2572:	8c 01       	movw	r16, r24
    2574:	c9 54       	subi	r28, 0x49	; 73
    2576:	df 4f       	sbci	r29, 0xFF	; 255
    2578:	68 81       	ld	r22, Y
    257a:	79 81       	ldd	r23, Y+1	; 0x01
    257c:	8a 81       	ldd	r24, Y+2	; 0x02
    257e:	9b 81       	ldd	r25, Y+3	; 0x03
    2580:	c7 5b       	subi	r28, 0xB7	; 183
    2582:	d0 40       	sbci	r29, 0x00	; 0
    2584:	29 89       	ldd	r18, Y+17	; 0x11
    2586:	3a 89       	ldd	r19, Y+18	; 0x12
    2588:	4b 89       	ldd	r20, Y+19	; 0x13
    258a:	5c 89       	ldd	r21, Y+20	; 0x14
    258c:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    2590:	9b 01       	movw	r18, r22
    2592:	ac 01       	movw	r20, r24
    2594:	c8 01       	movw	r24, r16
    2596:	b7 01       	movw	r22, r14
    2598:	0e 94 88 1c 	call	0x3910	; 0x3910 <__subsf3>
    259c:	29 81       	ldd	r18, Y+1	; 0x01
    259e:	3a 81       	ldd	r19, Y+2	; 0x02
    25a0:	4b 81       	ldd	r20, Y+3	; 0x03
    25a2:	5c 81       	ldd	r21, Y+4	; 0x04
    25a4:	0e 94 f1 1c 	call	0x39e2	; 0x39e2 <__divsf3>
    25a8:	f6 01       	movw	r30, r12
    25aa:	64 83       	std	Z+4, r22	; 0x04
    25ac:	75 83       	std	Z+5, r23	; 0x05
    25ae:	86 83       	std	Z+6, r24	; 0x06
    25b0:	97 83       	std	Z+7, r25	; 0x07
	   ANS[2][2]=TA[2][2];
    25b2:	e7 96       	adiw	r28, 0x37	; 55
    25b4:	6c ad       	ldd	r22, Y+60	; 0x3c
    25b6:	7d ad       	ldd	r23, Y+61	; 0x3d
    25b8:	8e ad       	ldd	r24, Y+62	; 0x3e
    25ba:	9f ad       	ldd	r25, Y+63	; 0x3f
    25bc:	e7 97       	sbiw	r28, 0x37	; 55
    25be:	29 85       	ldd	r18, Y+9	; 0x09
    25c0:	3a 85       	ldd	r19, Y+10	; 0x0a
    25c2:	4b 85       	ldd	r20, Y+11	; 0x0b
    25c4:	5c 85       	ldd	r21, Y+12	; 0x0c
    25c6:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    25ca:	7b 01       	movw	r14, r22
    25cc:	8c 01       	movw	r16, r24
    25ce:	e3 96       	adiw	r28, 0x33	; 51
    25d0:	6c ad       	ldd	r22, Y+60	; 0x3c
    25d2:	7d ad       	ldd	r23, Y+61	; 0x3d
    25d4:	8e ad       	ldd	r24, Y+62	; 0x3e
    25d6:	9f ad       	ldd	r25, Y+63	; 0x3f
    25d8:	e3 97       	sbiw	r28, 0x33	; 51
    25da:	29 85       	ldd	r18, Y+9	; 0x09
    25dc:	3a 85       	ldd	r19, Y+10	; 0x0a
    25de:	4b 85       	ldd	r20, Y+11	; 0x0b
    25e0:	5c 85       	ldd	r21, Y+12	; 0x0c
    25e2:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    25e6:	9b 01       	movw	r18, r22
    25e8:	ac 01       	movw	r20, r24
    25ea:	c8 01       	movw	r24, r16
    25ec:	b7 01       	movw	r22, r14
    25ee:	0e 94 88 1c 	call	0x3910	; 0x3910 <__subsf3>
    25f2:	7b 01       	movw	r14, r22
    25f4:	8c 01       	movw	r16, r24
    25f6:	c4 01       	movw	r24, r8
    25f8:	b3 01       	movw	r22, r6
    25fa:	29 a5       	ldd	r18, Y+41	; 0x29
    25fc:	3a a5       	ldd	r19, Y+42	; 0x2a
    25fe:	4b a5       	ldd	r20, Y+43	; 0x2b
    2600:	5c a5       	ldd	r21, Y+44	; 0x2c
    2602:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    2606:	9b 01       	movw	r18, r22
    2608:	ac 01       	movw	r20, r24
    260a:	c8 01       	movw	r24, r16
    260c:	b7 01       	movw	r22, r14
    260e:	0e 94 89 1c 	call	0x3912	; 0x3912 <__addsf3>
    2612:	7b 01       	movw	r14, r22
    2614:	8c 01       	movw	r16, r24
    2616:	c1 56       	subi	r28, 0x61	; 97
    2618:	df 4f       	sbci	r29, 0xFF	; 255
    261a:	68 81       	ld	r22, Y
    261c:	79 81       	ldd	r23, Y+1	; 0x01
    261e:	8a 81       	ldd	r24, Y+2	; 0x02
    2620:	9b 81       	ldd	r25, Y+3	; 0x03
    2622:	cf 59       	subi	r28, 0x9F	; 159
    2624:	d0 40       	sbci	r29, 0x00	; 0
    2626:	29 a5       	ldd	r18, Y+41	; 0x29
    2628:	3a a5       	ldd	r19, Y+42	; 0x2a
    262a:	4b a5       	ldd	r20, Y+43	; 0x2b
    262c:	5c a5       	ldd	r21, Y+44	; 0x2c
    262e:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    2632:	9b 01       	movw	r18, r22
    2634:	ac 01       	movw	r20, r24
    2636:	c8 01       	movw	r24, r16
    2638:	b7 01       	movw	r22, r14
    263a:	0e 94 88 1c 	call	0x3910	; 0x3910 <__subsf3>
    263e:	7b 01       	movw	r14, r22
    2640:	8c 01       	movw	r16, r24
    2642:	c2 01       	movw	r24, r4
    2644:	b1 01       	movw	r22, r2
    2646:	29 89       	ldd	r18, Y+17	; 0x11
    2648:	3a 89       	ldd	r19, Y+18	; 0x12
    264a:	4b 89       	ldd	r20, Y+19	; 0x13
    264c:	5c 89       	ldd	r21, Y+20	; 0x14
    264e:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    2652:	9b 01       	movw	r18, r22
    2654:	ac 01       	movw	r20, r24
    2656:	c8 01       	movw	r24, r16
    2658:	b7 01       	movw	r22, r14
    265a:	0e 94 88 1c 	call	0x3910	; 0x3910 <__subsf3>
    265e:	7b 01       	movw	r14, r22
    2660:	8c 01       	movw	r16, r24
    2662:	c5 54       	subi	r28, 0x45	; 69
    2664:	df 4f       	sbci	r29, 0xFF	; 255
    2666:	68 81       	ld	r22, Y
    2668:	79 81       	ldd	r23, Y+1	; 0x01
    266a:	8a 81       	ldd	r24, Y+2	; 0x02
    266c:	9b 81       	ldd	r25, Y+3	; 0x03
    266e:	cb 5b       	subi	r28, 0xBB	; 187
    2670:	d0 40       	sbci	r29, 0x00	; 0
    2672:	29 89       	ldd	r18, Y+17	; 0x11
    2674:	3a 89       	ldd	r19, Y+18	; 0x12
    2676:	4b 89       	ldd	r20, Y+19	; 0x13
    2678:	5c 89       	ldd	r21, Y+20	; 0x14
    267a:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    267e:	9b 01       	movw	r18, r22
    2680:	ac 01       	movw	r20, r24
    2682:	c8 01       	movw	r24, r16
    2684:	b7 01       	movw	r22, r14
    2686:	0e 94 89 1c 	call	0x3912	; 0x3912 <__addsf3>
    268a:	29 81       	ldd	r18, Y+1	; 0x01
    268c:	3a 81       	ldd	r19, Y+2	; 0x02
    268e:	4b 81       	ldd	r20, Y+3	; 0x03
    2690:	5c 81       	ldd	r21, Y+4	; 0x04
    2692:	0e 94 f1 1c 	call	0x39e2	; 0x39e2 <__divsf3>
    2696:	d6 01       	movw	r26, r12
    2698:	18 96       	adiw	r26, 0x08	; 8
    269a:	6d 93       	st	X+, r22
    269c:	7d 93       	st	X+, r23
    269e:	8d 93       	st	X+, r24
    26a0:	9c 93       	st	X, r25
    26a2:	1b 97       	sbiw	r26, 0x0b	; 11
	   ANS[2][3]=TA[2][3];
    26a4:	e3 96       	adiw	r28, 0x33	; 51
    26a6:	6c ad       	ldd	r22, Y+60	; 0x3c
    26a8:	7d ad       	ldd	r23, Y+61	; 0x3d
    26aa:	8e ad       	ldd	r24, Y+62	; 0x3e
    26ac:	9f ad       	ldd	r25, Y+63	; 0x3f
    26ae:	e3 97       	sbiw	r28, 0x33	; 51
    26b0:	2d 81       	ldd	r18, Y+5	; 0x05
    26b2:	3e 81       	ldd	r19, Y+6	; 0x06
    26b4:	4f 81       	ldd	r20, Y+7	; 0x07
    26b6:	58 85       	ldd	r21, Y+8	; 0x08
    26b8:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    26bc:	7b 01       	movw	r14, r22
    26be:	8c 01       	movw	r16, r24
    26c0:	e7 96       	adiw	r28, 0x37	; 55
    26c2:	6c ad       	ldd	r22, Y+60	; 0x3c
    26c4:	7d ad       	ldd	r23, Y+61	; 0x3d
    26c6:	8e ad       	ldd	r24, Y+62	; 0x3e
    26c8:	9f ad       	ldd	r25, Y+63	; 0x3f
    26ca:	e7 97       	sbiw	r28, 0x37	; 55
    26cc:	2d 81       	ldd	r18, Y+5	; 0x05
    26ce:	3e 81       	ldd	r19, Y+6	; 0x06
    26d0:	4f 81       	ldd	r20, Y+7	; 0x07
    26d2:	58 85       	ldd	r21, Y+8	; 0x08
    26d4:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    26d8:	9b 01       	movw	r18, r22
    26da:	ac 01       	movw	r20, r24
    26dc:	c8 01       	movw	r24, r16
    26de:	b7 01       	movw	r22, r14
    26e0:	0e 94 88 1c 	call	0x3910	; 0x3910 <__subsf3>
    26e4:	7b 01       	movw	r14, r22
    26e6:	8c 01       	movw	r16, r24
    26e8:	c4 01       	movw	r24, r8
    26ea:	b3 01       	movw	r22, r6
    26ec:	2d 8d       	ldd	r18, Y+29	; 0x1d
    26ee:	3e 8d       	ldd	r19, Y+30	; 0x1e
    26f0:	4f 8d       	ldd	r20, Y+31	; 0x1f
    26f2:	58 a1       	ldd	r21, Y+32	; 0x20
    26f4:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    26f8:	9b 01       	movw	r18, r22
    26fa:	ac 01       	movw	r20, r24
    26fc:	c8 01       	movw	r24, r16
    26fe:	b7 01       	movw	r22, r14
    2700:	0e 94 88 1c 	call	0x3910	; 0x3910 <__subsf3>
    2704:	7b 01       	movw	r14, r22
    2706:	8c 01       	movw	r16, r24
    2708:	c1 56       	subi	r28, 0x61	; 97
    270a:	df 4f       	sbci	r29, 0xFF	; 255
    270c:	68 81       	ld	r22, Y
    270e:	79 81       	ldd	r23, Y+1	; 0x01
    2710:	8a 81       	ldd	r24, Y+2	; 0x02
    2712:	9b 81       	ldd	r25, Y+3	; 0x03
    2714:	cf 59       	subi	r28, 0x9F	; 159
    2716:	d0 40       	sbci	r29, 0x00	; 0
    2718:	2d 8d       	ldd	r18, Y+29	; 0x1d
    271a:	3e 8d       	ldd	r19, Y+30	; 0x1e
    271c:	4f 8d       	ldd	r20, Y+31	; 0x1f
    271e:	58 a1       	ldd	r21, Y+32	; 0x20
    2720:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    2724:	9b 01       	movw	r18, r22
    2726:	ac 01       	movw	r20, r24
    2728:	c8 01       	movw	r24, r16
    272a:	b7 01       	movw	r22, r14
    272c:	0e 94 89 1c 	call	0x3912	; 0x3912 <__addsf3>
    2730:	7b 01       	movw	r14, r22
    2732:	8c 01       	movw	r16, r24
    2734:	c2 01       	movw	r24, r4
    2736:	b1 01       	movw	r22, r2
    2738:	2d a5       	ldd	r18, Y+45	; 0x2d
    273a:	3e a5       	ldd	r19, Y+46	; 0x2e
    273c:	4f a5       	ldd	r20, Y+47	; 0x2f
    273e:	58 a9       	ldd	r21, Y+48	; 0x30
    2740:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    2744:	9b 01       	movw	r18, r22
    2746:	ac 01       	movw	r20, r24
    2748:	c8 01       	movw	r24, r16
    274a:	b7 01       	movw	r22, r14
    274c:	0e 94 89 1c 	call	0x3912	; 0x3912 <__addsf3>
    2750:	7b 01       	movw	r14, r22
    2752:	8c 01       	movw	r16, r24
    2754:	c5 54       	subi	r28, 0x45	; 69
    2756:	df 4f       	sbci	r29, 0xFF	; 255
    2758:	68 81       	ld	r22, Y
    275a:	79 81       	ldd	r23, Y+1	; 0x01
    275c:	8a 81       	ldd	r24, Y+2	; 0x02
    275e:	9b 81       	ldd	r25, Y+3	; 0x03
    2760:	cb 5b       	subi	r28, 0xBB	; 187
    2762:	d0 40       	sbci	r29, 0x00	; 0
    2764:	2d a5       	ldd	r18, Y+45	; 0x2d
    2766:	3e a5       	ldd	r19, Y+46	; 0x2e
    2768:	4f a5       	ldd	r20, Y+47	; 0x2f
    276a:	58 a9       	ldd	r21, Y+48	; 0x30
    276c:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    2770:	9b 01       	movw	r18, r22
    2772:	ac 01       	movw	r20, r24
    2774:	c8 01       	movw	r24, r16
    2776:	b7 01       	movw	r22, r14
    2778:	0e 94 88 1c 	call	0x3910	; 0x3910 <__subsf3>
    277c:	29 81       	ldd	r18, Y+1	; 0x01
    277e:	3a 81       	ldd	r19, Y+2	; 0x02
    2780:	4b 81       	ldd	r20, Y+3	; 0x03
    2782:	5c 81       	ldd	r21, Y+4	; 0x04
    2784:	0e 94 f1 1c 	call	0x39e2	; 0x39e2 <__divsf3>
    2788:	f6 01       	movw	r30, r12
    278a:	64 87       	std	Z+12, r22	; 0x0c
    278c:	75 87       	std	Z+13, r23	; 0x0d
    278e:	86 87       	std	Z+14, r24	; 0x0e
    2790:	97 87       	std	Z+15, r25	; 0x0f
	   ANS[3][0]=TA[3][0];
    2792:	cd a8       	ldd	r12, Y+53	; 0x35
    2794:	de a8       	ldd	r13, Y+54	; 0x36
    2796:	80 e3       	ldi	r24, 0x30	; 48
    2798:	90 e0       	ldi	r25, 0x00	; 0
    279a:	c8 0e       	add	r12, r24
    279c:	d9 1e       	adc	r13, r25
    279e:	2b 96       	adiw	r28, 0x0b	; 11
    27a0:	6c ad       	ldd	r22, Y+60	; 0x3c
    27a2:	7d ad       	ldd	r23, Y+61	; 0x3d
    27a4:	8e ad       	ldd	r24, Y+62	; 0x3e
    27a6:	9f ad       	ldd	r25, Y+63	; 0x3f
    27a8:	2b 97       	sbiw	r28, 0x0b	; 11
    27aa:	29 85       	ldd	r18, Y+9	; 0x09
    27ac:	3a 85       	ldd	r19, Y+10	; 0x0a
    27ae:	4b 85       	ldd	r20, Y+11	; 0x0b
    27b0:	5c 85       	ldd	r21, Y+12	; 0x0c
    27b2:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    27b6:	7b 01       	movw	r14, r22
    27b8:	8c 01       	movw	r16, r24
    27ba:	2f 96       	adiw	r28, 0x0f	; 15
    27bc:	6c ad       	ldd	r22, Y+60	; 0x3c
    27be:	7d ad       	ldd	r23, Y+61	; 0x3d
    27c0:	8e ad       	ldd	r24, Y+62	; 0x3e
    27c2:	9f ad       	ldd	r25, Y+63	; 0x3f
    27c4:	2f 97       	sbiw	r28, 0x0f	; 15
    27c6:	29 85       	ldd	r18, Y+9	; 0x09
    27c8:	3a 85       	ldd	r19, Y+10	; 0x0a
    27ca:	4b 85       	ldd	r20, Y+11	; 0x0b
    27cc:	5c 85       	ldd	r21, Y+12	; 0x0c
    27ce:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    27d2:	9b 01       	movw	r18, r22
    27d4:	ac 01       	movw	r20, r24
    27d6:	c8 01       	movw	r24, r16
    27d8:	b7 01       	movw	r22, r14
    27da:	0e 94 88 1c 	call	0x3910	; 0x3910 <__subsf3>
    27de:	7b 01       	movw	r14, r22
    27e0:	8c 01       	movw	r16, r24
    27e2:	c9 57       	subi	r28, 0x79	; 121
    27e4:	df 4f       	sbci	r29, 0xFF	; 255
    27e6:	68 81       	ld	r22, Y
    27e8:	79 81       	ldd	r23, Y+1	; 0x01
    27ea:	8a 81       	ldd	r24, Y+2	; 0x02
    27ec:	9b 81       	ldd	r25, Y+3	; 0x03
    27ee:	c7 58       	subi	r28, 0x87	; 135
    27f0:	d0 40       	sbci	r29, 0x00	; 0
    27f2:	29 a5       	ldd	r18, Y+41	; 0x29
    27f4:	3a a5       	ldd	r19, Y+42	; 0x2a
    27f6:	4b a5       	ldd	r20, Y+43	; 0x2b
    27f8:	5c a5       	ldd	r21, Y+44	; 0x2c
    27fa:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    27fe:	9b 01       	movw	r18, r22
    2800:	ac 01       	movw	r20, r24
    2802:	c8 01       	movw	r24, r16
    2804:	b7 01       	movw	r22, r14
    2806:	0e 94 88 1c 	call	0x3910	; 0x3910 <__subsf3>
    280a:	7b 01       	movw	r14, r22
    280c:	8c 01       	movw	r16, r24
    280e:	c5 57       	subi	r28, 0x75	; 117
    2810:	df 4f       	sbci	r29, 0xFF	; 255
    2812:	68 81       	ld	r22, Y
    2814:	79 81       	ldd	r23, Y+1	; 0x01
    2816:	8a 81       	ldd	r24, Y+2	; 0x02
    2818:	9b 81       	ldd	r25, Y+3	; 0x03
    281a:	cb 58       	subi	r28, 0x8B	; 139
    281c:	d0 40       	sbci	r29, 0x00	; 0
    281e:	29 a5       	ldd	r18, Y+41	; 0x29
    2820:	3a a5       	ldd	r19, Y+42	; 0x2a
    2822:	4b a5       	ldd	r20, Y+43	; 0x2b
    2824:	5c a5       	ldd	r21, Y+44	; 0x2c
    2826:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    282a:	9b 01       	movw	r18, r22
    282c:	ac 01       	movw	r20, r24
    282e:	c8 01       	movw	r24, r16
    2830:	b7 01       	movw	r22, r14
    2832:	0e 94 89 1c 	call	0x3912	; 0x3912 <__addsf3>
    2836:	7b 01       	movw	r14, r22
    2838:	8c 01       	movw	r16, r24
    283a:	c5 55       	subi	r28, 0x55	; 85
    283c:	df 4f       	sbci	r29, 0xFF	; 255
    283e:	68 81       	ld	r22, Y
    2840:	79 81       	ldd	r23, Y+1	; 0x01
    2842:	8a 81       	ldd	r24, Y+2	; 0x02
    2844:	9b 81       	ldd	r25, Y+3	; 0x03
    2846:	cb 5a       	subi	r28, 0xAB	; 171
    2848:	d0 40       	sbci	r29, 0x00	; 0
    284a:	29 8d       	ldd	r18, Y+25	; 0x19
    284c:	3a 8d       	ldd	r19, Y+26	; 0x1a
    284e:	4b 8d       	ldd	r20, Y+27	; 0x1b
    2850:	5c 8d       	ldd	r21, Y+28	; 0x1c
    2852:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    2856:	9b 01       	movw	r18, r22
    2858:	ac 01       	movw	r20, r24
    285a:	c8 01       	movw	r24, r16
    285c:	b7 01       	movw	r22, r14
    285e:	0e 94 89 1c 	call	0x3912	; 0x3912 <__addsf3>
    2862:	7b 01       	movw	r14, r22
    2864:	8c 01       	movw	r16, r24
    2866:	c1 55       	subi	r28, 0x51	; 81
    2868:	df 4f       	sbci	r29, 0xFF	; 255
    286a:	68 81       	ld	r22, Y
    286c:	79 81       	ldd	r23, Y+1	; 0x01
    286e:	8a 81       	ldd	r24, Y+2	; 0x02
    2870:	9b 81       	ldd	r25, Y+3	; 0x03
    2872:	cf 5a       	subi	r28, 0xAF	; 175
    2874:	d0 40       	sbci	r29, 0x00	; 0
    2876:	29 8d       	ldd	r18, Y+25	; 0x19
    2878:	3a 8d       	ldd	r19, Y+26	; 0x1a
    287a:	4b 8d       	ldd	r20, Y+27	; 0x1b
    287c:	5c 8d       	ldd	r21, Y+28	; 0x1c
    287e:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    2882:	9b 01       	movw	r18, r22
    2884:	ac 01       	movw	r20, r24
    2886:	c8 01       	movw	r24, r16
    2888:	b7 01       	movw	r22, r14
    288a:	0e 94 88 1c 	call	0x3910	; 0x3910 <__subsf3>
    288e:	29 81       	ldd	r18, Y+1	; 0x01
    2890:	3a 81       	ldd	r19, Y+2	; 0x02
    2892:	4b 81       	ldd	r20, Y+3	; 0x03
    2894:	5c 81       	ldd	r21, Y+4	; 0x04
    2896:	0e 94 f1 1c 	call	0x39e2	; 0x39e2 <__divsf3>
    289a:	ad a9       	ldd	r26, Y+53	; 0x35
    289c:	be a9       	ldd	r27, Y+54	; 0x36
    289e:	d0 96       	adiw	r26, 0x30	; 48
    28a0:	6d 93       	st	X+, r22
    28a2:	7d 93       	st	X+, r23
    28a4:	8d 93       	st	X+, r24
    28a6:	9c 93       	st	X, r25
    28a8:	d3 97       	sbiw	r26, 0x33	; 51
	   ANS[3][1]=TA[3][1];
    28aa:	a7 96       	adiw	r28, 0x27	; 39
    28ac:	6c ad       	ldd	r22, Y+60	; 0x3c
    28ae:	7d ad       	ldd	r23, Y+61	; 0x3d
    28b0:	8e ad       	ldd	r24, Y+62	; 0x3e
    28b2:	9f ad       	ldd	r25, Y+63	; 0x3f
    28b4:	a7 97       	sbiw	r28, 0x27	; 39
    28b6:	29 85       	ldd	r18, Y+9	; 0x09
    28b8:	3a 85       	ldd	r19, Y+10	; 0x0a
    28ba:	4b 85       	ldd	r20, Y+11	; 0x0b
    28bc:	5c 85       	ldd	r21, Y+12	; 0x0c
    28be:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    28c2:	7b 01       	movw	r14, r22
    28c4:	8c 01       	movw	r16, r24
    28c6:	a3 96       	adiw	r28, 0x23	; 35
    28c8:	6c ad       	ldd	r22, Y+60	; 0x3c
    28ca:	7d ad       	ldd	r23, Y+61	; 0x3d
    28cc:	8e ad       	ldd	r24, Y+62	; 0x3e
    28ce:	9f ad       	ldd	r25, Y+63	; 0x3f
    28d0:	a3 97       	sbiw	r28, 0x23	; 35
    28d2:	29 85       	ldd	r18, Y+9	; 0x09
    28d4:	3a 85       	ldd	r19, Y+10	; 0x0a
    28d6:	4b 85       	ldd	r20, Y+11	; 0x0b
    28d8:	5c 85       	ldd	r21, Y+12	; 0x0c
    28da:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    28de:	9b 01       	movw	r18, r22
    28e0:	ac 01       	movw	r20, r24
    28e2:	c8 01       	movw	r24, r16
    28e4:	b7 01       	movw	r22, r14
    28e6:	0e 94 88 1c 	call	0x3910	; 0x3910 <__subsf3>
    28ea:	7b 01       	movw	r14, r22
    28ec:	8c 01       	movw	r16, r24
    28ee:	c9 56       	subi	r28, 0x69	; 105
    28f0:	df 4f       	sbci	r29, 0xFF	; 255
    28f2:	68 81       	ld	r22, Y
    28f4:	79 81       	ldd	r23, Y+1	; 0x01
    28f6:	8a 81       	ldd	r24, Y+2	; 0x02
    28f8:	9b 81       	ldd	r25, Y+3	; 0x03
    28fa:	c7 59       	subi	r28, 0x97	; 151
    28fc:	d0 40       	sbci	r29, 0x00	; 0
    28fe:	29 a5       	ldd	r18, Y+41	; 0x29
    2900:	3a a5       	ldd	r19, Y+42	; 0x2a
    2902:	4b a5       	ldd	r20, Y+43	; 0x2b
    2904:	5c a5       	ldd	r21, Y+44	; 0x2c
    2906:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    290a:	9b 01       	movw	r18, r22
    290c:	ac 01       	movw	r20, r24
    290e:	c8 01       	movw	r24, r16
    2910:	b7 01       	movw	r22, r14
    2912:	0e 94 89 1c 	call	0x3912	; 0x3912 <__addsf3>
    2916:	7b 01       	movw	r14, r22
    2918:	8c 01       	movw	r16, r24
    291a:	c5 56       	subi	r28, 0x65	; 101
    291c:	df 4f       	sbci	r29, 0xFF	; 255
    291e:	68 81       	ld	r22, Y
    2920:	79 81       	ldd	r23, Y+1	; 0x01
    2922:	8a 81       	ldd	r24, Y+2	; 0x02
    2924:	9b 81       	ldd	r25, Y+3	; 0x03
    2926:	cb 59       	subi	r28, 0x9B	; 155
    2928:	d0 40       	sbci	r29, 0x00	; 0
    292a:	29 a5       	ldd	r18, Y+41	; 0x29
    292c:	3a a5       	ldd	r19, Y+42	; 0x2a
    292e:	4b a5       	ldd	r20, Y+43	; 0x2b
    2930:	5c a5       	ldd	r21, Y+44	; 0x2c
    2932:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    2936:	9b 01       	movw	r18, r22
    2938:	ac 01       	movw	r20, r24
    293a:	c8 01       	movw	r24, r16
    293c:	b7 01       	movw	r22, r14
    293e:	0e 94 88 1c 	call	0x3910	; 0x3910 <__subsf3>
    2942:	7b 01       	movw	r14, r22
    2944:	8c 01       	movw	r16, r24
    2946:	cd 54       	subi	r28, 0x4D	; 77
    2948:	df 4f       	sbci	r29, 0xFF	; 255
    294a:	68 81       	ld	r22, Y
    294c:	79 81       	ldd	r23, Y+1	; 0x01
    294e:	8a 81       	ldd	r24, Y+2	; 0x02
    2950:	9b 81       	ldd	r25, Y+3	; 0x03
    2952:	c3 5b       	subi	r28, 0xB3	; 179
    2954:	d0 40       	sbci	r29, 0x00	; 0
    2956:	29 8d       	ldd	r18, Y+25	; 0x19
    2958:	3a 8d       	ldd	r19, Y+26	; 0x1a
    295a:	4b 8d       	ldd	r20, Y+27	; 0x1b
    295c:	5c 8d       	ldd	r21, Y+28	; 0x1c
    295e:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    2962:	9b 01       	movw	r18, r22
    2964:	ac 01       	movw	r20, r24
    2966:	c8 01       	movw	r24, r16
    2968:	b7 01       	movw	r22, r14
    296a:	0e 94 88 1c 	call	0x3910	; 0x3910 <__subsf3>
    296e:	7b 01       	movw	r14, r22
    2970:	8c 01       	movw	r16, r24
    2972:	c9 54       	subi	r28, 0x49	; 73
    2974:	df 4f       	sbci	r29, 0xFF	; 255
    2976:	68 81       	ld	r22, Y
    2978:	79 81       	ldd	r23, Y+1	; 0x01
    297a:	8a 81       	ldd	r24, Y+2	; 0x02
    297c:	9b 81       	ldd	r25, Y+3	; 0x03
    297e:	c7 5b       	subi	r28, 0xB7	; 183
    2980:	d0 40       	sbci	r29, 0x00	; 0
    2982:	29 8d       	ldd	r18, Y+25	; 0x19
    2984:	3a 8d       	ldd	r19, Y+26	; 0x1a
    2986:	4b 8d       	ldd	r20, Y+27	; 0x1b
    2988:	5c 8d       	ldd	r21, Y+28	; 0x1c
    298a:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    298e:	9b 01       	movw	r18, r22
    2990:	ac 01       	movw	r20, r24
    2992:	c8 01       	movw	r24, r16
    2994:	b7 01       	movw	r22, r14
    2996:	0e 94 89 1c 	call	0x3912	; 0x3912 <__addsf3>
    299a:	29 81       	ldd	r18, Y+1	; 0x01
    299c:	3a 81       	ldd	r19, Y+2	; 0x02
    299e:	4b 81       	ldd	r20, Y+3	; 0x03
    29a0:	5c 81       	ldd	r21, Y+4	; 0x04
    29a2:	0e 94 f1 1c 	call	0x39e2	; 0x39e2 <__divsf3>
    29a6:	f6 01       	movw	r30, r12
    29a8:	64 83       	std	Z+4, r22	; 0x04
    29aa:	75 83       	std	Z+5, r23	; 0x05
    29ac:	86 83       	std	Z+6, r24	; 0x06
    29ae:	97 83       	std	Z+7, r25	; 0x07
	   ANS[3][2]=TA[3][2];
    29b0:	eb 96       	adiw	r28, 0x3b	; 59
    29b2:	6c ad       	ldd	r22, Y+60	; 0x3c
    29b4:	7d ad       	ldd	r23, Y+61	; 0x3d
    29b6:	8e ad       	ldd	r24, Y+62	; 0x3e
    29b8:	9f ad       	ldd	r25, Y+63	; 0x3f
    29ba:	eb 97       	sbiw	r28, 0x3b	; 59
    29bc:	29 85       	ldd	r18, Y+9	; 0x09
    29be:	3a 85       	ldd	r19, Y+10	; 0x0a
    29c0:	4b 85       	ldd	r20, Y+11	; 0x0b
    29c2:	5c 85       	ldd	r21, Y+12	; 0x0c
    29c4:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    29c8:	7b 01       	movw	r14, r22
    29ca:	8c 01       	movw	r16, r24
    29cc:	ef 96       	adiw	r28, 0x3f	; 63
    29ce:	6c ad       	ldd	r22, Y+60	; 0x3c
    29d0:	7d ad       	ldd	r23, Y+61	; 0x3d
    29d2:	8e ad       	ldd	r24, Y+62	; 0x3e
    29d4:	9f ad       	ldd	r25, Y+63	; 0x3f
    29d6:	ef 97       	sbiw	r28, 0x3f	; 63
    29d8:	29 85       	ldd	r18, Y+9	; 0x09
    29da:	3a 85       	ldd	r19, Y+10	; 0x0a
    29dc:	4b 85       	ldd	r20, Y+11	; 0x0b
    29de:	5c 85       	ldd	r21, Y+12	; 0x0c
    29e0:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    29e4:	9b 01       	movw	r18, r22
    29e6:	ac 01       	movw	r20, r24
    29e8:	c8 01       	movw	r24, r16
    29ea:	b7 01       	movw	r22, r14
    29ec:	0e 94 88 1c 	call	0x3910	; 0x3910 <__subsf3>
    29f0:	7b 01       	movw	r14, r22
    29f2:	8c 01       	movw	r16, r24
    29f4:	cd 55       	subi	r28, 0x5D	; 93
    29f6:	df 4f       	sbci	r29, 0xFF	; 255
    29f8:	68 81       	ld	r22, Y
    29fa:	79 81       	ldd	r23, Y+1	; 0x01
    29fc:	8a 81       	ldd	r24, Y+2	; 0x02
    29fe:	9b 81       	ldd	r25, Y+3	; 0x03
    2a00:	c3 5a       	subi	r28, 0xA3	; 163
    2a02:	d0 40       	sbci	r29, 0x00	; 0
    2a04:	29 a5       	ldd	r18, Y+41	; 0x29
    2a06:	3a a5       	ldd	r19, Y+42	; 0x2a
    2a08:	4b a5       	ldd	r20, Y+43	; 0x2b
    2a0a:	5c a5       	ldd	r21, Y+44	; 0x2c
    2a0c:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    2a10:	9b 01       	movw	r18, r22
    2a12:	ac 01       	movw	r20, r24
    2a14:	c8 01       	movw	r24, r16
    2a16:	b7 01       	movw	r22, r14
    2a18:	0e 94 88 1c 	call	0x3910	; 0x3910 <__subsf3>
    2a1c:	7b 01       	movw	r14, r22
    2a1e:	8c 01       	movw	r16, r24
    2a20:	c9 55       	subi	r28, 0x59	; 89
    2a22:	df 4f       	sbci	r29, 0xFF	; 255
    2a24:	68 81       	ld	r22, Y
    2a26:	79 81       	ldd	r23, Y+1	; 0x01
    2a28:	8a 81       	ldd	r24, Y+2	; 0x02
    2a2a:	9b 81       	ldd	r25, Y+3	; 0x03
    2a2c:	c7 5a       	subi	r28, 0xA7	; 167
    2a2e:	d0 40       	sbci	r29, 0x00	; 0
    2a30:	29 a5       	ldd	r18, Y+41	; 0x29
    2a32:	3a a5       	ldd	r19, Y+42	; 0x2a
    2a34:	4b a5       	ldd	r20, Y+43	; 0x2b
    2a36:	5c a5       	ldd	r21, Y+44	; 0x2c
    2a38:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    2a3c:	9b 01       	movw	r18, r22
    2a3e:	ac 01       	movw	r20, r24
    2a40:	c8 01       	movw	r24, r16
    2a42:	b7 01       	movw	r22, r14
    2a44:	0e 94 89 1c 	call	0x3912	; 0x3912 <__addsf3>
    2a48:	7b 01       	movw	r14, r22
    2a4a:	8c 01       	movw	r16, r24
    2a4c:	c2 01       	movw	r24, r4
    2a4e:	b1 01       	movw	r22, r2
    2a50:	29 8d       	ldd	r18, Y+25	; 0x19
    2a52:	3a 8d       	ldd	r19, Y+26	; 0x1a
    2a54:	4b 8d       	ldd	r20, Y+27	; 0x1b
    2a56:	5c 8d       	ldd	r21, Y+28	; 0x1c
    2a58:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    2a5c:	9b 01       	movw	r18, r22
    2a5e:	ac 01       	movw	r20, r24
    2a60:	c8 01       	movw	r24, r16
    2a62:	b7 01       	movw	r22, r14
    2a64:	0e 94 89 1c 	call	0x3912	; 0x3912 <__addsf3>
    2a68:	7b 01       	movw	r14, r22
    2a6a:	8c 01       	movw	r16, r24
    2a6c:	c5 54       	subi	r28, 0x45	; 69
    2a6e:	df 4f       	sbci	r29, 0xFF	; 255
    2a70:	68 81       	ld	r22, Y
    2a72:	79 81       	ldd	r23, Y+1	; 0x01
    2a74:	8a 81       	ldd	r24, Y+2	; 0x02
    2a76:	9b 81       	ldd	r25, Y+3	; 0x03
    2a78:	cb 5b       	subi	r28, 0xBB	; 187
    2a7a:	d0 40       	sbci	r29, 0x00	; 0
    2a7c:	29 8d       	ldd	r18, Y+25	; 0x19
    2a7e:	3a 8d       	ldd	r19, Y+26	; 0x1a
    2a80:	4b 8d       	ldd	r20, Y+27	; 0x1b
    2a82:	5c 8d       	ldd	r21, Y+28	; 0x1c
    2a84:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    2a88:	9b 01       	movw	r18, r22
    2a8a:	ac 01       	movw	r20, r24
    2a8c:	c8 01       	movw	r24, r16
    2a8e:	b7 01       	movw	r22, r14
    2a90:	0e 94 88 1c 	call	0x3910	; 0x3910 <__subsf3>
    2a94:	29 81       	ldd	r18, Y+1	; 0x01
    2a96:	3a 81       	ldd	r19, Y+2	; 0x02
    2a98:	4b 81       	ldd	r20, Y+3	; 0x03
    2a9a:	5c 81       	ldd	r21, Y+4	; 0x04
    2a9c:	0e 94 f1 1c 	call	0x39e2	; 0x39e2 <__divsf3>
    2aa0:	d6 01       	movw	r26, r12
    2aa2:	18 96       	adiw	r26, 0x08	; 8
    2aa4:	6d 93       	st	X+, r22
    2aa6:	7d 93       	st	X+, r23
    2aa8:	8d 93       	st	X+, r24
    2aaa:	9c 93       	st	X, r25
    2aac:	1b 97       	sbiw	r26, 0x0b	; 11
	   ANS[3][3]=TA[3][3];
    2aae:	ef 96       	adiw	r28, 0x3f	; 63
    2ab0:	6c ad       	ldd	r22, Y+60	; 0x3c
    2ab2:	7d ad       	ldd	r23, Y+61	; 0x3d
    2ab4:	8e ad       	ldd	r24, Y+62	; 0x3e
    2ab6:	9f ad       	ldd	r25, Y+63	; 0x3f
    2ab8:	ef 97       	sbiw	r28, 0x3f	; 63
    2aba:	2d 81       	ldd	r18, Y+5	; 0x05
    2abc:	3e 81       	ldd	r19, Y+6	; 0x06
    2abe:	4f 81       	ldd	r20, Y+7	; 0x07
    2ac0:	58 85       	ldd	r21, Y+8	; 0x08
    2ac2:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    2ac6:	7b 01       	movw	r14, r22
    2ac8:	8c 01       	movw	r16, r24
    2aca:	eb 96       	adiw	r28, 0x3b	; 59
    2acc:	6c ad       	ldd	r22, Y+60	; 0x3c
    2ace:	7d ad       	ldd	r23, Y+61	; 0x3d
    2ad0:	8e ad       	ldd	r24, Y+62	; 0x3e
    2ad2:	9f ad       	ldd	r25, Y+63	; 0x3f
    2ad4:	eb 97       	sbiw	r28, 0x3b	; 59
    2ad6:	2d 81       	ldd	r18, Y+5	; 0x05
    2ad8:	3e 81       	ldd	r19, Y+6	; 0x06
    2ada:	4f 81       	ldd	r20, Y+7	; 0x07
    2adc:	58 85       	ldd	r21, Y+8	; 0x08
    2ade:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    2ae2:	9b 01       	movw	r18, r22
    2ae4:	ac 01       	movw	r20, r24
    2ae6:	c8 01       	movw	r24, r16
    2ae8:	b7 01       	movw	r22, r14
    2aea:	0e 94 88 1c 	call	0x3910	; 0x3910 <__subsf3>
    2aee:	7b 01       	movw	r14, r22
    2af0:	8c 01       	movw	r16, r24
    2af2:	cd 55       	subi	r28, 0x5D	; 93
    2af4:	df 4f       	sbci	r29, 0xFF	; 255
    2af6:	68 81       	ld	r22, Y
    2af8:	79 81       	ldd	r23, Y+1	; 0x01
    2afa:	8a 81       	ldd	r24, Y+2	; 0x02
    2afc:	9b 81       	ldd	r25, Y+3	; 0x03
    2afe:	c3 5a       	subi	r28, 0xA3	; 163
    2b00:	d0 40       	sbci	r29, 0x00	; 0
    2b02:	2d 8d       	ldd	r18, Y+29	; 0x1d
    2b04:	3e 8d       	ldd	r19, Y+30	; 0x1e
    2b06:	4f 8d       	ldd	r20, Y+31	; 0x1f
    2b08:	58 a1       	ldd	r21, Y+32	; 0x20
    2b0a:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    2b0e:	9b 01       	movw	r18, r22
    2b10:	ac 01       	movw	r20, r24
    2b12:	c8 01       	movw	r24, r16
    2b14:	b7 01       	movw	r22, r14
    2b16:	0e 94 89 1c 	call	0x3912	; 0x3912 <__addsf3>
    2b1a:	7b 01       	movw	r14, r22
    2b1c:	8c 01       	movw	r16, r24
    2b1e:	c9 55       	subi	r28, 0x59	; 89
    2b20:	df 4f       	sbci	r29, 0xFF	; 255
    2b22:	68 81       	ld	r22, Y
    2b24:	79 81       	ldd	r23, Y+1	; 0x01
    2b26:	8a 81       	ldd	r24, Y+2	; 0x02
    2b28:	9b 81       	ldd	r25, Y+3	; 0x03
    2b2a:	c7 5a       	subi	r28, 0xA7	; 167
    2b2c:	d0 40       	sbci	r29, 0x00	; 0
    2b2e:	2d 8d       	ldd	r18, Y+29	; 0x1d
    2b30:	3e 8d       	ldd	r19, Y+30	; 0x1e
    2b32:	4f 8d       	ldd	r20, Y+31	; 0x1f
    2b34:	58 a1       	ldd	r21, Y+32	; 0x20
    2b36:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    2b3a:	9b 01       	movw	r18, r22
    2b3c:	ac 01       	movw	r20, r24
    2b3e:	c8 01       	movw	r24, r16
    2b40:	b7 01       	movw	r22, r14
    2b42:	0e 94 88 1c 	call	0x3910	; 0x3910 <__subsf3>
    2b46:	7b 01       	movw	r14, r22
    2b48:	8c 01       	movw	r16, r24
    2b4a:	c2 01       	movw	r24, r4
    2b4c:	b1 01       	movw	r22, r2
    2b4e:	29 a1       	ldd	r18, Y+33	; 0x21
    2b50:	3a a1       	ldd	r19, Y+34	; 0x22
    2b52:	4b a1       	ldd	r20, Y+35	; 0x23
    2b54:	5c a1       	ldd	r21, Y+36	; 0x24
    2b56:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    2b5a:	9b 01       	movw	r18, r22
    2b5c:	ac 01       	movw	r20, r24
    2b5e:	c8 01       	movw	r24, r16
    2b60:	b7 01       	movw	r22, r14
    2b62:	0e 94 88 1c 	call	0x3910	; 0x3910 <__subsf3>
    2b66:	7b 01       	movw	r14, r22
    2b68:	8c 01       	movw	r16, r24
    2b6a:	c5 54       	subi	r28, 0x45	; 69
    2b6c:	df 4f       	sbci	r29, 0xFF	; 255
    2b6e:	68 81       	ld	r22, Y
    2b70:	79 81       	ldd	r23, Y+1	; 0x01
    2b72:	8a 81       	ldd	r24, Y+2	; 0x02
    2b74:	9b 81       	ldd	r25, Y+3	; 0x03
    2b76:	cb 5b       	subi	r28, 0xBB	; 187
    2b78:	d0 40       	sbci	r29, 0x00	; 0
    2b7a:	29 a1       	ldd	r18, Y+33	; 0x21
    2b7c:	3a a1       	ldd	r19, Y+34	; 0x22
    2b7e:	4b a1       	ldd	r20, Y+35	; 0x23
    2b80:	5c a1       	ldd	r21, Y+36	; 0x24
    2b82:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    2b86:	9b 01       	movw	r18, r22
    2b88:	ac 01       	movw	r20, r24
    2b8a:	c8 01       	movw	r24, r16
    2b8c:	b7 01       	movw	r22, r14
    2b8e:	0e 94 89 1c 	call	0x3912	; 0x3912 <__addsf3>
    2b92:	29 81       	ldd	r18, Y+1	; 0x01
    2b94:	3a 81       	ldd	r19, Y+2	; 0x02
    2b96:	4b 81       	ldd	r20, Y+3	; 0x03
    2b98:	5c 81       	ldd	r21, Y+4	; 0x04
    2b9a:	0e 94 f1 1c 	call	0x39e2	; 0x39e2 <__divsf3>
    2b9e:	f6 01       	movw	r30, r12
    2ba0:	64 87       	std	Z+12, r22	; 0x0c
    2ba2:	75 87       	std	Z+13, r23	; 0x0d
    2ba4:	86 87       	std	Z+14, r24	; 0x0e
    2ba6:	97 87       	std	Z+15, r25	; 0x0f
    2ba8:	21 e0       	ldi	r18, 0x01	; 1
    2baa:	30 e0       	ldi	r19, 0x00	; 0
	   return 1;
	}
}
    2bac:	c9 01       	movw	r24, r18
    2bae:	c0 54       	subi	r28, 0x40	; 64
    2bb0:	df 4f       	sbci	r29, 0xFF	; 255
    2bb2:	cd bf       	out	0x3d, r28	; 61
    2bb4:	de bf       	out	0x3e, r29	; 62
    2bb6:	cf 91       	pop	r28
    2bb8:	df 91       	pop	r29
    2bba:	1f 91       	pop	r17
    2bbc:	0f 91       	pop	r16
    2bbe:	ff 90       	pop	r15
    2bc0:	ef 90       	pop	r14
    2bc2:	df 90       	pop	r13
    2bc4:	cf 90       	pop	r12
    2bc6:	bf 90       	pop	r11
    2bc8:	af 90       	pop	r10
    2bca:	9f 90       	pop	r9
    2bcc:	8f 90       	pop	r8
    2bce:	7f 90       	pop	r7
    2bd0:	6f 90       	pop	r6
    2bd2:	5f 90       	pop	r5
    2bd4:	4f 90       	pop	r4
    2bd6:	3f 90       	pop	r3
    2bd8:	2f 90       	pop	r2
    2bda:	08 95       	ret

00002bdc <mtx_mul_3x3>:
   A[0][2]*A[1][0]*A[2][1]*A[3][3] - A[0][0]*A[1][2]*A[2][1]*A[3][3] - A[0][1]*A[1][0]*A[2][2]*A[3][3] + A[0][0]*A[1][1]*A[2][2]*A[3][3];
   return value;
 }


void mtx_mul_3x3(double ANS[3][3],double A[3][3],double B[3][3]){
    2bdc:	2f 92       	push	r2
    2bde:	3f 92       	push	r3
    2be0:	4f 92       	push	r4
    2be2:	5f 92       	push	r5
    2be4:	6f 92       	push	r6
    2be6:	7f 92       	push	r7
    2be8:	8f 92       	push	r8
    2bea:	9f 92       	push	r9
    2bec:	af 92       	push	r10
    2bee:	bf 92       	push	r11
    2bf0:	cf 92       	push	r12
    2bf2:	df 92       	push	r13
    2bf4:	ef 92       	push	r14
    2bf6:	ff 92       	push	r15
    2bf8:	0f 93       	push	r16
    2bfa:	1f 93       	push	r17
    2bfc:	df 93       	push	r29
    2bfe:	cf 93       	push	r28
    2c00:	cd b7       	in	r28, 0x3d	; 61
    2c02:	de b7       	in	r29, 0x3e	; 62
    2c04:	a6 97       	sbiw	r28, 0x26	; 38
    2c06:	cd bf       	out	0x3d, r28	; 61
    2c08:	de bf       	out	0x3e, r29	; 62
    2c0a:	8d a3       	std	Y+37, r24	; 0x25
    2c0c:	9e a3       	std	Y+38, r25	; 0x26
    2c0e:	2a 01       	movw	r4, r20
	double buffer[3][3]={{0,0,0},{0,0,0},{0,0,0}};
    2c10:	fe 01       	movw	r30, r28
    2c12:	31 96       	adiw	r30, 0x01	; 1
    2c14:	84 e2       	ldi	r24, 0x24	; 36
    2c16:	df 01       	movw	r26, r30
    2c18:	1d 92       	st	X+, r1
    2c1a:	8a 95       	dec	r24
    2c1c:	e9 f7       	brne	.-6      	; 0x2c18 <mtx_mul_3x3+0x3c>
    2c1e:	3b 01       	movw	r6, r22
    2c20:	88 24       	eor	r8, r8
    2c22:	99 24       	eor	r9, r9
	for(int i=0;i<3;i++)
		for(int j=0;j<3;j++)
    2c24:	bc e0       	ldi	r27, 0x0C	; 12
    2c26:	2b 2e       	mov	r2, r27
    2c28:	31 2c       	mov	r3, r1
    2c2a:	24 0e       	add	r2, r20
    2c2c:	35 1e       	adc	r3, r21
    2c2e:	63 c0       	rjmp	.+198    	; 0x2cf6 <mtx_mul_3x3+0x11a>
			for(int k=0;k<3;k++)
				buffer[i][j]+= A[i][k]*B[k][j];
    2c30:	f3 01       	movw	r30, r6
    2c32:	60 81       	ld	r22, Z
    2c34:	71 81       	ldd	r23, Z+1	; 0x01
    2c36:	82 81       	ldd	r24, Z+2	; 0x02
    2c38:	93 81       	ldd	r25, Z+3	; 0x03
    2c3a:	d5 01       	movw	r26, r10
    2c3c:	2d 91       	ld	r18, X+
    2c3e:	3d 91       	ld	r19, X+
    2c40:	4d 91       	ld	r20, X+
    2c42:	5c 91       	ld	r21, X
    2c44:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    2c48:	f6 01       	movw	r30, r12
    2c4a:	20 81       	ld	r18, Z
    2c4c:	31 81       	ldd	r19, Z+1	; 0x01
    2c4e:	42 81       	ldd	r20, Z+2	; 0x02
    2c50:	53 81       	ldd	r21, Z+3	; 0x03
    2c52:	0e 94 89 1c 	call	0x3912	; 0x3912 <__addsf3>
    2c56:	7b 01       	movw	r14, r22
    2c58:	8c 01       	movw	r16, r24
    2c5a:	d3 01       	movw	r26, r6
    2c5c:	14 96       	adiw	r26, 0x04	; 4
    2c5e:	6d 91       	ld	r22, X+
    2c60:	7d 91       	ld	r23, X+
    2c62:	8d 91       	ld	r24, X+
    2c64:	9c 91       	ld	r25, X
    2c66:	17 97       	sbiw	r26, 0x07	; 7
    2c68:	f5 01       	movw	r30, r10
    2c6a:	24 85       	ldd	r18, Z+12	; 0x0c
    2c6c:	35 85       	ldd	r19, Z+13	; 0x0d
    2c6e:	46 85       	ldd	r20, Z+14	; 0x0e
    2c70:	57 85       	ldd	r21, Z+15	; 0x0f
    2c72:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    2c76:	9b 01       	movw	r18, r22
    2c78:	ac 01       	movw	r20, r24
    2c7a:	c8 01       	movw	r24, r16
    2c7c:	b7 01       	movw	r22, r14
    2c7e:	0e 94 89 1c 	call	0x3912	; 0x3912 <__addsf3>
    2c82:	7b 01       	movw	r14, r22
    2c84:	8c 01       	movw	r16, r24
    2c86:	d3 01       	movw	r26, r6
    2c88:	18 96       	adiw	r26, 0x08	; 8
    2c8a:	6d 91       	ld	r22, X+
    2c8c:	7d 91       	ld	r23, X+
    2c8e:	8d 91       	ld	r24, X+
    2c90:	9c 91       	ld	r25, X
    2c92:	1b 97       	sbiw	r26, 0x0b	; 11
    2c94:	f5 01       	movw	r30, r10
    2c96:	20 8d       	ldd	r18, Z+24	; 0x18
    2c98:	31 8d       	ldd	r19, Z+25	; 0x19
    2c9a:	42 8d       	ldd	r20, Z+26	; 0x1a
    2c9c:	53 8d       	ldd	r21, Z+27	; 0x1b
    2c9e:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    2ca2:	9b 01       	movw	r18, r22
    2ca4:	ac 01       	movw	r20, r24
    2ca6:	c8 01       	movw	r24, r16
    2ca8:	b7 01       	movw	r22, r14
    2caa:	0e 94 89 1c 	call	0x3912	; 0x3912 <__addsf3>
    2cae:	d6 01       	movw	r26, r12
    2cb0:	6d 93       	st	X+, r22
    2cb2:	7d 93       	st	X+, r23
    2cb4:	8d 93       	st	X+, r24
    2cb6:	9d 93       	st	X+, r25
    2cb8:	6d 01       	movw	r12, r26
    2cba:	e4 e0       	ldi	r30, 0x04	; 4
    2cbc:	f0 e0       	ldi	r31, 0x00	; 0
    2cbe:	ae 0e       	add	r10, r30
    2cc0:	bf 1e       	adc	r11, r31


void mtx_mul_3x3(double ANS[3][3],double A[3][3],double B[3][3]){
	double buffer[3][3]={{0,0,0},{0,0,0},{0,0,0}};
	for(int i=0;i<3;i++)
		for(int j=0;j<3;j++)
    2cc2:	a2 14       	cp	r10, r2
    2cc4:	b3 04       	cpc	r11, r3
    2cc6:	09 f0       	breq	.+2      	; 0x2cca <mtx_mul_3x3+0xee>
    2cc8:	b3 cf       	rjmp	.-154    	; 0x2c30 <mtx_mul_3x3+0x54>
 }


void mtx_mul_3x3(double ANS[3][3],double A[3][3],double B[3][3]){
	double buffer[3][3]={{0,0,0},{0,0,0},{0,0,0}};
	for(int i=0;i<3;i++)
    2cca:	08 94       	sec
    2ccc:	81 1c       	adc	r8, r1
    2cce:	91 1c       	adc	r9, r1
    2cd0:	8c e0       	ldi	r24, 0x0C	; 12
    2cd2:	90 e0       	ldi	r25, 0x00	; 0
    2cd4:	68 0e       	add	r6, r24
    2cd6:	79 1e       	adc	r7, r25
    2cd8:	93 e0       	ldi	r25, 0x03	; 3
    2cda:	89 16       	cp	r8, r25
    2cdc:	91 04       	cpc	r9, r1
    2cde:	59 f4       	brne	.+22     	; 0x2cf6 <mtx_mul_3x3+0x11a>
    2ce0:	ae 01       	movw	r20, r28
    2ce2:	4f 5f       	subi	r20, 0xFF	; 255
    2ce4:	5f 4f       	sbci	r21, 0xFF	; 255
    2ce6:	8d a1       	ldd	r24, Y+37	; 0x25
    2ce8:	9e a1       	ldd	r25, Y+38	; 0x26
    2cea:	9c 01       	movw	r18, r24
    2cec:	f9 01       	movw	r30, r18
		for(int j=0;j<3;j++)
			for(int k=0;k<3;k++)
				buffer[i][j]+= A[i][k]*B[k][j];
	for(int i=0;i<3;i++)
    2cee:	9e 01       	movw	r18, r28
    2cf0:	2b 5d       	subi	r18, 0xDB	; 219
    2cf2:	3f 4f       	sbci	r19, 0xFF	; 255
    2cf4:	11 c0       	rjmp	.+34     	; 0x2d18 <mtx_mul_3x3+0x13c>
 }


void mtx_mul_3x3(double ANS[3][3],double A[3][3],double B[3][3]){
	double buffer[3][3]={{0,0,0},{0,0,0},{0,0,0}};
	for(int i=0;i<3;i++)
    2cf6:	64 01       	movw	r12, r8
    2cf8:	cc 0c       	add	r12, r12
    2cfa:	dd 1c       	adc	r13, r13
    2cfc:	c8 0c       	add	r12, r8
    2cfe:	d9 1c       	adc	r13, r9
    2d00:	cc 0c       	add	r12, r12
    2d02:	dd 1c       	adc	r13, r13
    2d04:	cc 0c       	add	r12, r12
    2d06:	dd 1c       	adc	r13, r13
    2d08:	a1 e0       	ldi	r26, 0x01	; 1
    2d0a:	b0 e0       	ldi	r27, 0x00	; 0
    2d0c:	ac 0f       	add	r26, r28
    2d0e:	bd 1f       	adc	r27, r29
    2d10:	ca 0e       	add	r12, r26
    2d12:	db 1e       	adc	r13, r27
    2d14:	52 01       	movw	r10, r4
    2d16:	8c cf       	rjmp	.-232    	; 0x2c30 <mtx_mul_3x3+0x54>
		for(int j=0;j<3;j++)
			for(int k=0;k<3;k++)
				buffer[i][j]+= A[i][k]*B[k][j];
	for(int i=0;i<3;i++)
		for(int j=0;j<3;j++)
			ANS[i][j]=buffer[i][j];
    2d18:	da 01       	movw	r26, r20
    2d1a:	ad 90       	ld	r10, X+
    2d1c:	bd 90       	ld	r11, X+
    2d1e:	cd 90       	ld	r12, X+
    2d20:	dc 90       	ld	r13, X
    2d22:	13 97       	sbiw	r26, 0x03	; 3
    2d24:	a0 82       	st	Z, r10
    2d26:	b1 82       	std	Z+1, r11	; 0x01
    2d28:	c2 82       	std	Z+2, r12	; 0x02
    2d2a:	d3 82       	std	Z+3, r13	; 0x03
    2d2c:	14 96       	adiw	r26, 0x04	; 4
    2d2e:	ad 90       	ld	r10, X+
    2d30:	bd 90       	ld	r11, X+
    2d32:	cd 90       	ld	r12, X+
    2d34:	dc 90       	ld	r13, X
    2d36:	17 97       	sbiw	r26, 0x07	; 7
    2d38:	a4 82       	std	Z+4, r10	; 0x04
    2d3a:	b5 82       	std	Z+5, r11	; 0x05
    2d3c:	c6 82       	std	Z+6, r12	; 0x06
    2d3e:	d7 82       	std	Z+7, r13	; 0x07
    2d40:	18 96       	adiw	r26, 0x08	; 8
    2d42:	ad 90       	ld	r10, X+
    2d44:	bd 90       	ld	r11, X+
    2d46:	cd 90       	ld	r12, X+
    2d48:	dc 90       	ld	r13, X
    2d4a:	1b 97       	sbiw	r26, 0x0b	; 11
    2d4c:	a0 86       	std	Z+8, r10	; 0x08
    2d4e:	b1 86       	std	Z+9, r11	; 0x09
    2d50:	c2 86       	std	Z+10, r12	; 0x0a
    2d52:	d3 86       	std	Z+11, r13	; 0x0b
    2d54:	44 5f       	subi	r20, 0xF4	; 244
    2d56:	5f 4f       	sbci	r21, 0xFF	; 255
    2d58:	3c 96       	adiw	r30, 0x0c	; 12
	double buffer[3][3]={{0,0,0},{0,0,0},{0,0,0}};
	for(int i=0;i<3;i++)
		for(int j=0;j<3;j++)
			for(int k=0;k<3;k++)
				buffer[i][j]+= A[i][k]*B[k][j];
	for(int i=0;i<3;i++)
    2d5a:	42 17       	cp	r20, r18
    2d5c:	53 07       	cpc	r21, r19
    2d5e:	e1 f6       	brne	.-72     	; 0x2d18 <mtx_mul_3x3+0x13c>
		for(int j=0;j<3;j++)
			ANS[i][j]=buffer[i][j];
}
    2d60:	a6 96       	adiw	r28, 0x26	; 38
    2d62:	cd bf       	out	0x3d, r28	; 61
    2d64:	de bf       	out	0x3e, r29	; 62
    2d66:	cf 91       	pop	r28
    2d68:	df 91       	pop	r29
    2d6a:	1f 91       	pop	r17
    2d6c:	0f 91       	pop	r16
    2d6e:	ff 90       	pop	r15
    2d70:	ef 90       	pop	r14
    2d72:	df 90       	pop	r13
    2d74:	cf 90       	pop	r12
    2d76:	bf 90       	pop	r11
    2d78:	af 90       	pop	r10
    2d7a:	9f 90       	pop	r9
    2d7c:	8f 90       	pop	r8
    2d7e:	7f 90       	pop	r7
    2d80:	6f 90       	pop	r6
    2d82:	5f 90       	pop	r5
    2d84:	4f 90       	pop	r4
    2d86:	3f 90       	pop	r3
    2d88:	2f 90       	pop	r2
    2d8a:	08 95       	ret

00002d8c <mtx_mul_10x10>:

void mtx_mul_10x10(double ANS[10][10],double A[10][10],double B[10][10]){
    2d8c:	2f 92       	push	r2
    2d8e:	3f 92       	push	r3
    2d90:	4f 92       	push	r4
    2d92:	5f 92       	push	r5
    2d94:	6f 92       	push	r6
    2d96:	7f 92       	push	r7
    2d98:	8f 92       	push	r8
    2d9a:	9f 92       	push	r9
    2d9c:	af 92       	push	r10
    2d9e:	bf 92       	push	r11
    2da0:	cf 92       	push	r12
    2da2:	df 92       	push	r13
    2da4:	ef 92       	push	r14
    2da6:	ff 92       	push	r15
    2da8:	0f 93       	push	r16
    2daa:	1f 93       	push	r17
    2dac:	df 93       	push	r29
    2dae:	cf 93       	push	r28
    2db0:	cd b7       	in	r28, 0x3d	; 61
    2db2:	de b7       	in	r29, 0x3e	; 62
    2db4:	c4 59       	subi	r28, 0x94	; 148
    2db6:	d1 40       	sbci	r29, 0x01	; 1
    2db8:	cd bf       	out	0x3d, r28	; 61
    2dba:	de bf       	out	0x3e, r29	; 62
    2dbc:	cd 56       	subi	r28, 0x6D	; 109
    2dbe:	de 4f       	sbci	r29, 0xFE	; 254
    2dc0:	88 83       	st	Y, r24
    2dc2:	c3 59       	subi	r28, 0x93	; 147
    2dc4:	d1 40       	sbci	r29, 0x01	; 1
    2dc6:	cc 56       	subi	r28, 0x6C	; 108
    2dc8:	de 4f       	sbci	r29, 0xFE	; 254
    2dca:	98 83       	st	Y, r25
    2dcc:	c4 59       	subi	r28, 0x94	; 148
    2dce:	d1 40       	sbci	r29, 0x01	; 1
    2dd0:	cf 56       	subi	r28, 0x6F	; 111
    2dd2:	de 4f       	sbci	r29, 0xFE	; 254
    2dd4:	48 83       	st	Y, r20
    2dd6:	59 83       	std	Y+1, r21	; 0x01
    2dd8:	c1 59       	subi	r28, 0x91	; 145
    2dda:	d1 40       	sbci	r29, 0x01	; 1
						   {0,0,0,0,0,0,0,0,0,0},
						   {0,0,0,0,0,0,0,0,0,0},
						   {0,0,0,0,0,0,0,0,0,0},
						   {0,0,0,0,0,0,0,0,0,0},
						   {0,0,0,0,0,0,0,0,0,0},
						   {0,0,0,0,0,0,0,0,0,0}};
    2ddc:	fe 01       	movw	r30, r28
    2dde:	31 96       	adiw	r30, 0x01	; 1
    2de0:	80 e9       	ldi	r24, 0x90	; 144
    2de2:	91 e0       	ldi	r25, 0x01	; 1
    2de4:	df 01       	movw	r26, r30
    2de6:	9c 01       	movw	r18, r24
    2de8:	1d 92       	st	X+, r1
    2dea:	21 50       	subi	r18, 0x01	; 1
    2dec:	30 40       	sbci	r19, 0x00	; 0
    2dee:	e1 f7       	brne	.-8      	; 0x2de8 <mtx_mul_10x10+0x5c>
    2df0:	1b 01       	movw	r2, r22
    2df2:	44 24       	eor	r4, r4
    2df4:	55 24       	eor	r5, r5
    2df6:	64 c0       	rjmp	.+200    	; 0x2ec0 <mtx_mul_10x10+0x134>
	for( i=0;i<10;i++)
		for( j=0;j<10;j++)
			for( k=0;k<10;k++)
				buffer[i][j]+= A[i][k]*B[k][j];
    2df8:	f1 01       	movw	r30, r2
    2dfa:	ea 0d       	add	r30, r10
    2dfc:	fb 1d       	adc	r31, r11
    2dfe:	60 81       	ld	r22, Z
    2e00:	71 81       	ldd	r23, Z+1	; 0x01
    2e02:	82 81       	ldd	r24, Z+2	; 0x02
    2e04:	93 81       	ldd	r25, Z+3	; 0x03
    2e06:	d6 01       	movw	r26, r12
    2e08:	2d 91       	ld	r18, X+
    2e0a:	3d 91       	ld	r19, X+
    2e0c:	4d 91       	ld	r20, X+
    2e0e:	5c 91       	ld	r21, X
    2e10:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    2e14:	9b 01       	movw	r18, r22
    2e16:	ac 01       	movw	r20, r24
    2e18:	c8 01       	movw	r24, r16
    2e1a:	b7 01       	movw	r22, r14
    2e1c:	0e 94 89 1c 	call	0x3912	; 0x3912 <__addsf3>
    2e20:	7b 01       	movw	r14, r22
    2e22:	8c 01       	movw	r16, r24
    2e24:	e4 e0       	ldi	r30, 0x04	; 4
    2e26:	f0 e0       	ldi	r31, 0x00	; 0
    2e28:	ae 0e       	add	r10, r30
    2e2a:	bf 1e       	adc	r11, r31
    2e2c:	28 e2       	ldi	r18, 0x28	; 40
    2e2e:	30 e0       	ldi	r19, 0x00	; 0
    2e30:	c2 0e       	add	r12, r18
    2e32:	d3 1e       	adc	r13, r19
						   {0,0,0,0,0,0,0,0,0,0},
						   {0,0,0,0,0,0,0,0,0,0},
						   {0,0,0,0,0,0,0,0,0,0}};
	for( i=0;i<10;i++)
		for( j=0;j<10;j++)
			for( k=0;k<10;k++)
    2e34:	38 e2       	ldi	r19, 0x28	; 40
    2e36:	a3 16       	cp	r10, r19
    2e38:	b1 04       	cpc	r11, r1
    2e3a:	f1 f6       	brne	.-68     	; 0x2df8 <mtx_mul_10x10+0x6c>
    2e3c:	d4 01       	movw	r26, r8
    2e3e:	6d 93       	st	X+, r22
    2e40:	7d 93       	st	X+, r23
    2e42:	8d 93       	st	X+, r24
    2e44:	9d 93       	st	X+, r25
    2e46:	4d 01       	movw	r8, r26
						   {0,0,0,0,0,0,0,0,0,0},
						   {0,0,0,0,0,0,0,0,0,0},
						   {0,0,0,0,0,0,0,0,0,0},
						   {0,0,0,0,0,0,0,0,0,0}};
	for( i=0;i<10;i++)
		for( j=0;j<10;j++)
    2e48:	08 94       	sec
    2e4a:	61 1c       	adc	r6, r1
    2e4c:	71 1c       	adc	r7, r1
    2e4e:	ba e0       	ldi	r27, 0x0A	; 10
    2e50:	6b 16       	cp	r6, r27
    2e52:	71 04       	cpc	r7, r1
    2e54:	a9 f0       	breq	.+42     	; 0x2e80 <mtx_mul_10x10+0xf4>
    2e56:	f4 01       	movw	r30, r8
    2e58:	e0 80       	ld	r14, Z
    2e5a:	f1 80       	ldd	r15, Z+1	; 0x01
    2e5c:	02 81       	ldd	r16, Z+2	; 0x02
    2e5e:	13 81       	ldd	r17, Z+3	; 0x03
    2e60:	63 01       	movw	r12, r6
    2e62:	cc 0c       	add	r12, r12
    2e64:	dd 1c       	adc	r13, r13
    2e66:	cc 0c       	add	r12, r12
    2e68:	dd 1c       	adc	r13, r13
    2e6a:	cf 56       	subi	r28, 0x6F	; 111
    2e6c:	de 4f       	sbci	r29, 0xFE	; 254
    2e6e:	28 81       	ld	r18, Y
    2e70:	39 81       	ldd	r19, Y+1	; 0x01
    2e72:	c1 59       	subi	r28, 0x91	; 145
    2e74:	d1 40       	sbci	r29, 0x01	; 1
    2e76:	c2 0e       	add	r12, r18
    2e78:	d3 1e       	adc	r13, r19
    2e7a:	aa 24       	eor	r10, r10
    2e7c:	bb 24       	eor	r11, r11
    2e7e:	bc cf       	rjmp	.-136    	; 0x2df8 <mtx_mul_10x10+0x6c>
						   {0,0,0,0,0,0,0,0,0,0},
						   {0,0,0,0,0,0,0,0,0,0},
						   {0,0,0,0,0,0,0,0,0,0},
						   {0,0,0,0,0,0,0,0,0,0},
						   {0,0,0,0,0,0,0,0,0,0}};
	for( i=0;i<10;i++)
    2e80:	08 94       	sec
    2e82:	41 1c       	adc	r4, r1
    2e84:	51 1c       	adc	r5, r1
    2e86:	88 e2       	ldi	r24, 0x28	; 40
    2e88:	90 e0       	ldi	r25, 0x00	; 0
    2e8a:	28 0e       	add	r2, r24
    2e8c:	39 1e       	adc	r3, r25
    2e8e:	9a e0       	ldi	r25, 0x0A	; 10
    2e90:	49 16       	cp	r4, r25
    2e92:	51 04       	cpc	r5, r1
    2e94:	a9 f4       	brne	.+42     	; 0x2ec0 <mtx_mul_10x10+0x134>
    2e96:	cd 56       	subi	r28, 0x6D	; 109
    2e98:	de 4f       	sbci	r29, 0xFE	; 254
    2e9a:	88 81       	ld	r24, Y
    2e9c:	c3 59       	subi	r28, 0x93	; 147
    2e9e:	d1 40       	sbci	r29, 0x01	; 1
    2ea0:	cc 56       	subi	r28, 0x6C	; 108
    2ea2:	de 4f       	sbci	r29, 0xFE	; 254
    2ea4:	98 81       	ld	r25, Y
    2ea6:	c4 59       	subi	r28, 0x94	; 148
    2ea8:	d1 40       	sbci	r29, 0x01	; 1
    2eaa:	9c 01       	movw	r18, r24
    2eac:	00 e0       	ldi	r16, 0x00	; 0
    2eae:	10 e0       	ldi	r17, 0x00	; 0
		for( j=0;j<10;j++)
			for( k=0;k<10;k++)
				buffer[i][j]+= A[i][k]*B[k][j];
	for( i=0;i<10;i++)
    2eb0:	88 e2       	ldi	r24, 0x28	; 40
    2eb2:	c8 2e       	mov	r12, r24
    2eb4:	d1 2c       	mov	r13, r1
    2eb6:	7e 01       	movw	r14, r28
    2eb8:	08 94       	sec
    2eba:	e1 1c       	adc	r14, r1
    2ebc:	f1 1c       	adc	r15, r1
    2ebe:	2c c0       	rjmp	.+88     	; 0x2f18 <mtx_mul_10x10+0x18c>
						   {0,0,0,0,0,0,0,0,0,0},
						   {0,0,0,0,0,0,0,0,0,0},
						   {0,0,0,0,0,0,0,0,0,0},
						   {0,0,0,0,0,0,0,0,0,0},
						   {0,0,0,0,0,0,0,0,0,0}};
	for( i=0;i<10;i++)
    2ec0:	a8 e2       	ldi	r26, 0x28	; 40
    2ec2:	b0 e0       	ldi	r27, 0x00	; 0
    2ec4:	4a 9e       	mul	r4, r26
    2ec6:	40 01       	movw	r8, r0
    2ec8:	4b 9e       	mul	r4, r27
    2eca:	90 0c       	add	r9, r0
    2ecc:	5a 9e       	mul	r5, r26
    2ece:	90 0c       	add	r9, r0
    2ed0:	11 24       	eor	r1, r1
    2ed2:	e1 e0       	ldi	r30, 0x01	; 1
    2ed4:	f0 e0       	ldi	r31, 0x00	; 0
    2ed6:	ec 0f       	add	r30, r28
    2ed8:	fd 1f       	adc	r31, r29
    2eda:	8e 0e       	add	r8, r30
    2edc:	9f 1e       	adc	r9, r31
    2ede:	66 24       	eor	r6, r6
    2ee0:	77 24       	eor	r7, r7
    2ee2:	b9 cf       	rjmp	.-142    	; 0x2e56 <mtx_mul_10x10+0xca>
		for( j=0;j<10;j++)
			for( k=0;k<10;k++)
				buffer[i][j]+= A[i][k]*B[k][j];
	for( i=0;i<10;i++)
		for( j=0;j<10;j++)
			ANS[i][j]=buffer[i][j];
    2ee4:	59 01       	movw	r10, r18
    2ee6:	a4 0e       	add	r10, r20
    2ee8:	b5 1e       	adc	r11, r21
    2eea:	fb 01       	movw	r30, r22
    2eec:	81 91       	ld	r24, Z+
    2eee:	91 91       	ld	r25, Z+
    2ef0:	a1 91       	ld	r26, Z+
    2ef2:	b1 91       	ld	r27, Z+
    2ef4:	bf 01       	movw	r22, r30
    2ef6:	f5 01       	movw	r30, r10
    2ef8:	80 83       	st	Z, r24
    2efa:	91 83       	std	Z+1, r25	; 0x01
    2efc:	a2 83       	std	Z+2, r26	; 0x02
    2efe:	b3 83       	std	Z+3, r27	; 0x03
    2f00:	4c 5f       	subi	r20, 0xFC	; 252
    2f02:	5f 4f       	sbci	r21, 0xFF	; 255
	for( i=0;i<10;i++)
		for( j=0;j<10;j++)
			for( k=0;k<10;k++)
				buffer[i][j]+= A[i][k]*B[k][j];
	for( i=0;i<10;i++)
		for( j=0;j<10;j++)
    2f04:	48 32       	cpi	r20, 0x28	; 40
    2f06:	51 05       	cpc	r21, r1
    2f08:	69 f7       	brne	.-38     	; 0x2ee4 <mtx_mul_10x10+0x158>
						   {0,0,0,0,0,0,0,0,0,0}};
	for( i=0;i<10;i++)
		for( j=0;j<10;j++)
			for( k=0;k<10;k++)
				buffer[i][j]+= A[i][k]*B[k][j];
	for( i=0;i<10;i++)
    2f0a:	0f 5f       	subi	r16, 0xFF	; 255
    2f0c:	1f 4f       	sbci	r17, 0xFF	; 255
    2f0e:	28 5d       	subi	r18, 0xD8	; 216
    2f10:	3f 4f       	sbci	r19, 0xFF	; 255
    2f12:	0a 30       	cpi	r16, 0x0A	; 10
    2f14:	11 05       	cpc	r17, r1
    2f16:	61 f0       	breq	.+24     	; 0x2f30 <mtx_mul_10x10+0x1a4>
    2f18:	0c 9d       	mul	r16, r12
    2f1a:	b0 01       	movw	r22, r0
    2f1c:	0d 9d       	mul	r16, r13
    2f1e:	70 0d       	add	r23, r0
    2f20:	1c 9d       	mul	r17, r12
    2f22:	70 0d       	add	r23, r0
    2f24:	11 24       	eor	r1, r1
    2f26:	6e 0d       	add	r22, r14
    2f28:	7f 1d       	adc	r23, r15
    2f2a:	40 e0       	ldi	r20, 0x00	; 0
    2f2c:	50 e0       	ldi	r21, 0x00	; 0
    2f2e:	da cf       	rjmp	.-76     	; 0x2ee4 <mtx_mul_10x10+0x158>
		for( j=0;j<10;j++)
			ANS[i][j]=buffer[i][j];
}
    2f30:	cc 56       	subi	r28, 0x6C	; 108
    2f32:	de 4f       	sbci	r29, 0xFE	; 254
    2f34:	cd bf       	out	0x3d, r28	; 61
    2f36:	de bf       	out	0x3e, r29	; 62
    2f38:	cf 91       	pop	r28
    2f3a:	df 91       	pop	r29
    2f3c:	1f 91       	pop	r17
    2f3e:	0f 91       	pop	r16
    2f40:	ff 90       	pop	r15
    2f42:	ef 90       	pop	r14
    2f44:	df 90       	pop	r13
    2f46:	cf 90       	pop	r12
    2f48:	bf 90       	pop	r11
    2f4a:	af 90       	pop	r10
    2f4c:	9f 90       	pop	r9
    2f4e:	8f 90       	pop	r8
    2f50:	7f 90       	pop	r7
    2f52:	6f 90       	pop	r6
    2f54:	5f 90       	pop	r5
    2f56:	4f 90       	pop	r4
    2f58:	3f 90       	pop	r3
    2f5a:	2f 90       	pop	r2
    2f5c:	08 95       	ret

00002f5e <mtx_mul_3x1>:

void mtx_mul_3x1(double ANS[3],double A[3][3],double B[3]){
    2f5e:	4f 92       	push	r4
    2f60:	5f 92       	push	r5
    2f62:	6f 92       	push	r6
    2f64:	7f 92       	push	r7
    2f66:	8f 92       	push	r8
    2f68:	9f 92       	push	r9
    2f6a:	af 92       	push	r10
    2f6c:	bf 92       	push	r11
    2f6e:	cf 92       	push	r12
    2f70:	df 92       	push	r13
    2f72:	ef 92       	push	r14
    2f74:	ff 92       	push	r15
    2f76:	0f 93       	push	r16
    2f78:	1f 93       	push	r17
    2f7a:	df 93       	push	r29
    2f7c:	cf 93       	push	r28
    2f7e:	cd b7       	in	r28, 0x3d	; 61
    2f80:	de b7       	in	r29, 0x3e	; 62
    2f82:	2c 97       	sbiw	r28, 0x0c	; 12
    2f84:	cd bf       	out	0x3d, r28	; 61
    2f86:	de bf       	out	0x3e, r29	; 62
    2f88:	3c 01       	movw	r6, r24
    2f8a:	4a 01       	movw	r8, r20
	double buffer[3]={0,0,0};
    2f8c:	de 01       	movw	r26, r28
    2f8e:	11 96       	adiw	r26, 0x01	; 1
    2f90:	e3 e0       	ldi	r30, 0x03	; 3
    2f92:	f0 e2       	ldi	r31, 0x20	; 32
    2f94:	8c e0       	ldi	r24, 0x0C	; 12
    2f96:	01 90       	ld	r0, Z+
    2f98:	0d 92       	st	X+, r0
    2f9a:	81 50       	subi	r24, 0x01	; 1
    2f9c:	e1 f7       	brne	.-8      	; 0x2f96 <mtx_mul_3x1+0x38>
    2f9e:	5e 01       	movw	r10, r28
    2fa0:	08 94       	sec
    2fa2:	a1 1c       	adc	r10, r1
    2fa4:	b1 1c       	adc	r11, r1
    2fa6:	6b 01       	movw	r12, r22
	for(int i=0;i<3;i++)
    2fa8:	2d e0       	ldi	r18, 0x0D	; 13
    2faa:	42 2e       	mov	r4, r18
    2fac:	51 2c       	mov	r5, r1
    2fae:	4c 0e       	add	r4, r28
    2fb0:	5d 1e       	adc	r5, r29
		for(int j=0;j<3;j++)
				buffer[i]+= A[i][j]*B[j];
    2fb2:	f6 01       	movw	r30, r12
    2fb4:	60 81       	ld	r22, Z
    2fb6:	71 81       	ldd	r23, Z+1	; 0x01
    2fb8:	82 81       	ldd	r24, Z+2	; 0x02
    2fba:	93 81       	ldd	r25, Z+3	; 0x03
    2fbc:	f4 01       	movw	r30, r8
    2fbe:	20 81       	ld	r18, Z
    2fc0:	31 81       	ldd	r19, Z+1	; 0x01
    2fc2:	42 81       	ldd	r20, Z+2	; 0x02
    2fc4:	53 81       	ldd	r21, Z+3	; 0x03
    2fc6:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    2fca:	f5 01       	movw	r30, r10
    2fcc:	20 81       	ld	r18, Z
    2fce:	31 81       	ldd	r19, Z+1	; 0x01
    2fd0:	42 81       	ldd	r20, Z+2	; 0x02
    2fd2:	53 81       	ldd	r21, Z+3	; 0x03
    2fd4:	0e 94 89 1c 	call	0x3912	; 0x3912 <__addsf3>
    2fd8:	7b 01       	movw	r14, r22
    2fda:	8c 01       	movw	r16, r24
    2fdc:	f6 01       	movw	r30, r12
    2fde:	64 81       	ldd	r22, Z+4	; 0x04
    2fe0:	75 81       	ldd	r23, Z+5	; 0x05
    2fe2:	86 81       	ldd	r24, Z+6	; 0x06
    2fe4:	97 81       	ldd	r25, Z+7	; 0x07
    2fe6:	f4 01       	movw	r30, r8
    2fe8:	24 81       	ldd	r18, Z+4	; 0x04
    2fea:	35 81       	ldd	r19, Z+5	; 0x05
    2fec:	46 81       	ldd	r20, Z+6	; 0x06
    2fee:	57 81       	ldd	r21, Z+7	; 0x07
    2ff0:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    2ff4:	9b 01       	movw	r18, r22
    2ff6:	ac 01       	movw	r20, r24
    2ff8:	c8 01       	movw	r24, r16
    2ffa:	b7 01       	movw	r22, r14
    2ffc:	0e 94 89 1c 	call	0x3912	; 0x3912 <__addsf3>
    3000:	7b 01       	movw	r14, r22
    3002:	8c 01       	movw	r16, r24
    3004:	f6 01       	movw	r30, r12
    3006:	60 85       	ldd	r22, Z+8	; 0x08
    3008:	71 85       	ldd	r23, Z+9	; 0x09
    300a:	82 85       	ldd	r24, Z+10	; 0x0a
    300c:	93 85       	ldd	r25, Z+11	; 0x0b
    300e:	f4 01       	movw	r30, r8
    3010:	20 85       	ldd	r18, Z+8	; 0x08
    3012:	31 85       	ldd	r19, Z+9	; 0x09
    3014:	42 85       	ldd	r20, Z+10	; 0x0a
    3016:	53 85       	ldd	r21, Z+11	; 0x0b
    3018:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    301c:	9b 01       	movw	r18, r22
    301e:	ac 01       	movw	r20, r24
    3020:	c8 01       	movw	r24, r16
    3022:	b7 01       	movw	r22, r14
    3024:	0e 94 89 1c 	call	0x3912	; 0x3912 <__addsf3>
    3028:	f5 01       	movw	r30, r10
    302a:	61 93       	st	Z+, r22
    302c:	71 93       	st	Z+, r23
    302e:	81 93       	st	Z+, r24
    3030:	91 93       	st	Z+, r25
    3032:	5f 01       	movw	r10, r30
    3034:	8c e0       	ldi	r24, 0x0C	; 12
    3036:	90 e0       	ldi	r25, 0x00	; 0
    3038:	c8 0e       	add	r12, r24
    303a:	d9 1e       	adc	r13, r25
			ANS[i][j]=buffer[i][j];
}

void mtx_mul_3x1(double ANS[3],double A[3][3],double B[3]){
	double buffer[3]={0,0,0};
	for(int i=0;i<3;i++)
    303c:	e4 15       	cp	r30, r4
    303e:	f5 05       	cpc	r31, r5
    3040:	09 f0       	breq	.+2      	; 0x3044 <mtx_mul_3x1+0xe6>
    3042:	b7 cf       	rjmp	.-146    	; 0x2fb2 <mtx_mul_3x1+0x54>
		for(int j=0;j<3;j++)
				buffer[i]+= A[i][j]*B[j];
	for(int i=0;i<3;i++)
			ANS[i]=buffer[i];
    3044:	89 81       	ldd	r24, Y+1	; 0x01
    3046:	9a 81       	ldd	r25, Y+2	; 0x02
    3048:	ab 81       	ldd	r26, Y+3	; 0x03
    304a:	bc 81       	ldd	r27, Y+4	; 0x04
    304c:	f3 01       	movw	r30, r6
    304e:	80 83       	st	Z, r24
    3050:	91 83       	std	Z+1, r25	; 0x01
    3052:	a2 83       	std	Z+2, r26	; 0x02
    3054:	b3 83       	std	Z+3, r27	; 0x03
    3056:	8d 81       	ldd	r24, Y+5	; 0x05
    3058:	9e 81       	ldd	r25, Y+6	; 0x06
    305a:	af 81       	ldd	r26, Y+7	; 0x07
    305c:	b8 85       	ldd	r27, Y+8	; 0x08
    305e:	84 83       	std	Z+4, r24	; 0x04
    3060:	95 83       	std	Z+5, r25	; 0x05
    3062:	a6 83       	std	Z+6, r26	; 0x06
    3064:	b7 83       	std	Z+7, r27	; 0x07
    3066:	89 85       	ldd	r24, Y+9	; 0x09
    3068:	9a 85       	ldd	r25, Y+10	; 0x0a
    306a:	ab 85       	ldd	r26, Y+11	; 0x0b
    306c:	bc 85       	ldd	r27, Y+12	; 0x0c
    306e:	80 87       	std	Z+8, r24	; 0x08
    3070:	91 87       	std	Z+9, r25	; 0x09
    3072:	a2 87       	std	Z+10, r26	; 0x0a
    3074:	b3 87       	std	Z+11, r27	; 0x0b
}
    3076:	2c 96       	adiw	r28, 0x0c	; 12
    3078:	cd bf       	out	0x3d, r28	; 61
    307a:	de bf       	out	0x3e, r29	; 62
    307c:	cf 91       	pop	r28
    307e:	df 91       	pop	r29
    3080:	1f 91       	pop	r17
    3082:	0f 91       	pop	r16
    3084:	ff 90       	pop	r15
    3086:	ef 90       	pop	r14
    3088:	df 90       	pop	r13
    308a:	cf 90       	pop	r12
    308c:	bf 90       	pop	r11
    308e:	af 90       	pop	r10
    3090:	9f 90       	pop	r9
    3092:	8f 90       	pop	r8
    3094:	7f 90       	pop	r7
    3096:	6f 90       	pop	r6
    3098:	5f 90       	pop	r5
    309a:	4f 90       	pop	r4
    309c:	08 95       	ret

0000309e <mtx_mul_10x1>:

void mtx_mul_10x1(double ANS[10],double A[10][10],double B[10]){
    309e:	2f 92       	push	r2
    30a0:	3f 92       	push	r3
    30a2:	4f 92       	push	r4
    30a4:	5f 92       	push	r5
    30a6:	6f 92       	push	r6
    30a8:	7f 92       	push	r7
    30aa:	8f 92       	push	r8
    30ac:	9f 92       	push	r9
    30ae:	af 92       	push	r10
    30b0:	bf 92       	push	r11
    30b2:	cf 92       	push	r12
    30b4:	df 92       	push	r13
    30b6:	ef 92       	push	r14
    30b8:	ff 92       	push	r15
    30ba:	0f 93       	push	r16
    30bc:	1f 93       	push	r17
    30be:	df 93       	push	r29
    30c0:	cf 93       	push	r28
    30c2:	cd b7       	in	r28, 0x3d	; 61
    30c4:	de b7       	in	r29, 0x3e	; 62
    30c6:	a8 97       	sbiw	r28, 0x28	; 40
    30c8:	cd bf       	out	0x3d, r28	; 61
    30ca:	de bf       	out	0x3e, r29	; 62
    30cc:	1c 01       	movw	r2, r24
    30ce:	3a 01       	movw	r6, r20
	int i,j;
	double buffer[10]={0,0,0,0,0,0,0,0,0,0};
    30d0:	fe 01       	movw	r30, r28
    30d2:	31 96       	adiw	r30, 0x01	; 1
    30d4:	88 e2       	ldi	r24, 0x28	; 40
    30d6:	df 01       	movw	r26, r30
    30d8:	1d 92       	st	X+, r1
    30da:	8a 95       	dec	r24
    30dc:	e9 f7       	brne	.-6      	; 0x30d8 <mtx_mul_10x1+0x3a>
    30de:	4f 01       	movw	r8, r30
    30e0:	5b 01       	movw	r10, r22
	for( i=0;i<10;i++)
    30e2:	39 e2       	ldi	r19, 0x29	; 41
    30e4:	43 2e       	mov	r4, r19
    30e6:	51 2c       	mov	r5, r1
    30e8:	4c 0e       	add	r4, r28
    30ea:	5d 1e       	adc	r5, r29
    30ec:	2d c0       	rjmp	.+90     	; 0x3148 <mtx_mul_10x1+0xaa>
		for( j=0;j<10;j++)
				buffer[i]+= A[i][j]*B[j];
    30ee:	f5 01       	movw	r30, r10
    30f0:	ec 0d       	add	r30, r12
    30f2:	fd 1d       	adc	r31, r13
    30f4:	d3 01       	movw	r26, r6
    30f6:	ac 0d       	add	r26, r12
    30f8:	bd 1d       	adc	r27, r13
    30fa:	60 81       	ld	r22, Z
    30fc:	71 81       	ldd	r23, Z+1	; 0x01
    30fe:	82 81       	ldd	r24, Z+2	; 0x02
    3100:	93 81       	ldd	r25, Z+3	; 0x03
    3102:	2d 91       	ld	r18, X+
    3104:	3d 91       	ld	r19, X+
    3106:	4d 91       	ld	r20, X+
    3108:	5c 91       	ld	r21, X
    310a:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    310e:	9b 01       	movw	r18, r22
    3110:	ac 01       	movw	r20, r24
    3112:	c8 01       	movw	r24, r16
    3114:	b7 01       	movw	r22, r14
    3116:	0e 94 89 1c 	call	0x3912	; 0x3912 <__addsf3>
    311a:	7b 01       	movw	r14, r22
    311c:	8c 01       	movw	r16, r24
    311e:	e4 e0       	ldi	r30, 0x04	; 4
    3120:	f0 e0       	ldi	r31, 0x00	; 0
    3122:	ce 0e       	add	r12, r30
    3124:	df 1e       	adc	r13, r31

void mtx_mul_10x1(double ANS[10],double A[10][10],double B[10]){
	int i,j;
	double buffer[10]={0,0,0,0,0,0,0,0,0,0};
	for( i=0;i<10;i++)
		for( j=0;j<10;j++)
    3126:	f8 e2       	ldi	r31, 0x28	; 40
    3128:	cf 16       	cp	r12, r31
    312a:	d1 04       	cpc	r13, r1
    312c:	01 f7       	brne	.-64     	; 0x30ee <mtx_mul_10x1+0x50>
    312e:	d4 01       	movw	r26, r8
    3130:	6d 93       	st	X+, r22
    3132:	7d 93       	st	X+, r23
    3134:	8d 93       	st	X+, r24
    3136:	9d 93       	st	X+, r25
    3138:	4d 01       	movw	r8, r26
    313a:	e8 e2       	ldi	r30, 0x28	; 40
    313c:	f0 e0       	ldi	r31, 0x00	; 0
    313e:	ae 0e       	add	r10, r30
    3140:	bf 1e       	adc	r11, r31
}

void mtx_mul_10x1(double ANS[10],double A[10][10],double B[10]){
	int i,j;
	double buffer[10]={0,0,0,0,0,0,0,0,0,0};
	for( i=0;i<10;i++)
    3142:	a4 15       	cp	r26, r4
    3144:	b5 05       	cpc	r27, r5
    3146:	41 f0       	breq	.+16     	; 0x3158 <mtx_mul_10x1+0xba>
    3148:	d4 01       	movw	r26, r8
    314a:	ed 90       	ld	r14, X+
    314c:	fd 90       	ld	r15, X+
    314e:	0d 91       	ld	r16, X+
    3150:	1c 91       	ld	r17, X
    3152:	cc 24       	eor	r12, r12
    3154:	dd 24       	eor	r13, r13
    3156:	cb cf       	rjmp	.-106    	; 0x30ee <mtx_mul_10x1+0x50>
    3158:	40 e0       	ldi	r20, 0x00	; 0
    315a:	50 e0       	ldi	r21, 0x00	; 0
		for( j=0;j<10;j++)
				buffer[i]+= A[i][j]*B[j];
	for( i=0;i<10;i++)
			ANS[i]=buffer[i];
    315c:	be 01       	movw	r22, r28
    315e:	6f 5f       	subi	r22, 0xFF	; 255
    3160:	7f 4f       	sbci	r23, 0xFF	; 255
    3162:	91 01       	movw	r18, r2
    3164:	24 0f       	add	r18, r20
    3166:	35 1f       	adc	r19, r21
    3168:	fb 01       	movw	r30, r22
    316a:	e4 0f       	add	r30, r20
    316c:	f5 1f       	adc	r31, r21
    316e:	80 81       	ld	r24, Z
    3170:	91 81       	ldd	r25, Z+1	; 0x01
    3172:	a2 81       	ldd	r26, Z+2	; 0x02
    3174:	b3 81       	ldd	r27, Z+3	; 0x03
    3176:	f9 01       	movw	r30, r18
    3178:	80 83       	st	Z, r24
    317a:	91 83       	std	Z+1, r25	; 0x01
    317c:	a2 83       	std	Z+2, r26	; 0x02
    317e:	b3 83       	std	Z+3, r27	; 0x03
    3180:	4c 5f       	subi	r20, 0xFC	; 252
    3182:	5f 4f       	sbci	r21, 0xFF	; 255
	int i,j;
	double buffer[10]={0,0,0,0,0,0,0,0,0,0};
	for( i=0;i<10;i++)
		for( j=0;j<10;j++)
				buffer[i]+= A[i][j]*B[j];
	for( i=0;i<10;i++)
    3184:	48 32       	cpi	r20, 0x28	; 40
    3186:	51 05       	cpc	r21, r1
    3188:	61 f7       	brne	.-40     	; 0x3162 <mtx_mul_10x1+0xc4>
			ANS[i]=buffer[i];
}
    318a:	a8 96       	adiw	r28, 0x28	; 40
    318c:	cd bf       	out	0x3d, r28	; 61
    318e:	de bf       	out	0x3e, r29	; 62
    3190:	cf 91       	pop	r28
    3192:	df 91       	pop	r29
    3194:	1f 91       	pop	r17
    3196:	0f 91       	pop	r16
    3198:	ff 90       	pop	r15
    319a:	ef 90       	pop	r14
    319c:	df 90       	pop	r13
    319e:	cf 90       	pop	r12
    31a0:	bf 90       	pop	r11
    31a2:	af 90       	pop	r10
    31a4:	9f 90       	pop	r9
    31a6:	8f 90       	pop	r8
    31a8:	7f 90       	pop	r7
    31aa:	6f 90       	pop	r6
    31ac:	5f 90       	pop	r5
    31ae:	4f 90       	pop	r4
    31b0:	3f 90       	pop	r3
    31b2:	2f 90       	pop	r2
    31b4:	08 95       	ret

000031b6 <mtx_add_3x3>:

void mtx_add_3x3(double ANS[3][3],double A[3][3],double B[3][3],double s){
    31b6:	8f 92       	push	r8
    31b8:	9f 92       	push	r9
    31ba:	af 92       	push	r10
    31bc:	bf 92       	push	r11
    31be:	cf 92       	push	r12
    31c0:	df 92       	push	r13
    31c2:	ef 92       	push	r14
    31c4:	ff 92       	push	r15
    31c6:	0f 93       	push	r16
    31c8:	1f 93       	push	r17
    31ca:	cf 93       	push	r28
    31cc:	df 93       	push	r29
    31ce:	68 01       	movw	r12, r16
    31d0:	79 01       	movw	r14, r18
    31d2:	5b 01       	movw	r10, r22
    31d4:	8a 01       	movw	r16, r20
    31d6:	ec 01       	movw	r28, r24
    31d8:	88 24       	eor	r8, r8
    31da:	99 24       	eor	r9, r9
	for(int i=0;i<3;i++)
		for(int j=0;j<3;j++)
			ANS[i][j]= A[i][j]+s*B[i][j];
    31dc:	c7 01       	movw	r24, r14
    31de:	b6 01       	movw	r22, r12
    31e0:	f8 01       	movw	r30, r16
    31e2:	20 81       	ld	r18, Z
    31e4:	31 81       	ldd	r19, Z+1	; 0x01
    31e6:	42 81       	ldd	r20, Z+2	; 0x02
    31e8:	53 81       	ldd	r21, Z+3	; 0x03
    31ea:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    31ee:	9b 01       	movw	r18, r22
    31f0:	ac 01       	movw	r20, r24
    31f2:	f5 01       	movw	r30, r10
    31f4:	60 81       	ld	r22, Z
    31f6:	71 81       	ldd	r23, Z+1	; 0x01
    31f8:	82 81       	ldd	r24, Z+2	; 0x02
    31fa:	93 81       	ldd	r25, Z+3	; 0x03
    31fc:	0e 94 89 1c 	call	0x3912	; 0x3912 <__addsf3>
    3200:	68 83       	st	Y, r22
    3202:	79 83       	std	Y+1, r23	; 0x01
    3204:	8a 83       	std	Y+2, r24	; 0x02
    3206:	9b 83       	std	Y+3, r25	; 0x03
    3208:	c7 01       	movw	r24, r14
    320a:	b6 01       	movw	r22, r12
    320c:	f8 01       	movw	r30, r16
    320e:	24 81       	ldd	r18, Z+4	; 0x04
    3210:	35 81       	ldd	r19, Z+5	; 0x05
    3212:	46 81       	ldd	r20, Z+6	; 0x06
    3214:	57 81       	ldd	r21, Z+7	; 0x07
    3216:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    321a:	9b 01       	movw	r18, r22
    321c:	ac 01       	movw	r20, r24
    321e:	f5 01       	movw	r30, r10
    3220:	64 81       	ldd	r22, Z+4	; 0x04
    3222:	75 81       	ldd	r23, Z+5	; 0x05
    3224:	86 81       	ldd	r24, Z+6	; 0x06
    3226:	97 81       	ldd	r25, Z+7	; 0x07
    3228:	0e 94 89 1c 	call	0x3912	; 0x3912 <__addsf3>
    322c:	6c 83       	std	Y+4, r22	; 0x04
    322e:	7d 83       	std	Y+5, r23	; 0x05
    3230:	8e 83       	std	Y+6, r24	; 0x06
    3232:	9f 83       	std	Y+7, r25	; 0x07
    3234:	c7 01       	movw	r24, r14
    3236:	b6 01       	movw	r22, r12
    3238:	f8 01       	movw	r30, r16
    323a:	20 85       	ldd	r18, Z+8	; 0x08
    323c:	31 85       	ldd	r19, Z+9	; 0x09
    323e:	42 85       	ldd	r20, Z+10	; 0x0a
    3240:	53 85       	ldd	r21, Z+11	; 0x0b
    3242:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    3246:	9b 01       	movw	r18, r22
    3248:	ac 01       	movw	r20, r24
    324a:	f5 01       	movw	r30, r10
    324c:	60 85       	ldd	r22, Z+8	; 0x08
    324e:	71 85       	ldd	r23, Z+9	; 0x09
    3250:	82 85       	ldd	r24, Z+10	; 0x0a
    3252:	93 85       	ldd	r25, Z+11	; 0x0b
    3254:	0e 94 89 1c 	call	0x3912	; 0x3912 <__addsf3>
    3258:	68 87       	std	Y+8, r22	; 0x08
    325a:	79 87       	std	Y+9, r23	; 0x09
    325c:	8a 87       	std	Y+10, r24	; 0x0a
    325e:	9b 87       	std	Y+11, r25	; 0x0b
	for( i=0;i<10;i++)
			ANS[i]=buffer[i];
}

void mtx_add_3x3(double ANS[3][3],double A[3][3],double B[3][3],double s){
	for(int i=0;i<3;i++)
    3260:	08 94       	sec
    3262:	81 1c       	adc	r8, r1
    3264:	91 1c       	adc	r9, r1
    3266:	8c e0       	ldi	r24, 0x0C	; 12
    3268:	90 e0       	ldi	r25, 0x00	; 0
    326a:	a8 0e       	add	r10, r24
    326c:	b9 1e       	adc	r11, r25
    326e:	04 5f       	subi	r16, 0xF4	; 244
    3270:	1f 4f       	sbci	r17, 0xFF	; 255
    3272:	2c 96       	adiw	r28, 0x0c	; 12
    3274:	93 e0       	ldi	r25, 0x03	; 3
    3276:	89 16       	cp	r8, r25
    3278:	91 04       	cpc	r9, r1
    327a:	09 f0       	breq	.+2      	; 0x327e <mtx_add_3x3+0xc8>
    327c:	af cf       	rjmp	.-162    	; 0x31dc <mtx_add_3x3+0x26>
		for(int j=0;j<3;j++)
			ANS[i][j]= A[i][j]+s*B[i][j];
}
    327e:	df 91       	pop	r29
    3280:	cf 91       	pop	r28
    3282:	1f 91       	pop	r17
    3284:	0f 91       	pop	r16
    3286:	ff 90       	pop	r15
    3288:	ef 90       	pop	r14
    328a:	df 90       	pop	r13
    328c:	cf 90       	pop	r12
    328e:	bf 90       	pop	r11
    3290:	af 90       	pop	r10
    3292:	9f 90       	pop	r9
    3294:	8f 90       	pop	r8
    3296:	08 95       	ret

00003298 <mtx_add_10x10>:

void mtx_add_10x10(double ANS[10][10],double A[10][10],double B[10][10],double s){
    3298:	2f 92       	push	r2
    329a:	3f 92       	push	r3
    329c:	4f 92       	push	r4
    329e:	5f 92       	push	r5
    32a0:	6f 92       	push	r6
    32a2:	7f 92       	push	r7
    32a4:	8f 92       	push	r8
    32a6:	9f 92       	push	r9
    32a8:	af 92       	push	r10
    32aa:	bf 92       	push	r11
    32ac:	cf 92       	push	r12
    32ae:	df 92       	push	r13
    32b0:	ef 92       	push	r14
    32b2:	ff 92       	push	r15
    32b4:	0f 93       	push	r16
    32b6:	1f 93       	push	r17
    32b8:	df 93       	push	r29
    32ba:	cf 93       	push	r28
    32bc:	00 d0       	rcall	.+0      	; 0x32be <mtx_add_10x10+0x26>
    32be:	00 d0       	rcall	.+0      	; 0x32c0 <mtx_add_10x10+0x28>
    32c0:	cd b7       	in	r28, 0x3d	; 61
    32c2:	de b7       	in	r29, 0x3e	; 62
    32c4:	89 83       	std	Y+1, r24	; 0x01
    32c6:	9a 83       	std	Y+2, r25	; 0x02
    32c8:	4b 83       	std	Y+3, r20	; 0x03
    32ca:	5c 83       	std	Y+4, r21	; 0x04
    32cc:	38 01       	movw	r6, r16
    32ce:	49 01       	movw	r8, r18
    32d0:	5b 01       	movw	r10, r22
    32d2:	cc 24       	eor	r12, r12
    32d4:	dd 24       	eor	r13, r13
    32d6:	34 c0       	rjmp	.+104    	; 0x3340 <mtx_add_10x10+0xa8>
	int i,j;
	for( i=0;i<10;i++)
		for( j=0;j<10;j++)
			ANS[i][j]= A[i][j]+s*B[i][j];
    32d8:	ed 80       	ldd	r14, Y+5	; 0x05
    32da:	fe 80       	ldd	r15, Y+6	; 0x06
    32dc:	e2 0c       	add	r14, r2
    32de:	f3 1c       	adc	r15, r3
    32e0:	0d 81       	ldd	r16, Y+5	; 0x05
    32e2:	1e 81       	ldd	r17, Y+6	; 0x06
    32e4:	0a 0d       	add	r16, r10
    32e6:	1b 1d       	adc	r17, r11
    32e8:	ed 81       	ldd	r30, Y+5	; 0x05
    32ea:	fe 81       	ldd	r31, Y+6	; 0x06
    32ec:	e4 0d       	add	r30, r4
    32ee:	f5 1d       	adc	r31, r5
    32f0:	c4 01       	movw	r24, r8
    32f2:	b3 01       	movw	r22, r6
    32f4:	20 81       	ld	r18, Z
    32f6:	31 81       	ldd	r19, Z+1	; 0x01
    32f8:	42 81       	ldd	r20, Z+2	; 0x02
    32fa:	53 81       	ldd	r21, Z+3	; 0x03
    32fc:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    3300:	9b 01       	movw	r18, r22
    3302:	ac 01       	movw	r20, r24
    3304:	f8 01       	movw	r30, r16
    3306:	60 81       	ld	r22, Z
    3308:	71 81       	ldd	r23, Z+1	; 0x01
    330a:	82 81       	ldd	r24, Z+2	; 0x02
    330c:	93 81       	ldd	r25, Z+3	; 0x03
    330e:	0e 94 89 1c 	call	0x3912	; 0x3912 <__addsf3>
    3312:	f7 01       	movw	r30, r14
    3314:	60 83       	st	Z, r22
    3316:	71 83       	std	Z+1, r23	; 0x01
    3318:	82 83       	std	Z+2, r24	; 0x02
    331a:	93 83       	std	Z+3, r25	; 0x03
    331c:	8d 81       	ldd	r24, Y+5	; 0x05
    331e:	9e 81       	ldd	r25, Y+6	; 0x06
    3320:	04 96       	adiw	r24, 0x04	; 4
    3322:	8d 83       	std	Y+5, r24	; 0x05
    3324:	9e 83       	std	Y+6, r25	; 0x06
}

void mtx_add_10x10(double ANS[10][10],double A[10][10],double B[10][10],double s){
	int i,j;
	for( i=0;i<10;i++)
		for( j=0;j<10;j++)
    3326:	88 97       	sbiw	r24, 0x28	; 40
    3328:	b9 f6       	brne	.-82     	; 0x32d8 <mtx_add_10x10+0x40>
    332a:	e8 e2       	ldi	r30, 0x28	; 40
    332c:	f0 e0       	ldi	r31, 0x00	; 0
    332e:	ae 0e       	add	r10, r30
    3330:	bf 1e       	adc	r11, r31
    3332:	ce 0e       	add	r12, r30
    3334:	df 1e       	adc	r13, r31
			ANS[i][j]= A[i][j]+s*B[i][j];
}

void mtx_add_10x10(double ANS[10][10],double A[10][10],double B[10][10],double s){
	int i,j;
	for( i=0;i<10;i++)
    3336:	f0 e9       	ldi	r31, 0x90	; 144
    3338:	cf 16       	cp	r12, r31
    333a:	f1 e0       	ldi	r31, 0x01	; 1
    333c:	df 06       	cpc	r13, r31
    333e:	59 f0       	breq	.+22     	; 0x3356 <mtx_add_10x10+0xbe>
    3340:	29 80       	ldd	r2, Y+1	; 0x01
    3342:	3a 80       	ldd	r3, Y+2	; 0x02
    3344:	2c 0c       	add	r2, r12
    3346:	3d 1c       	adc	r3, r13
    3348:	4b 80       	ldd	r4, Y+3	; 0x03
    334a:	5c 80       	ldd	r5, Y+4	; 0x04
    334c:	4c 0c       	add	r4, r12
    334e:	5d 1c       	adc	r5, r13
    3350:	1d 82       	std	Y+5, r1	; 0x05
    3352:	1e 82       	std	Y+6, r1	; 0x06
    3354:	c1 cf       	rjmp	.-126    	; 0x32d8 <mtx_add_10x10+0x40>
		for( j=0;j<10;j++)
			ANS[i][j]= A[i][j]+s*B[i][j];
}
    3356:	26 96       	adiw	r28, 0x06	; 6
    3358:	cd bf       	out	0x3d, r28	; 61
    335a:	de bf       	out	0x3e, r29	; 62
    335c:	cf 91       	pop	r28
    335e:	df 91       	pop	r29
    3360:	1f 91       	pop	r17
    3362:	0f 91       	pop	r16
    3364:	ff 90       	pop	r15
    3366:	ef 90       	pop	r14
    3368:	df 90       	pop	r13
    336a:	cf 90       	pop	r12
    336c:	bf 90       	pop	r11
    336e:	af 90       	pop	r10
    3370:	9f 90       	pop	r9
    3372:	8f 90       	pop	r8
    3374:	7f 90       	pop	r7
    3376:	6f 90       	pop	r6
    3378:	5f 90       	pop	r5
    337a:	4f 90       	pop	r4
    337c:	3f 90       	pop	r3
    337e:	2f 90       	pop	r2
    3380:	08 95       	ret

00003382 <mtx_add_3x1>:

void mtx_add_3x1(double ANS[3],double A[3],double B[3],double s){
    3382:	4f 92       	push	r4
    3384:	5f 92       	push	r5
    3386:	6f 92       	push	r6
    3388:	7f 92       	push	r7
    338a:	8f 92       	push	r8
    338c:	9f 92       	push	r9
    338e:	af 92       	push	r10
    3390:	bf 92       	push	r11
    3392:	cf 92       	push	r12
    3394:	df 92       	push	r13
    3396:	ef 92       	push	r14
    3398:	ff 92       	push	r15
    339a:	0f 93       	push	r16
    339c:	1f 93       	push	r17
    339e:	cf 93       	push	r28
    33a0:	df 93       	push	r29
    33a2:	2c 01       	movw	r4, r24
    33a4:	3b 01       	movw	r6, r22
    33a6:	4a 01       	movw	r8, r20
    33a8:	58 01       	movw	r10, r16
    33aa:	69 01       	movw	r12, r18
    33ac:	c0 e0       	ldi	r28, 0x00	; 0
    33ae:	d0 e0       	ldi	r29, 0x00	; 0
	for(int i=0;i<3;i++)
		ANS[i]= A[i]+s*B[i];
    33b0:	72 01       	movw	r14, r4
    33b2:	ec 0e       	add	r14, r28
    33b4:	fd 1e       	adc	r15, r29
    33b6:	83 01       	movw	r16, r6
    33b8:	0c 0f       	add	r16, r28
    33ba:	1d 1f       	adc	r17, r29
    33bc:	f4 01       	movw	r30, r8
    33be:	ec 0f       	add	r30, r28
    33c0:	fd 1f       	adc	r31, r29
    33c2:	c6 01       	movw	r24, r12
    33c4:	b5 01       	movw	r22, r10
    33c6:	20 81       	ld	r18, Z
    33c8:	31 81       	ldd	r19, Z+1	; 0x01
    33ca:	42 81       	ldd	r20, Z+2	; 0x02
    33cc:	53 81       	ldd	r21, Z+3	; 0x03
    33ce:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    33d2:	9b 01       	movw	r18, r22
    33d4:	ac 01       	movw	r20, r24
    33d6:	f8 01       	movw	r30, r16
    33d8:	60 81       	ld	r22, Z
    33da:	71 81       	ldd	r23, Z+1	; 0x01
    33dc:	82 81       	ldd	r24, Z+2	; 0x02
    33de:	93 81       	ldd	r25, Z+3	; 0x03
    33e0:	0e 94 89 1c 	call	0x3912	; 0x3912 <__addsf3>
    33e4:	f7 01       	movw	r30, r14
    33e6:	60 83       	st	Z, r22
    33e8:	71 83       	std	Z+1, r23	; 0x01
    33ea:	82 83       	std	Z+2, r24	; 0x02
    33ec:	93 83       	std	Z+3, r25	; 0x03
    33ee:	24 96       	adiw	r28, 0x04	; 4
		for( j=0;j<10;j++)
			ANS[i][j]= A[i][j]+s*B[i][j];
}

void mtx_add_3x1(double ANS[3],double A[3],double B[3],double s){
	for(int i=0;i<3;i++)
    33f0:	cc 30       	cpi	r28, 0x0C	; 12
    33f2:	d1 05       	cpc	r29, r1
    33f4:	e9 f6       	brne	.-70     	; 0x33b0 <mtx_add_3x1+0x2e>
		ANS[i]= A[i]+s*B[i];
}
    33f6:	df 91       	pop	r29
    33f8:	cf 91       	pop	r28
    33fa:	1f 91       	pop	r17
    33fc:	0f 91       	pop	r16
    33fe:	ff 90       	pop	r15
    3400:	ef 90       	pop	r14
    3402:	df 90       	pop	r13
    3404:	cf 90       	pop	r12
    3406:	bf 90       	pop	r11
    3408:	af 90       	pop	r10
    340a:	9f 90       	pop	r9
    340c:	8f 90       	pop	r8
    340e:	7f 90       	pop	r7
    3410:	6f 90       	pop	r6
    3412:	5f 90       	pop	r5
    3414:	4f 90       	pop	r4
    3416:	08 95       	ret

00003418 <mtx_add_10x1>:

void mtx_add_10x1(double ANS[10],double A[10],double B[10],double s){
    3418:	4f 92       	push	r4
    341a:	5f 92       	push	r5
    341c:	6f 92       	push	r6
    341e:	7f 92       	push	r7
    3420:	8f 92       	push	r8
    3422:	9f 92       	push	r9
    3424:	af 92       	push	r10
    3426:	bf 92       	push	r11
    3428:	cf 92       	push	r12
    342a:	df 92       	push	r13
    342c:	ef 92       	push	r14
    342e:	ff 92       	push	r15
    3430:	0f 93       	push	r16
    3432:	1f 93       	push	r17
    3434:	cf 93       	push	r28
    3436:	df 93       	push	r29
    3438:	2c 01       	movw	r4, r24
    343a:	3b 01       	movw	r6, r22
    343c:	4a 01       	movw	r8, r20
    343e:	58 01       	movw	r10, r16
    3440:	69 01       	movw	r12, r18
    3442:	c0 e0       	ldi	r28, 0x00	; 0
    3444:	d0 e0       	ldi	r29, 0x00	; 0
	int i;
	for( i=0;i<10;i++)
		ANS[i]= A[i]+s*B[i];
    3446:	72 01       	movw	r14, r4
    3448:	ec 0e       	add	r14, r28
    344a:	fd 1e       	adc	r15, r29
    344c:	83 01       	movw	r16, r6
    344e:	0c 0f       	add	r16, r28
    3450:	1d 1f       	adc	r17, r29
    3452:	f4 01       	movw	r30, r8
    3454:	ec 0f       	add	r30, r28
    3456:	fd 1f       	adc	r31, r29
    3458:	c6 01       	movw	r24, r12
    345a:	b5 01       	movw	r22, r10
    345c:	20 81       	ld	r18, Z
    345e:	31 81       	ldd	r19, Z+1	; 0x01
    3460:	42 81       	ldd	r20, Z+2	; 0x02
    3462:	53 81       	ldd	r21, Z+3	; 0x03
    3464:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    3468:	9b 01       	movw	r18, r22
    346a:	ac 01       	movw	r20, r24
    346c:	f8 01       	movw	r30, r16
    346e:	60 81       	ld	r22, Z
    3470:	71 81       	ldd	r23, Z+1	; 0x01
    3472:	82 81       	ldd	r24, Z+2	; 0x02
    3474:	93 81       	ldd	r25, Z+3	; 0x03
    3476:	0e 94 89 1c 	call	0x3912	; 0x3912 <__addsf3>
    347a:	f7 01       	movw	r30, r14
    347c:	60 83       	st	Z, r22
    347e:	71 83       	std	Z+1, r23	; 0x01
    3480:	82 83       	std	Z+2, r24	; 0x02
    3482:	93 83       	std	Z+3, r25	; 0x03
    3484:	24 96       	adiw	r28, 0x04	; 4
		ANS[i]= A[i]+s*B[i];
}

void mtx_add_10x1(double ANS[10],double A[10],double B[10],double s){
	int i;
	for( i=0;i<10;i++)
    3486:	c8 32       	cpi	r28, 0x28	; 40
    3488:	d1 05       	cpc	r29, r1
    348a:	e9 f6       	brne	.-70     	; 0x3446 <mtx_add_10x1+0x2e>
		ANS[i]= A[i]+s*B[i];
}
    348c:	df 91       	pop	r29
    348e:	cf 91       	pop	r28
    3490:	1f 91       	pop	r17
    3492:	0f 91       	pop	r16
    3494:	ff 90       	pop	r15
    3496:	ef 90       	pop	r14
    3498:	df 90       	pop	r13
    349a:	cf 90       	pop	r12
    349c:	bf 90       	pop	r11
    349e:	af 90       	pop	r10
    34a0:	9f 90       	pop	r9
    34a2:	8f 90       	pop	r8
    34a4:	7f 90       	pop	r7
    34a6:	6f 90       	pop	r6
    34a8:	5f 90       	pop	r5
    34aa:	4f 90       	pop	r4
    34ac:	08 95       	ret

000034ae <mtx_inv_3x3>:


void mtx_inv_3x3(double ANS[3][3],double a[3][3]){
    34ae:	2f 92       	push	r2
    34b0:	3f 92       	push	r3
    34b2:	4f 92       	push	r4
    34b4:	5f 92       	push	r5
    34b6:	6f 92       	push	r6
    34b8:	7f 92       	push	r7
    34ba:	8f 92       	push	r8
    34bc:	9f 92       	push	r9
    34be:	af 92       	push	r10
    34c0:	bf 92       	push	r11
    34c2:	cf 92       	push	r12
    34c4:	df 92       	push	r13
    34c6:	ef 92       	push	r14
    34c8:	ff 92       	push	r15
    34ca:	0f 93       	push	r16
    34cc:	1f 93       	push	r17
    34ce:	df 93       	push	r29
    34d0:	cf 93       	push	r28
    34d2:	cd b7       	in	r28, 0x3d	; 61
    34d4:	de b7       	in	r29, 0x3e	; 62
    34d6:	ac 97       	sbiw	r28, 0x2c	; 44
    34d8:	cd bf       	out	0x3d, r28	; 61
    34da:	de bf       	out	0x3e, r29	; 62
    34dc:	1c 01       	movw	r2, r24
    34de:	6b 01       	movw	r12, r22
	double det;
	double buffer[3][3]={
	     {   a[2][2]*a[1][1]-a[2][1]*a[1][2],  -(a[2][2]*a[0][1]-a[2][1]*a[0][2]),   a[1][2]*a[0][1]-a[1][1]*a[0][2]},
	 	{-(a[2][2]*a[1][0]-a[2][0]*a[1][2]),   a[2][2]*a[0][0]-a[2][0]*a[0][2],  -(a[1][2]*a[0][0]-a[1][0]*a[0][2])},
	  	{ a[2][1]*a[1][0]-a[2][0]*a[1][1],  -(a[2][1]*a[0][0]-a[2][0]*a[0][1]),  a[1][1]*a[0][0]-a[1][0]*a[0][1]}};
    34e0:	db 01       	movw	r26, r22
    34e2:	58 96       	adiw	r26, 0x18	; 24
    34e4:	18 96       	adiw	r26, 0x08	; 8
    34e6:	2d 91       	ld	r18, X+
    34e8:	3d 91       	ld	r19, X+
    34ea:	4d 91       	ld	r20, X+
    34ec:	5c 91       	ld	r21, X
    34ee:	1b 97       	sbiw	r26, 0x0b	; 11
    34f0:	2d 8f       	std	Y+29, r18	; 0x1d
    34f2:	3e 8f       	std	Y+30, r19	; 0x1e
    34f4:	4f 8f       	std	Y+31, r20	; 0x1f
    34f6:	58 a3       	std	Y+32, r21	; 0x20
    34f8:	64 5f       	subi	r22, 0xF4	; 244
    34fa:	7f 4f       	sbci	r23, 0xFF	; 255
    34fc:	fb 01       	movw	r30, r22
    34fe:	24 81       	ldd	r18, Z+4	; 0x04
    3500:	35 81       	ldd	r19, Z+5	; 0x05
    3502:	46 81       	ldd	r20, Z+6	; 0x06
    3504:	57 81       	ldd	r21, Z+7	; 0x07
    3506:	29 8f       	std	Y+25, r18	; 0x19
    3508:	3a 8f       	std	Y+26, r19	; 0x1a
    350a:	4b 8f       	std	Y+27, r20	; 0x1b
    350c:	5c 8f       	std	Y+28, r21	; 0x1c
    350e:	14 96       	adiw	r26, 0x04	; 4
    3510:	2d 91       	ld	r18, X+
    3512:	3d 91       	ld	r19, X+
    3514:	4d 91       	ld	r20, X+
    3516:	5c 91       	ld	r21, X
    3518:	17 97       	sbiw	r26, 0x07	; 7
    351a:	2d 8b       	std	Y+21, r18	; 0x15
    351c:	3e 8b       	std	Y+22, r19	; 0x16
    351e:	4f 8b       	std	Y+23, r20	; 0x17
    3520:	58 8f       	std	Y+24, r21	; 0x18
    3522:	db 01       	movw	r26, r22
    3524:	18 96       	adiw	r26, 0x08	; 8
    3526:	8d 91       	ld	r24, X+
    3528:	9d 91       	ld	r25, X+
    352a:	0d 90       	ld	r0, X+
    352c:	bc 91       	ld	r27, X
    352e:	a0 2d       	mov	r26, r0
    3530:	89 8b       	std	Y+17, r24	; 0x11
    3532:	9a 8b       	std	Y+18, r25	; 0x12
    3534:	ab 8b       	std	Y+19, r26	; 0x13
    3536:	bc 8b       	std	Y+20, r27	; 0x14
    3538:	6d 8d       	ldd	r22, Y+29	; 0x1d
    353a:	7e 8d       	ldd	r23, Y+30	; 0x1e
    353c:	8f 8d       	ldd	r24, Y+31	; 0x1f
    353e:	98 a1       	ldd	r25, Y+32	; 0x20
    3540:	29 8d       	ldd	r18, Y+25	; 0x19
    3542:	3a 8d       	ldd	r19, Y+26	; 0x1a
    3544:	4b 8d       	ldd	r20, Y+27	; 0x1b
    3546:	5c 8d       	ldd	r21, Y+28	; 0x1c
    3548:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    354c:	7b 01       	movw	r14, r22
    354e:	8c 01       	movw	r16, r24
    3550:	6d 89       	ldd	r22, Y+21	; 0x15
    3552:	7e 89       	ldd	r23, Y+22	; 0x16
    3554:	8f 89       	ldd	r24, Y+23	; 0x17
    3556:	98 8d       	ldd	r25, Y+24	; 0x18
    3558:	29 89       	ldd	r18, Y+17	; 0x11
    355a:	3a 89       	ldd	r19, Y+18	; 0x12
    355c:	4b 89       	ldd	r20, Y+19	; 0x13
    355e:	5c 89       	ldd	r21, Y+20	; 0x14
    3560:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    3564:	9b 01       	movw	r18, r22
    3566:	ac 01       	movw	r20, r24
    3568:	c8 01       	movw	r24, r16
    356a:	b7 01       	movw	r22, r14
    356c:	0e 94 88 1c 	call	0x3910	; 0x3910 <__subsf3>
    3570:	69 a3       	std	Y+33, r22	; 0x21
    3572:	7a a3       	std	Y+34, r23	; 0x22
    3574:	8b a3       	std	Y+35, r24	; 0x23
    3576:	9c a3       	std	Y+36, r25	; 0x24
    3578:	d6 01       	movw	r26, r12
    357a:	14 96       	adiw	r26, 0x04	; 4
    357c:	2d 91       	ld	r18, X+
    357e:	3d 91       	ld	r19, X+
    3580:	4d 91       	ld	r20, X+
    3582:	5c 91       	ld	r21, X
    3584:	17 97       	sbiw	r26, 0x07	; 7
    3586:	2d 87       	std	Y+13, r18	; 0x0d
    3588:	3e 87       	std	Y+14, r19	; 0x0e
    358a:	4f 87       	std	Y+15, r20	; 0x0f
    358c:	58 8b       	std	Y+16, r21	; 0x10
    358e:	18 96       	adiw	r26, 0x08	; 8
    3590:	2d 91       	ld	r18, X+
    3592:	3d 91       	ld	r19, X+
    3594:	4d 91       	ld	r20, X+
    3596:	5c 91       	ld	r21, X
    3598:	1b 97       	sbiw	r26, 0x0b	; 11
    359a:	29 87       	std	Y+9, r18	; 0x09
    359c:	3a 87       	std	Y+10, r19	; 0x0a
    359e:	4b 87       	std	Y+11, r20	; 0x0b
    35a0:	5c 87       	std	Y+12, r21	; 0x0c
    35a2:	6d 8d       	ldd	r22, Y+29	; 0x1d
    35a4:	7e 8d       	ldd	r23, Y+30	; 0x1e
    35a6:	8f 8d       	ldd	r24, Y+31	; 0x1f
    35a8:	98 a1       	ldd	r25, Y+32	; 0x20
    35aa:	2d 85       	ldd	r18, Y+13	; 0x0d
    35ac:	3e 85       	ldd	r19, Y+14	; 0x0e
    35ae:	4f 85       	ldd	r20, Y+15	; 0x0f
    35b0:	58 89       	ldd	r21, Y+16	; 0x10
    35b2:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    35b6:	7b 01       	movw	r14, r22
    35b8:	8c 01       	movw	r16, r24
    35ba:	6d 89       	ldd	r22, Y+21	; 0x15
    35bc:	7e 89       	ldd	r23, Y+22	; 0x16
    35be:	8f 89       	ldd	r24, Y+23	; 0x17
    35c0:	98 8d       	ldd	r25, Y+24	; 0x18
    35c2:	29 85       	ldd	r18, Y+9	; 0x09
    35c4:	3a 85       	ldd	r19, Y+10	; 0x0a
    35c6:	4b 85       	ldd	r20, Y+11	; 0x0b
    35c8:	5c 85       	ldd	r21, Y+12	; 0x0c
    35ca:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    35ce:	9b 01       	movw	r18, r22
    35d0:	ac 01       	movw	r20, r24
    35d2:	c8 01       	movw	r24, r16
    35d4:	b7 01       	movw	r22, r14
    35d6:	0e 94 88 1c 	call	0x3910	; 0x3910 <__subsf3>
    35da:	6d a3       	std	Y+37, r22	; 0x25
    35dc:	7e a3       	std	Y+38, r23	; 0x26
    35de:	8f a3       	std	Y+39, r24	; 0x27
    35e0:	98 a7       	std	Y+40, r25	; 0x28
    35e2:	69 89       	ldd	r22, Y+17	; 0x11
    35e4:	7a 89       	ldd	r23, Y+18	; 0x12
    35e6:	8b 89       	ldd	r24, Y+19	; 0x13
    35e8:	9c 89       	ldd	r25, Y+20	; 0x14
    35ea:	2d 85       	ldd	r18, Y+13	; 0x0d
    35ec:	3e 85       	ldd	r19, Y+14	; 0x0e
    35ee:	4f 85       	ldd	r20, Y+15	; 0x0f
    35f0:	58 89       	ldd	r21, Y+16	; 0x10
    35f2:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    35f6:	7b 01       	movw	r14, r22
    35f8:	8c 01       	movw	r16, r24
    35fa:	69 8d       	ldd	r22, Y+25	; 0x19
    35fc:	7a 8d       	ldd	r23, Y+26	; 0x1a
    35fe:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3600:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3602:	29 85       	ldd	r18, Y+9	; 0x09
    3604:	3a 85       	ldd	r19, Y+10	; 0x0a
    3606:	4b 85       	ldd	r20, Y+11	; 0x0b
    3608:	5c 85       	ldd	r21, Y+12	; 0x0c
    360a:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    360e:	9b 01       	movw	r18, r22
    3610:	ac 01       	movw	r20, r24
    3612:	c8 01       	movw	r24, r16
    3614:	b7 01       	movw	r22, r14
    3616:	0e 94 88 1c 	call	0x3910	; 0x3910 <__subsf3>
    361a:	69 a7       	std	Y+41, r22	; 0x29
    361c:	7a a7       	std	Y+42, r23	; 0x2a
    361e:	8b a7       	std	Y+43, r24	; 0x2b
    3620:	9c a7       	std	Y+44, r25	; 0x2c
    3622:	d6 01       	movw	r26, r12
    3624:	1c 96       	adiw	r26, 0x0c	; 12
    3626:	2d 91       	ld	r18, X+
    3628:	3d 91       	ld	r19, X+
    362a:	4d 91       	ld	r20, X+
    362c:	5c 91       	ld	r21, X
    362e:	1f 97       	sbiw	r26, 0x0f	; 15
    3630:	2d 83       	std	Y+5, r18	; 0x05
    3632:	3e 83       	std	Y+6, r19	; 0x06
    3634:	4f 83       	std	Y+7, r20	; 0x07
    3636:	58 87       	std	Y+8, r21	; 0x08
    3638:	58 96       	adiw	r26, 0x18	; 24
    363a:	4d 90       	ld	r4, X+
    363c:	5d 90       	ld	r5, X+
    363e:	6d 90       	ld	r6, X+
    3640:	7c 90       	ld	r7, X
    3642:	5b 97       	sbiw	r26, 0x1b	; 27
    3644:	2d 91       	ld	r18, X+
    3646:	3d 91       	ld	r19, X+
    3648:	4d 91       	ld	r20, X+
    364a:	5c 91       	ld	r21, X
    364c:	29 83       	std	Y+1, r18	; 0x01
    364e:	3a 83       	std	Y+2, r19	; 0x02
    3650:	4b 83       	std	Y+3, r20	; 0x03
    3652:	5c 83       	std	Y+4, r21	; 0x04

	det  =  a[0][0]*(a[2][2]*a[1][1]-a[2][1]*a[1][2])-a[1][0]*(a[2][2]*a[0][1]-a[2][1]*a[0][2])+a[2][0]*(a[1][2]*a[0][1]-a[1][1]*a[0][2]);
    3654:	ca 01       	movw	r24, r20
    3656:	b9 01       	movw	r22, r18
    3658:	29 a1       	ldd	r18, Y+33	; 0x21
    365a:	3a a1       	ldd	r19, Y+34	; 0x22
    365c:	4b a1       	ldd	r20, Y+35	; 0x23
    365e:	5c a1       	ldd	r21, Y+36	; 0x24
    3660:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    3664:	7b 01       	movw	r14, r22
    3666:	8c 01       	movw	r16, r24
    3668:	6d 81       	ldd	r22, Y+5	; 0x05
    366a:	7e 81       	ldd	r23, Y+6	; 0x06
    366c:	8f 81       	ldd	r24, Y+7	; 0x07
    366e:	98 85       	ldd	r25, Y+8	; 0x08
    3670:	2d a1       	ldd	r18, Y+37	; 0x25
    3672:	3e a1       	ldd	r19, Y+38	; 0x26
    3674:	4f a1       	ldd	r20, Y+39	; 0x27
    3676:	58 a5       	ldd	r21, Y+40	; 0x28
    3678:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    367c:	9b 01       	movw	r18, r22
    367e:	ac 01       	movw	r20, r24
    3680:	c8 01       	movw	r24, r16
    3682:	b7 01       	movw	r22, r14
    3684:	0e 94 88 1c 	call	0x3910	; 0x3910 <__subsf3>
    3688:	7b 01       	movw	r14, r22
    368a:	8c 01       	movw	r16, r24
    368c:	c3 01       	movw	r24, r6
    368e:	b2 01       	movw	r22, r4
    3690:	29 a5       	ldd	r18, Y+41	; 0x29
    3692:	3a a5       	ldd	r19, Y+42	; 0x2a
    3694:	4b a5       	ldd	r20, Y+43	; 0x2b
    3696:	5c a5       	ldd	r21, Y+44	; 0x2c
    3698:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    369c:	9b 01       	movw	r18, r22
    369e:	ac 01       	movw	r20, r24
    36a0:	c8 01       	movw	r24, r16
    36a2:	b7 01       	movw	r22, r14
    36a4:	0e 94 89 1c 	call	0x3912	; 0x3912 <__addsf3>
    36a8:	4b 01       	movw	r8, r22
    36aa:	5c 01       	movw	r10, r24
	if(det==0)
    36ac:	20 e0       	ldi	r18, 0x00	; 0
    36ae:	30 e0       	ldi	r19, 0x00	; 0
    36b0:	40 e0       	ldi	r20, 0x00	; 0
    36b2:	50 e0       	ldi	r21, 0x00	; 0
    36b4:	0e 94 ed 1c 	call	0x39da	; 0x39da <__cmpsf2>
    36b8:	88 23       	and	r24, r24
    36ba:	09 f4       	brne	.+2      	; 0x36be <mtx_inv_3x3+0x210>
    36bc:	13 c1       	rjmp	.+550    	; 0x38e4 <mtx_inv_3x3+0x436>
		return;
	else{
		ANS[0][0]=buffer[0][0]/det;
    36be:	69 a1       	ldd	r22, Y+33	; 0x21
    36c0:	7a a1       	ldd	r23, Y+34	; 0x22
    36c2:	8b a1       	ldd	r24, Y+35	; 0x23
    36c4:	9c a1       	ldd	r25, Y+36	; 0x24
    36c6:	a5 01       	movw	r20, r10
    36c8:	94 01       	movw	r18, r8
    36ca:	0e 94 f1 1c 	call	0x39e2	; 0x39e2 <__divsf3>
    36ce:	f1 01       	movw	r30, r2
    36d0:	60 83       	st	Z, r22
    36d2:	71 83       	std	Z+1, r23	; 0x01
    36d4:	82 83       	std	Z+2, r24	; 0x02
    36d6:	93 83       	std	Z+3, r25	; 0x03
		ANS[0][1]=buffer[0][1]/det;
    36d8:	6d a1       	ldd	r22, Y+37	; 0x25
    36da:	7e a1       	ldd	r23, Y+38	; 0x26
    36dc:	8f a1       	ldd	r24, Y+39	; 0x27
    36de:	98 a5       	ldd	r25, Y+40	; 0x28
    36e0:	90 58       	subi	r25, 0x80	; 128
    36e2:	a5 01       	movw	r20, r10
    36e4:	94 01       	movw	r18, r8
    36e6:	0e 94 f1 1c 	call	0x39e2	; 0x39e2 <__divsf3>
    36ea:	d1 01       	movw	r26, r2
    36ec:	14 96       	adiw	r26, 0x04	; 4
    36ee:	6d 93       	st	X+, r22
    36f0:	7d 93       	st	X+, r23
    36f2:	8d 93       	st	X+, r24
    36f4:	9c 93       	st	X, r25
    36f6:	17 97       	sbiw	r26, 0x07	; 7
		ANS[0][2]=buffer[0][2]/det;
    36f8:	69 a5       	ldd	r22, Y+41	; 0x29
    36fa:	7a a5       	ldd	r23, Y+42	; 0x2a
    36fc:	8b a5       	ldd	r24, Y+43	; 0x2b
    36fe:	9c a5       	ldd	r25, Y+44	; 0x2c
    3700:	a5 01       	movw	r20, r10
    3702:	94 01       	movw	r18, r8
    3704:	0e 94 f1 1c 	call	0x39e2	; 0x39e2 <__divsf3>
    3708:	f1 01       	movw	r30, r2
    370a:	60 87       	std	Z+8, r22	; 0x08
    370c:	71 87       	std	Z+9, r23	; 0x09
    370e:	82 87       	std	Z+10, r24	; 0x0a
    3710:	93 87       	std	Z+11, r25	; 0x0b
		ANS[1][0]=buffer[1][0]/det;
    3712:	5c e0       	ldi	r21, 0x0C	; 12
    3714:	c5 2e       	mov	r12, r21
    3716:	d1 2c       	mov	r13, r1
    3718:	c2 0c       	add	r12, r2
    371a:	d3 1c       	adc	r13, r3
    371c:	6d 8d       	ldd	r22, Y+29	; 0x1d
    371e:	7e 8d       	ldd	r23, Y+30	; 0x1e
    3720:	8f 8d       	ldd	r24, Y+31	; 0x1f
    3722:	98 a1       	ldd	r25, Y+32	; 0x20
    3724:	2d 81       	ldd	r18, Y+5	; 0x05
    3726:	3e 81       	ldd	r19, Y+6	; 0x06
    3728:	4f 81       	ldd	r20, Y+7	; 0x07
    372a:	58 85       	ldd	r21, Y+8	; 0x08
    372c:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    3730:	7b 01       	movw	r14, r22
    3732:	8c 01       	movw	r16, r24
    3734:	c3 01       	movw	r24, r6
    3736:	b2 01       	movw	r22, r4
    3738:	29 89       	ldd	r18, Y+17	; 0x11
    373a:	3a 89       	ldd	r19, Y+18	; 0x12
    373c:	4b 89       	ldd	r20, Y+19	; 0x13
    373e:	5c 89       	ldd	r21, Y+20	; 0x14
    3740:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    3744:	9b 01       	movw	r18, r22
    3746:	ac 01       	movw	r20, r24
    3748:	c8 01       	movw	r24, r16
    374a:	b7 01       	movw	r22, r14
    374c:	0e 94 88 1c 	call	0x3910	; 0x3910 <__subsf3>
    3750:	90 58       	subi	r25, 0x80	; 128
    3752:	a5 01       	movw	r20, r10
    3754:	94 01       	movw	r18, r8
    3756:	0e 94 f1 1c 	call	0x39e2	; 0x39e2 <__divsf3>
    375a:	d1 01       	movw	r26, r2
    375c:	1c 96       	adiw	r26, 0x0c	; 12
    375e:	6d 93       	st	X+, r22
    3760:	7d 93       	st	X+, r23
    3762:	8d 93       	st	X+, r24
    3764:	9c 93       	st	X, r25
    3766:	1f 97       	sbiw	r26, 0x0f	; 15
		ANS[1][1]=buffer[1][1]/det;
    3768:	6d 8d       	ldd	r22, Y+29	; 0x1d
    376a:	7e 8d       	ldd	r23, Y+30	; 0x1e
    376c:	8f 8d       	ldd	r24, Y+31	; 0x1f
    376e:	98 a1       	ldd	r25, Y+32	; 0x20
    3770:	29 81       	ldd	r18, Y+1	; 0x01
    3772:	3a 81       	ldd	r19, Y+2	; 0x02
    3774:	4b 81       	ldd	r20, Y+3	; 0x03
    3776:	5c 81       	ldd	r21, Y+4	; 0x04
    3778:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    377c:	7b 01       	movw	r14, r22
    377e:	8c 01       	movw	r16, r24
    3780:	c3 01       	movw	r24, r6
    3782:	b2 01       	movw	r22, r4
    3784:	29 85       	ldd	r18, Y+9	; 0x09
    3786:	3a 85       	ldd	r19, Y+10	; 0x0a
    3788:	4b 85       	ldd	r20, Y+11	; 0x0b
    378a:	5c 85       	ldd	r21, Y+12	; 0x0c
    378c:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    3790:	9b 01       	movw	r18, r22
    3792:	ac 01       	movw	r20, r24
    3794:	c8 01       	movw	r24, r16
    3796:	b7 01       	movw	r22, r14
    3798:	0e 94 88 1c 	call	0x3910	; 0x3910 <__subsf3>
    379c:	a5 01       	movw	r20, r10
    379e:	94 01       	movw	r18, r8
    37a0:	0e 94 f1 1c 	call	0x39e2	; 0x39e2 <__divsf3>
    37a4:	f6 01       	movw	r30, r12
    37a6:	64 83       	std	Z+4, r22	; 0x04
    37a8:	75 83       	std	Z+5, r23	; 0x05
    37aa:	86 83       	std	Z+6, r24	; 0x06
    37ac:	97 83       	std	Z+7, r25	; 0x07
		ANS[1][2]=buffer[1][2]/det;
    37ae:	69 89       	ldd	r22, Y+17	; 0x11
    37b0:	7a 89       	ldd	r23, Y+18	; 0x12
    37b2:	8b 89       	ldd	r24, Y+19	; 0x13
    37b4:	9c 89       	ldd	r25, Y+20	; 0x14
    37b6:	29 81       	ldd	r18, Y+1	; 0x01
    37b8:	3a 81       	ldd	r19, Y+2	; 0x02
    37ba:	4b 81       	ldd	r20, Y+3	; 0x03
    37bc:	5c 81       	ldd	r21, Y+4	; 0x04
    37be:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    37c2:	7b 01       	movw	r14, r22
    37c4:	8c 01       	movw	r16, r24
    37c6:	6d 81       	ldd	r22, Y+5	; 0x05
    37c8:	7e 81       	ldd	r23, Y+6	; 0x06
    37ca:	8f 81       	ldd	r24, Y+7	; 0x07
    37cc:	98 85       	ldd	r25, Y+8	; 0x08
    37ce:	29 85       	ldd	r18, Y+9	; 0x09
    37d0:	3a 85       	ldd	r19, Y+10	; 0x0a
    37d2:	4b 85       	ldd	r20, Y+11	; 0x0b
    37d4:	5c 85       	ldd	r21, Y+12	; 0x0c
    37d6:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    37da:	9b 01       	movw	r18, r22
    37dc:	ac 01       	movw	r20, r24
    37de:	c8 01       	movw	r24, r16
    37e0:	b7 01       	movw	r22, r14
    37e2:	0e 94 88 1c 	call	0x3910	; 0x3910 <__subsf3>
    37e6:	90 58       	subi	r25, 0x80	; 128
    37e8:	a5 01       	movw	r20, r10
    37ea:	94 01       	movw	r18, r8
    37ec:	0e 94 f1 1c 	call	0x39e2	; 0x39e2 <__divsf3>
    37f0:	d6 01       	movw	r26, r12
    37f2:	18 96       	adiw	r26, 0x08	; 8
    37f4:	6d 93       	st	X+, r22
    37f6:	7d 93       	st	X+, r23
    37f8:	8d 93       	st	X+, r24
    37fa:	9c 93       	st	X, r25
    37fc:	1b 97       	sbiw	r26, 0x0b	; 11
		ANS[2][0]=buffer[2][0]/det;
    37fe:	48 e1       	ldi	r20, 0x18	; 24
    3800:	c4 2e       	mov	r12, r20
    3802:	d1 2c       	mov	r13, r1
    3804:	c2 0c       	add	r12, r2
    3806:	d3 1c       	adc	r13, r3
    3808:	6d 89       	ldd	r22, Y+21	; 0x15
    380a:	7e 89       	ldd	r23, Y+22	; 0x16
    380c:	8f 89       	ldd	r24, Y+23	; 0x17
    380e:	98 8d       	ldd	r25, Y+24	; 0x18
    3810:	2d 81       	ldd	r18, Y+5	; 0x05
    3812:	3e 81       	ldd	r19, Y+6	; 0x06
    3814:	4f 81       	ldd	r20, Y+7	; 0x07
    3816:	58 85       	ldd	r21, Y+8	; 0x08
    3818:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    381c:	7b 01       	movw	r14, r22
    381e:	8c 01       	movw	r16, r24
    3820:	c3 01       	movw	r24, r6
    3822:	b2 01       	movw	r22, r4
    3824:	29 8d       	ldd	r18, Y+25	; 0x19
    3826:	3a 8d       	ldd	r19, Y+26	; 0x1a
    3828:	4b 8d       	ldd	r20, Y+27	; 0x1b
    382a:	5c 8d       	ldd	r21, Y+28	; 0x1c
    382c:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    3830:	9b 01       	movw	r18, r22
    3832:	ac 01       	movw	r20, r24
    3834:	c8 01       	movw	r24, r16
    3836:	b7 01       	movw	r22, r14
    3838:	0e 94 88 1c 	call	0x3910	; 0x3910 <__subsf3>
    383c:	a5 01       	movw	r20, r10
    383e:	94 01       	movw	r18, r8
    3840:	0e 94 f1 1c 	call	0x39e2	; 0x39e2 <__divsf3>
    3844:	f1 01       	movw	r30, r2
    3846:	60 8f       	std	Z+24, r22	; 0x18
    3848:	71 8f       	std	Z+25, r23	; 0x19
    384a:	82 8f       	std	Z+26, r24	; 0x1a
    384c:	93 8f       	std	Z+27, r25	; 0x1b
		ANS[2][1]=buffer[2][1]/det;
    384e:	6d 89       	ldd	r22, Y+21	; 0x15
    3850:	7e 89       	ldd	r23, Y+22	; 0x16
    3852:	8f 89       	ldd	r24, Y+23	; 0x17
    3854:	98 8d       	ldd	r25, Y+24	; 0x18
    3856:	29 81       	ldd	r18, Y+1	; 0x01
    3858:	3a 81       	ldd	r19, Y+2	; 0x02
    385a:	4b 81       	ldd	r20, Y+3	; 0x03
    385c:	5c 81       	ldd	r21, Y+4	; 0x04
    385e:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    3862:	7b 01       	movw	r14, r22
    3864:	8c 01       	movw	r16, r24
    3866:	c3 01       	movw	r24, r6
    3868:	b2 01       	movw	r22, r4
    386a:	2d 85       	ldd	r18, Y+13	; 0x0d
    386c:	3e 85       	ldd	r19, Y+14	; 0x0e
    386e:	4f 85       	ldd	r20, Y+15	; 0x0f
    3870:	58 89       	ldd	r21, Y+16	; 0x10
    3872:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    3876:	9b 01       	movw	r18, r22
    3878:	ac 01       	movw	r20, r24
    387a:	c8 01       	movw	r24, r16
    387c:	b7 01       	movw	r22, r14
    387e:	0e 94 88 1c 	call	0x3910	; 0x3910 <__subsf3>
    3882:	90 58       	subi	r25, 0x80	; 128
    3884:	a5 01       	movw	r20, r10
    3886:	94 01       	movw	r18, r8
    3888:	0e 94 f1 1c 	call	0x39e2	; 0x39e2 <__divsf3>
    388c:	d6 01       	movw	r26, r12
    388e:	14 96       	adiw	r26, 0x04	; 4
    3890:	6d 93       	st	X+, r22
    3892:	7d 93       	st	X+, r23
    3894:	8d 93       	st	X+, r24
    3896:	9c 93       	st	X, r25
    3898:	17 97       	sbiw	r26, 0x07	; 7
		ANS[2][2]=buffer[2][2]/det;
    389a:	69 8d       	ldd	r22, Y+25	; 0x19
    389c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    389e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    38a0:	9c 8d       	ldd	r25, Y+28	; 0x1c
    38a2:	29 81       	ldd	r18, Y+1	; 0x01
    38a4:	3a 81       	ldd	r19, Y+2	; 0x02
    38a6:	4b 81       	ldd	r20, Y+3	; 0x03
    38a8:	5c 81       	ldd	r21, Y+4	; 0x04
    38aa:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    38ae:	7b 01       	movw	r14, r22
    38b0:	8c 01       	movw	r16, r24
    38b2:	6d 81       	ldd	r22, Y+5	; 0x05
    38b4:	7e 81       	ldd	r23, Y+6	; 0x06
    38b6:	8f 81       	ldd	r24, Y+7	; 0x07
    38b8:	98 85       	ldd	r25, Y+8	; 0x08
    38ba:	2d 85       	ldd	r18, Y+13	; 0x0d
    38bc:	3e 85       	ldd	r19, Y+14	; 0x0e
    38be:	4f 85       	ldd	r20, Y+15	; 0x0f
    38c0:	58 89       	ldd	r21, Y+16	; 0x10
    38c2:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <__mulsf3>
    38c6:	9b 01       	movw	r18, r22
    38c8:	ac 01       	movw	r20, r24
    38ca:	c8 01       	movw	r24, r16
    38cc:	b7 01       	movw	r22, r14
    38ce:	0e 94 88 1c 	call	0x3910	; 0x3910 <__subsf3>
    38d2:	a5 01       	movw	r20, r10
    38d4:	94 01       	movw	r18, r8
    38d6:	0e 94 f1 1c 	call	0x39e2	; 0x39e2 <__divsf3>
    38da:	f6 01       	movw	r30, r12
    38dc:	60 87       	std	Z+8, r22	; 0x08
    38de:	71 87       	std	Z+9, r23	; 0x09
    38e0:	82 87       	std	Z+10, r24	; 0x0a
    38e2:	93 87       	std	Z+11, r25	; 0x0b
	}
}
    38e4:	ac 96       	adiw	r28, 0x2c	; 44
    38e6:	cd bf       	out	0x3d, r28	; 61
    38e8:	de bf       	out	0x3e, r29	; 62
    38ea:	cf 91       	pop	r28
    38ec:	df 91       	pop	r29
    38ee:	1f 91       	pop	r17
    38f0:	0f 91       	pop	r16
    38f2:	ff 90       	pop	r15
    38f4:	ef 90       	pop	r14
    38f6:	df 90       	pop	r13
    38f8:	cf 90       	pop	r12
    38fa:	bf 90       	pop	r11
    38fc:	af 90       	pop	r10
    38fe:	9f 90       	pop	r9
    3900:	8f 90       	pop	r8
    3902:	7f 90       	pop	r7
    3904:	6f 90       	pop	r6
    3906:	5f 90       	pop	r5
    3908:	4f 90       	pop	r4
    390a:	3f 90       	pop	r3
    390c:	2f 90       	pop	r2
    390e:	08 95       	ret

00003910 <__subsf3>:
    3910:	50 58       	subi	r21, 0x80	; 128

00003912 <__addsf3>:
    3912:	bb 27       	eor	r27, r27
    3914:	aa 27       	eor	r26, r26
    3916:	0e d0       	rcall	.+28     	; 0x3934 <__addsf3x>
    3918:	07 c1       	rjmp	.+526    	; 0x3b28 <__fp_round>
    391a:	f8 d0       	rcall	.+496    	; 0x3b0c <__fp_pscA>
    391c:	30 f0       	brcs	.+12     	; 0x392a <__addsf3+0x18>
    391e:	fd d0       	rcall	.+506    	; 0x3b1a <__fp_pscB>
    3920:	20 f0       	brcs	.+8      	; 0x392a <__addsf3+0x18>
    3922:	31 f4       	brne	.+12     	; 0x3930 <__addsf3+0x1e>
    3924:	9f 3f       	cpi	r25, 0xFF	; 255
    3926:	11 f4       	brne	.+4      	; 0x392c <__addsf3+0x1a>
    3928:	1e f4       	brtc	.+6      	; 0x3930 <__addsf3+0x1e>
    392a:	ed c0       	rjmp	.+474    	; 0x3b06 <__fp_nan>
    392c:	0e f4       	brtc	.+2      	; 0x3930 <__addsf3+0x1e>
    392e:	e0 95       	com	r30
    3930:	e7 fb       	bst	r30, 7
    3932:	e3 c0       	rjmp	.+454    	; 0x3afa <__fp_inf>

00003934 <__addsf3x>:
    3934:	e9 2f       	mov	r30, r25
    3936:	09 d1       	rcall	.+530    	; 0x3b4a <__fp_split3>
    3938:	80 f3       	brcs	.-32     	; 0x391a <__addsf3+0x8>
    393a:	ba 17       	cp	r27, r26
    393c:	62 07       	cpc	r22, r18
    393e:	73 07       	cpc	r23, r19
    3940:	84 07       	cpc	r24, r20
    3942:	95 07       	cpc	r25, r21
    3944:	18 f0       	brcs	.+6      	; 0x394c <__addsf3x+0x18>
    3946:	71 f4       	brne	.+28     	; 0x3964 <__addsf3x+0x30>
    3948:	9e f5       	brtc	.+102    	; 0x39b0 <__addsf3x+0x7c>
    394a:	21 c1       	rjmp	.+578    	; 0x3b8e <__fp_zero>
    394c:	0e f4       	brtc	.+2      	; 0x3950 <__addsf3x+0x1c>
    394e:	e0 95       	com	r30
    3950:	0b 2e       	mov	r0, r27
    3952:	ba 2f       	mov	r27, r26
    3954:	a0 2d       	mov	r26, r0
    3956:	0b 01       	movw	r0, r22
    3958:	b9 01       	movw	r22, r18
    395a:	90 01       	movw	r18, r0
    395c:	0c 01       	movw	r0, r24
    395e:	ca 01       	movw	r24, r20
    3960:	a0 01       	movw	r20, r0
    3962:	11 24       	eor	r1, r1
    3964:	ff 27       	eor	r31, r31
    3966:	59 1b       	sub	r21, r25
    3968:	99 f0       	breq	.+38     	; 0x3990 <__addsf3x+0x5c>
    396a:	59 3f       	cpi	r21, 0xF9	; 249
    396c:	50 f4       	brcc	.+20     	; 0x3982 <__addsf3x+0x4e>
    396e:	50 3e       	cpi	r21, 0xE0	; 224
    3970:	68 f1       	brcs	.+90     	; 0x39cc <__addsf3x+0x98>
    3972:	1a 16       	cp	r1, r26
    3974:	f0 40       	sbci	r31, 0x00	; 0
    3976:	a2 2f       	mov	r26, r18
    3978:	23 2f       	mov	r18, r19
    397a:	34 2f       	mov	r19, r20
    397c:	44 27       	eor	r20, r20
    397e:	58 5f       	subi	r21, 0xF8	; 248
    3980:	f3 cf       	rjmp	.-26     	; 0x3968 <__addsf3x+0x34>
    3982:	46 95       	lsr	r20
    3984:	37 95       	ror	r19
    3986:	27 95       	ror	r18
    3988:	a7 95       	ror	r26
    398a:	f0 40       	sbci	r31, 0x00	; 0
    398c:	53 95       	inc	r21
    398e:	c9 f7       	brne	.-14     	; 0x3982 <__addsf3x+0x4e>
    3990:	7e f4       	brtc	.+30     	; 0x39b0 <__addsf3x+0x7c>
    3992:	1f 16       	cp	r1, r31
    3994:	ba 0b       	sbc	r27, r26
    3996:	62 0b       	sbc	r22, r18
    3998:	73 0b       	sbc	r23, r19
    399a:	84 0b       	sbc	r24, r20
    399c:	ba f0       	brmi	.+46     	; 0x39cc <__addsf3x+0x98>
    399e:	91 50       	subi	r25, 0x01	; 1
    39a0:	a1 f0       	breq	.+40     	; 0x39ca <__addsf3x+0x96>
    39a2:	ff 0f       	add	r31, r31
    39a4:	bb 1f       	adc	r27, r27
    39a6:	66 1f       	adc	r22, r22
    39a8:	77 1f       	adc	r23, r23
    39aa:	88 1f       	adc	r24, r24
    39ac:	c2 f7       	brpl	.-16     	; 0x399e <__addsf3x+0x6a>
    39ae:	0e c0       	rjmp	.+28     	; 0x39cc <__addsf3x+0x98>
    39b0:	ba 0f       	add	r27, r26
    39b2:	62 1f       	adc	r22, r18
    39b4:	73 1f       	adc	r23, r19
    39b6:	84 1f       	adc	r24, r20
    39b8:	48 f4       	brcc	.+18     	; 0x39cc <__addsf3x+0x98>
    39ba:	87 95       	ror	r24
    39bc:	77 95       	ror	r23
    39be:	67 95       	ror	r22
    39c0:	b7 95       	ror	r27
    39c2:	f7 95       	ror	r31
    39c4:	9e 3f       	cpi	r25, 0xFE	; 254
    39c6:	08 f0       	brcs	.+2      	; 0x39ca <__addsf3x+0x96>
    39c8:	b3 cf       	rjmp	.-154    	; 0x3930 <__addsf3+0x1e>
    39ca:	93 95       	inc	r25
    39cc:	88 0f       	add	r24, r24
    39ce:	08 f0       	brcs	.+2      	; 0x39d2 <__addsf3x+0x9e>
    39d0:	99 27       	eor	r25, r25
    39d2:	ee 0f       	add	r30, r30
    39d4:	97 95       	ror	r25
    39d6:	87 95       	ror	r24
    39d8:	08 95       	ret

000039da <__cmpsf2>:
    39da:	6b d0       	rcall	.+214    	; 0x3ab2 <__fp_cmp>
    39dc:	08 f4       	brcc	.+2      	; 0x39e0 <__cmpsf2+0x6>
    39de:	81 e0       	ldi	r24, 0x01	; 1
    39e0:	08 95       	ret

000039e2 <__divsf3>:
    39e2:	0c d0       	rcall	.+24     	; 0x39fc <__divsf3x>
    39e4:	a1 c0       	rjmp	.+322    	; 0x3b28 <__fp_round>
    39e6:	99 d0       	rcall	.+306    	; 0x3b1a <__fp_pscB>
    39e8:	40 f0       	brcs	.+16     	; 0x39fa <__divsf3+0x18>
    39ea:	90 d0       	rcall	.+288    	; 0x3b0c <__fp_pscA>
    39ec:	30 f0       	brcs	.+12     	; 0x39fa <__divsf3+0x18>
    39ee:	21 f4       	brne	.+8      	; 0x39f8 <__divsf3+0x16>
    39f0:	5f 3f       	cpi	r21, 0xFF	; 255
    39f2:	19 f0       	breq	.+6      	; 0x39fa <__divsf3+0x18>
    39f4:	82 c0       	rjmp	.+260    	; 0x3afa <__fp_inf>
    39f6:	51 11       	cpse	r21, r1
    39f8:	cb c0       	rjmp	.+406    	; 0x3b90 <__fp_szero>
    39fa:	85 c0       	rjmp	.+266    	; 0x3b06 <__fp_nan>

000039fc <__divsf3x>:
    39fc:	a6 d0       	rcall	.+332    	; 0x3b4a <__fp_split3>
    39fe:	98 f3       	brcs	.-26     	; 0x39e6 <__divsf3+0x4>

00003a00 <__divsf3_pse>:
    3a00:	99 23       	and	r25, r25
    3a02:	c9 f3       	breq	.-14     	; 0x39f6 <__divsf3+0x14>
    3a04:	55 23       	and	r21, r21
    3a06:	b1 f3       	breq	.-20     	; 0x39f4 <__divsf3+0x12>
    3a08:	95 1b       	sub	r25, r21
    3a0a:	55 0b       	sbc	r21, r21
    3a0c:	bb 27       	eor	r27, r27
    3a0e:	aa 27       	eor	r26, r26
    3a10:	62 17       	cp	r22, r18
    3a12:	73 07       	cpc	r23, r19
    3a14:	84 07       	cpc	r24, r20
    3a16:	38 f0       	brcs	.+14     	; 0x3a26 <__divsf3_pse+0x26>
    3a18:	9f 5f       	subi	r25, 0xFF	; 255
    3a1a:	5f 4f       	sbci	r21, 0xFF	; 255
    3a1c:	22 0f       	add	r18, r18
    3a1e:	33 1f       	adc	r19, r19
    3a20:	44 1f       	adc	r20, r20
    3a22:	aa 1f       	adc	r26, r26
    3a24:	a9 f3       	breq	.-22     	; 0x3a10 <__divsf3_pse+0x10>
    3a26:	33 d0       	rcall	.+102    	; 0x3a8e <__divsf3_pse+0x8e>
    3a28:	0e 2e       	mov	r0, r30
    3a2a:	3a f0       	brmi	.+14     	; 0x3a3a <__divsf3_pse+0x3a>
    3a2c:	e0 e8       	ldi	r30, 0x80	; 128
    3a2e:	30 d0       	rcall	.+96     	; 0x3a90 <__divsf3_pse+0x90>
    3a30:	91 50       	subi	r25, 0x01	; 1
    3a32:	50 40       	sbci	r21, 0x00	; 0
    3a34:	e6 95       	lsr	r30
    3a36:	00 1c       	adc	r0, r0
    3a38:	ca f7       	brpl	.-14     	; 0x3a2c <__divsf3_pse+0x2c>
    3a3a:	29 d0       	rcall	.+82     	; 0x3a8e <__divsf3_pse+0x8e>
    3a3c:	fe 2f       	mov	r31, r30
    3a3e:	27 d0       	rcall	.+78     	; 0x3a8e <__divsf3_pse+0x8e>
    3a40:	66 0f       	add	r22, r22
    3a42:	77 1f       	adc	r23, r23
    3a44:	88 1f       	adc	r24, r24
    3a46:	bb 1f       	adc	r27, r27
    3a48:	26 17       	cp	r18, r22
    3a4a:	37 07       	cpc	r19, r23
    3a4c:	48 07       	cpc	r20, r24
    3a4e:	ab 07       	cpc	r26, r27
    3a50:	b0 e8       	ldi	r27, 0x80	; 128
    3a52:	09 f0       	breq	.+2      	; 0x3a56 <__divsf3_pse+0x56>
    3a54:	bb 0b       	sbc	r27, r27
    3a56:	80 2d       	mov	r24, r0
    3a58:	bf 01       	movw	r22, r30
    3a5a:	ff 27       	eor	r31, r31
    3a5c:	93 58       	subi	r25, 0x83	; 131
    3a5e:	5f 4f       	sbci	r21, 0xFF	; 255
    3a60:	2a f0       	brmi	.+10     	; 0x3a6c <__divsf3_pse+0x6c>
    3a62:	9e 3f       	cpi	r25, 0xFE	; 254
    3a64:	51 05       	cpc	r21, r1
    3a66:	68 f0       	brcs	.+26     	; 0x3a82 <__divsf3_pse+0x82>
    3a68:	48 c0       	rjmp	.+144    	; 0x3afa <__fp_inf>
    3a6a:	92 c0       	rjmp	.+292    	; 0x3b90 <__fp_szero>
    3a6c:	5f 3f       	cpi	r21, 0xFF	; 255
    3a6e:	ec f3       	brlt	.-6      	; 0x3a6a <__divsf3_pse+0x6a>
    3a70:	98 3e       	cpi	r25, 0xE8	; 232
    3a72:	dc f3       	brlt	.-10     	; 0x3a6a <__divsf3_pse+0x6a>
    3a74:	86 95       	lsr	r24
    3a76:	77 95       	ror	r23
    3a78:	67 95       	ror	r22
    3a7a:	b7 95       	ror	r27
    3a7c:	f7 95       	ror	r31
    3a7e:	9f 5f       	subi	r25, 0xFF	; 255
    3a80:	c9 f7       	brne	.-14     	; 0x3a74 <__divsf3_pse+0x74>
    3a82:	88 0f       	add	r24, r24
    3a84:	91 1d       	adc	r25, r1
    3a86:	96 95       	lsr	r25
    3a88:	87 95       	ror	r24
    3a8a:	97 f9       	bld	r25, 7
    3a8c:	08 95       	ret
    3a8e:	e1 e0       	ldi	r30, 0x01	; 1
    3a90:	66 0f       	add	r22, r22
    3a92:	77 1f       	adc	r23, r23
    3a94:	88 1f       	adc	r24, r24
    3a96:	bb 1f       	adc	r27, r27
    3a98:	62 17       	cp	r22, r18
    3a9a:	73 07       	cpc	r23, r19
    3a9c:	84 07       	cpc	r24, r20
    3a9e:	ba 07       	cpc	r27, r26
    3aa0:	20 f0       	brcs	.+8      	; 0x3aaa <__divsf3_pse+0xaa>
    3aa2:	62 1b       	sub	r22, r18
    3aa4:	73 0b       	sbc	r23, r19
    3aa6:	84 0b       	sbc	r24, r20
    3aa8:	ba 0b       	sbc	r27, r26
    3aaa:	ee 1f       	adc	r30, r30
    3aac:	88 f7       	brcc	.-30     	; 0x3a90 <__divsf3_pse+0x90>
    3aae:	e0 95       	com	r30
    3ab0:	08 95       	ret

00003ab2 <__fp_cmp>:
    3ab2:	99 0f       	add	r25, r25
    3ab4:	00 08       	sbc	r0, r0
    3ab6:	55 0f       	add	r21, r21
    3ab8:	aa 0b       	sbc	r26, r26
    3aba:	e0 e8       	ldi	r30, 0x80	; 128
    3abc:	fe ef       	ldi	r31, 0xFE	; 254
    3abe:	16 16       	cp	r1, r22
    3ac0:	17 06       	cpc	r1, r23
    3ac2:	e8 07       	cpc	r30, r24
    3ac4:	f9 07       	cpc	r31, r25
    3ac6:	c0 f0       	brcs	.+48     	; 0x3af8 <__fp_cmp+0x46>
    3ac8:	12 16       	cp	r1, r18
    3aca:	13 06       	cpc	r1, r19
    3acc:	e4 07       	cpc	r30, r20
    3ace:	f5 07       	cpc	r31, r21
    3ad0:	98 f0       	brcs	.+38     	; 0x3af8 <__fp_cmp+0x46>
    3ad2:	62 1b       	sub	r22, r18
    3ad4:	73 0b       	sbc	r23, r19
    3ad6:	84 0b       	sbc	r24, r20
    3ad8:	95 0b       	sbc	r25, r21
    3ada:	39 f4       	brne	.+14     	; 0x3aea <__fp_cmp+0x38>
    3adc:	0a 26       	eor	r0, r26
    3ade:	61 f0       	breq	.+24     	; 0x3af8 <__fp_cmp+0x46>
    3ae0:	23 2b       	or	r18, r19
    3ae2:	24 2b       	or	r18, r20
    3ae4:	25 2b       	or	r18, r21
    3ae6:	21 f4       	brne	.+8      	; 0x3af0 <__fp_cmp+0x3e>
    3ae8:	08 95       	ret
    3aea:	0a 26       	eor	r0, r26
    3aec:	09 f4       	brne	.+2      	; 0x3af0 <__fp_cmp+0x3e>
    3aee:	a1 40       	sbci	r26, 0x01	; 1
    3af0:	a6 95       	lsr	r26
    3af2:	8f ef       	ldi	r24, 0xFF	; 255
    3af4:	81 1d       	adc	r24, r1
    3af6:	81 1d       	adc	r24, r1
    3af8:	08 95       	ret

00003afa <__fp_inf>:
    3afa:	97 f9       	bld	r25, 7
    3afc:	9f 67       	ori	r25, 0x7F	; 127
    3afe:	80 e8       	ldi	r24, 0x80	; 128
    3b00:	70 e0       	ldi	r23, 0x00	; 0
    3b02:	60 e0       	ldi	r22, 0x00	; 0
    3b04:	08 95       	ret

00003b06 <__fp_nan>:
    3b06:	9f ef       	ldi	r25, 0xFF	; 255
    3b08:	80 ec       	ldi	r24, 0xC0	; 192
    3b0a:	08 95       	ret

00003b0c <__fp_pscA>:
    3b0c:	00 24       	eor	r0, r0
    3b0e:	0a 94       	dec	r0
    3b10:	16 16       	cp	r1, r22
    3b12:	17 06       	cpc	r1, r23
    3b14:	18 06       	cpc	r1, r24
    3b16:	09 06       	cpc	r0, r25
    3b18:	08 95       	ret

00003b1a <__fp_pscB>:
    3b1a:	00 24       	eor	r0, r0
    3b1c:	0a 94       	dec	r0
    3b1e:	12 16       	cp	r1, r18
    3b20:	13 06       	cpc	r1, r19
    3b22:	14 06       	cpc	r1, r20
    3b24:	05 06       	cpc	r0, r21
    3b26:	08 95       	ret

00003b28 <__fp_round>:
    3b28:	09 2e       	mov	r0, r25
    3b2a:	03 94       	inc	r0
    3b2c:	00 0c       	add	r0, r0
    3b2e:	11 f4       	brne	.+4      	; 0x3b34 <__fp_round+0xc>
    3b30:	88 23       	and	r24, r24
    3b32:	52 f0       	brmi	.+20     	; 0x3b48 <__fp_round+0x20>
    3b34:	bb 0f       	add	r27, r27
    3b36:	40 f4       	brcc	.+16     	; 0x3b48 <__fp_round+0x20>
    3b38:	bf 2b       	or	r27, r31
    3b3a:	11 f4       	brne	.+4      	; 0x3b40 <__fp_round+0x18>
    3b3c:	60 ff       	sbrs	r22, 0
    3b3e:	04 c0       	rjmp	.+8      	; 0x3b48 <__fp_round+0x20>
    3b40:	6f 5f       	subi	r22, 0xFF	; 255
    3b42:	7f 4f       	sbci	r23, 0xFF	; 255
    3b44:	8f 4f       	sbci	r24, 0xFF	; 255
    3b46:	9f 4f       	sbci	r25, 0xFF	; 255
    3b48:	08 95       	ret

00003b4a <__fp_split3>:
    3b4a:	57 fd       	sbrc	r21, 7
    3b4c:	90 58       	subi	r25, 0x80	; 128
    3b4e:	44 0f       	add	r20, r20
    3b50:	55 1f       	adc	r21, r21
    3b52:	59 f0       	breq	.+22     	; 0x3b6a <__fp_splitA+0x10>
    3b54:	5f 3f       	cpi	r21, 0xFF	; 255
    3b56:	71 f0       	breq	.+28     	; 0x3b74 <__fp_splitA+0x1a>
    3b58:	47 95       	ror	r20

00003b5a <__fp_splitA>:
    3b5a:	88 0f       	add	r24, r24
    3b5c:	97 fb       	bst	r25, 7
    3b5e:	99 1f       	adc	r25, r25
    3b60:	61 f0       	breq	.+24     	; 0x3b7a <__fp_splitA+0x20>
    3b62:	9f 3f       	cpi	r25, 0xFF	; 255
    3b64:	79 f0       	breq	.+30     	; 0x3b84 <__fp_splitA+0x2a>
    3b66:	87 95       	ror	r24
    3b68:	08 95       	ret
    3b6a:	12 16       	cp	r1, r18
    3b6c:	13 06       	cpc	r1, r19
    3b6e:	14 06       	cpc	r1, r20
    3b70:	55 1f       	adc	r21, r21
    3b72:	f2 cf       	rjmp	.-28     	; 0x3b58 <__fp_split3+0xe>
    3b74:	46 95       	lsr	r20
    3b76:	f1 df       	rcall	.-30     	; 0x3b5a <__fp_splitA>
    3b78:	08 c0       	rjmp	.+16     	; 0x3b8a <__fp_splitA+0x30>
    3b7a:	16 16       	cp	r1, r22
    3b7c:	17 06       	cpc	r1, r23
    3b7e:	18 06       	cpc	r1, r24
    3b80:	99 1f       	adc	r25, r25
    3b82:	f1 cf       	rjmp	.-30     	; 0x3b66 <__fp_splitA+0xc>
    3b84:	86 95       	lsr	r24
    3b86:	71 05       	cpc	r23, r1
    3b88:	61 05       	cpc	r22, r1
    3b8a:	08 94       	sec
    3b8c:	08 95       	ret

00003b8e <__fp_zero>:
    3b8e:	e8 94       	clt

00003b90 <__fp_szero>:
    3b90:	bb 27       	eor	r27, r27
    3b92:	66 27       	eor	r22, r22
    3b94:	77 27       	eor	r23, r23
    3b96:	cb 01       	movw	r24, r22
    3b98:	97 f9       	bld	r25, 7
    3b9a:	08 95       	ret

00003b9c <__mulsf3>:
    3b9c:	0b d0       	rcall	.+22     	; 0x3bb4 <__mulsf3x>
    3b9e:	c4 cf       	rjmp	.-120    	; 0x3b28 <__fp_round>
    3ba0:	b5 df       	rcall	.-150    	; 0x3b0c <__fp_pscA>
    3ba2:	28 f0       	brcs	.+10     	; 0x3bae <__mulsf3+0x12>
    3ba4:	ba df       	rcall	.-140    	; 0x3b1a <__fp_pscB>
    3ba6:	18 f0       	brcs	.+6      	; 0x3bae <__mulsf3+0x12>
    3ba8:	95 23       	and	r25, r21
    3baa:	09 f0       	breq	.+2      	; 0x3bae <__mulsf3+0x12>
    3bac:	a6 cf       	rjmp	.-180    	; 0x3afa <__fp_inf>
    3bae:	ab cf       	rjmp	.-170    	; 0x3b06 <__fp_nan>
    3bb0:	11 24       	eor	r1, r1
    3bb2:	ee cf       	rjmp	.-36     	; 0x3b90 <__fp_szero>

00003bb4 <__mulsf3x>:
    3bb4:	ca df       	rcall	.-108    	; 0x3b4a <__fp_split3>
    3bb6:	a0 f3       	brcs	.-24     	; 0x3ba0 <__mulsf3+0x4>

00003bb8 <__mulsf3_pse>:
    3bb8:	95 9f       	mul	r25, r21
    3bba:	d1 f3       	breq	.-12     	; 0x3bb0 <__mulsf3+0x14>
    3bbc:	95 0f       	add	r25, r21
    3bbe:	50 e0       	ldi	r21, 0x00	; 0
    3bc0:	55 1f       	adc	r21, r21
    3bc2:	62 9f       	mul	r22, r18
    3bc4:	f0 01       	movw	r30, r0
    3bc6:	72 9f       	mul	r23, r18
    3bc8:	bb 27       	eor	r27, r27
    3bca:	f0 0d       	add	r31, r0
    3bcc:	b1 1d       	adc	r27, r1
    3bce:	63 9f       	mul	r22, r19
    3bd0:	aa 27       	eor	r26, r26
    3bd2:	f0 0d       	add	r31, r0
    3bd4:	b1 1d       	adc	r27, r1
    3bd6:	aa 1f       	adc	r26, r26
    3bd8:	64 9f       	mul	r22, r20
    3bda:	66 27       	eor	r22, r22
    3bdc:	b0 0d       	add	r27, r0
    3bde:	a1 1d       	adc	r26, r1
    3be0:	66 1f       	adc	r22, r22
    3be2:	82 9f       	mul	r24, r18
    3be4:	22 27       	eor	r18, r18
    3be6:	b0 0d       	add	r27, r0
    3be8:	a1 1d       	adc	r26, r1
    3bea:	62 1f       	adc	r22, r18
    3bec:	73 9f       	mul	r23, r19
    3bee:	b0 0d       	add	r27, r0
    3bf0:	a1 1d       	adc	r26, r1
    3bf2:	62 1f       	adc	r22, r18
    3bf4:	83 9f       	mul	r24, r19
    3bf6:	a0 0d       	add	r26, r0
    3bf8:	61 1d       	adc	r22, r1
    3bfa:	22 1f       	adc	r18, r18
    3bfc:	74 9f       	mul	r23, r20
    3bfe:	33 27       	eor	r19, r19
    3c00:	a0 0d       	add	r26, r0
    3c02:	61 1d       	adc	r22, r1
    3c04:	23 1f       	adc	r18, r19
    3c06:	84 9f       	mul	r24, r20
    3c08:	60 0d       	add	r22, r0
    3c0a:	21 1d       	adc	r18, r1
    3c0c:	82 2f       	mov	r24, r18
    3c0e:	76 2f       	mov	r23, r22
    3c10:	6a 2f       	mov	r22, r26
    3c12:	11 24       	eor	r1, r1
    3c14:	9f 57       	subi	r25, 0x7F	; 127
    3c16:	50 40       	sbci	r21, 0x00	; 0
    3c18:	8a f0       	brmi	.+34     	; 0x3c3c <__mulsf3_pse+0x84>
    3c1a:	e1 f0       	breq	.+56     	; 0x3c54 <__mulsf3_pse+0x9c>
    3c1c:	88 23       	and	r24, r24
    3c1e:	4a f0       	brmi	.+18     	; 0x3c32 <__mulsf3_pse+0x7a>
    3c20:	ee 0f       	add	r30, r30
    3c22:	ff 1f       	adc	r31, r31
    3c24:	bb 1f       	adc	r27, r27
    3c26:	66 1f       	adc	r22, r22
    3c28:	77 1f       	adc	r23, r23
    3c2a:	88 1f       	adc	r24, r24
    3c2c:	91 50       	subi	r25, 0x01	; 1
    3c2e:	50 40       	sbci	r21, 0x00	; 0
    3c30:	a9 f7       	brne	.-22     	; 0x3c1c <__mulsf3_pse+0x64>
    3c32:	9e 3f       	cpi	r25, 0xFE	; 254
    3c34:	51 05       	cpc	r21, r1
    3c36:	70 f0       	brcs	.+28     	; 0x3c54 <__mulsf3_pse+0x9c>
    3c38:	60 cf       	rjmp	.-320    	; 0x3afa <__fp_inf>
    3c3a:	aa cf       	rjmp	.-172    	; 0x3b90 <__fp_szero>
    3c3c:	5f 3f       	cpi	r21, 0xFF	; 255
    3c3e:	ec f3       	brlt	.-6      	; 0x3c3a <__mulsf3_pse+0x82>
    3c40:	98 3e       	cpi	r25, 0xE8	; 232
    3c42:	dc f3       	brlt	.-10     	; 0x3c3a <__mulsf3_pse+0x82>
    3c44:	86 95       	lsr	r24
    3c46:	77 95       	ror	r23
    3c48:	67 95       	ror	r22
    3c4a:	b7 95       	ror	r27
    3c4c:	f7 95       	ror	r31
    3c4e:	e7 95       	ror	r30
    3c50:	9f 5f       	subi	r25, 0xFF	; 255
    3c52:	c1 f7       	brne	.-16     	; 0x3c44 <__mulsf3_pse+0x8c>
    3c54:	fe 2b       	or	r31, r30
    3c56:	88 0f       	add	r24, r24
    3c58:	91 1d       	adc	r25, r1
    3c5a:	96 95       	lsr	r25
    3c5c:	87 95       	ror	r24
    3c5e:	97 f9       	bld	r25, 7
    3c60:	08 95       	ret

00003c62 <_exit>:
    3c62:	f8 94       	cli

00003c64 <__stop_program>:
    3c64:	ff cf       	rjmp	.-2      	; 0x3c64 <__stop_program>
